{
  "#/components/errors/BLOCK_NOT_FOUND": {
    "code": 24,
    "message": "Block not found"
  },
  "#/components/errors/CLASS_HASH_NOT_FOUND": {
    "code": 28,
    "message": "Class hash not found"
  },
  "#/components/errors/CONTRACT_ERROR": {
    "code": 40,
    "message": "Contract error"
  },
  "#/components/errors/CONTRACT_NOT_FOUND": {
    "code": 20,
    "message": "Contract not found"
  },
  "#/components/errors/FAILED_TO_RECEIVE_TXN": {
    "code": 1,
    "message": "Failed to write transaction"
  },
  "#/components/errors/INVALID_CONTINUATION_TOKEN": {
    "code": 33,
    "message": "The supplied continuation token is invalid or unknown"
  },
  "#/components/errors/INVALID_TXN_INDEX": {
    "code": 27,
    "message": "Invalid transaction index in a block"
  },
  "#/components/errors/NO_BLOCKS": {
    "code": 32,
    "message": "There are no blocks"
  },
  "#/components/errors/PAGE_SIZE_TOO_BIG": {
    "code": 31,
    "message": "Requested page size is too big"
  },
  "#/components/errors/TOO_MANY_KEYS_IN_FILTER": {
    "code": 34,
    "message": "Too many keys provided in a filter"
  },
  "#/components/errors/TXN_HASH_NOT_FOUND": {
    "code": 29,
    "message": "Transaction hash not found"
  },
  "#/components/schemas/ADDRESS": {
    "$ref": {
      "#/components/schemas/FELT": {
        "description": "A field element. represented by at most 63 hex digits",
        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
        "title": "Field element",
        "type": "string"
      }
    },
    "title": "Address"
  },
  "#/components/schemas/BLOCK_BODY_WITH_TXS": {
    "properties": {
      "transactions": {
        "description": "The transactions in this block",
        "items": {
          "allOf": [
            {
              "$ref": {
                "#/components/schemas/TXN": {
                  "description": "The transaction schema, as it appears inside a block",
                  "oneOf": [
                    {
                      "$ref": {
                        "#/components/schemas/INVOKE_TXN": {
                          "description": "Initiate a transaction from an account",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN_V0": {
                                  "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                  "properties": {
                                    "calldata": {
                                      "description": "The parameters passed to the function",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Calldata",
                                      "type": "array"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "Contract address"
                                    },
                                    "entry_point_selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Entry point selector"
                                    },
                                    "max_fee": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The maximal fee that can be charged for including the transaction",
                                      "title": "Max fee"
                                    },
                                    "signature": {
                                      "$ref": {
                                        "#/components/schemas/SIGNATURE": {
                                          "description": "A transaction signature",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Signature",
                                          "type": "array"
                                        }
                                      },
                                      "title": "Signature"
                                    },
                                    "type": {
                                      "enum": [
                                        "INVOKE"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    },
                                    "version": {
                                      "description": "Version of the transaction scheme",
                                      "enum": [
                                        "0x0"
                                      ],
                                      "title": "Version",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "contract_address",
                                    "entry_point_selector",
                                    "calldata",
                                    "max_fee",
                                    "version",
                                    "signature"
                                  ],
                                  "title": "Invoke transaction V0"
                                }
                              },
                              "title": "Invoke transaction V0"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN_V1": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "calldata": {
                                          "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "calldata",
                                          "type": "array"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "title": "sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "INVOKE"
                                          ],
                                          "title": "Type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x1"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "calldata",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "type": "object"
                                    }
                                  ],
                                  "description": "initiates a transaction from a given account",
                                  "title": "Invoke transaction V1"
                                }
                              },
                              "title": "Invoke transaction V1"
                            }
                          ],
                          "title": "Invoke transaction"
                        }
                      },
                      "title": "Invoke transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/L1_HANDLER_TXN": {
                          "allOf": [
                            {
                              "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                              "properties": {
                                "nonce": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                  "title": "Nonce"
                                },
                                "type": {
                                  "enum": [
                                    "L1_HANDLER"
                                  ],
                                  "title": "type",
                                  "type": "string"
                                },
                                "version": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "Version of the transaction scheme",
                                  "title": "Version"
                                }
                              },
                              "required": [
                                "version",
                                "type",
                                "nonce"
                              ],
                              "title": "L1 handler transaction",
                              "type": "object"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/FUNCTION_CALL": {
                                  "description": "Function call information",
                                  "properties": {
                                    "calldata": {
                                      "description": "The parameters passed to the function",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Calldata",
                                      "type": "array"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "Contract address"
                                    },
                                    "entry_point_selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Entry point selector"
                                    }
                                  },
                                  "required": [
                                    "contract_address",
                                    "entry_point_selector",
                                    "calldata"
                                  ],
                                  "title": "Function call",
                                  "type": "object"
                                }
                              },
                              "title": "Function call"
                            }
                          ],
                          "title": "L1 Handler transaction"
                        }
                      },
                      "title": "L1 handler transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DECLARE_TXN": {
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V0": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x0"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "max_fee",
                                        "version",
                                        "signature"
                                      ],
                                      "title": "Declare txn v0",
                                      "type": "object"
                                    },
                                    {
                                      "oneOf": [
                                        {
                                          "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                          "properties": {
                                            "contract_class": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                  "description": "The definition of a StarkNet contract class",
                                                  "properties": {
                                                    "abi": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_ABI": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                "oneOf": [
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "inputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The function name",
                                                                            "title": "Function name",
                                                                            "type": "string"
                                                                          },
                                                                          "outputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "stateMutability": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                "enum": [
                                                                                  "view"
                                                                                ],
                                                                                "title": "Function state mutability type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function state mutability"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "function",
                                                                                  "l1_handler",
                                                                                  "constructor"
                                                                                ],
                                                                                "title": "Function ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "inputs",
                                                                          "outputs"
                                                                        ],
                                                                        "title": "Function ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Function ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "data": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "keys": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The event name",
                                                                            "title": "Event name",
                                                                            "type": "string"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "event"
                                                                                ],
                                                                                "title": "Event ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "keys",
                                                                          "data"
                                                                        ],
                                                                        "title": "Event ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Event ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "members": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/STRUCT_MEMBER": {
                                                                                  "allOf": [
                                                                                    {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      },
                                                                                      "title": "Typed parameter"
                                                                                    },
                                                                                    {
                                                                                      "properties": {
                                                                                        "offset": {
                                                                                          "description": "offset of this property within the struct",
                                                                                          "title": "Offset",
                                                                                          "type": "integer"
                                                                                        }
                                                                                      },
                                                                                      "title": "Offset",
                                                                                      "type": "object"
                                                                                    }
                                                                                  ],
                                                                                  "title": "Struct member"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Members",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The struct name",
                                                                            "title": "Struct name",
                                                                            "type": "string"
                                                                          },
                                                                          "size": {
                                                                            "minimum": 1,
                                                                            "title": "Size",
                                                                            "type": "integer"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "struct"
                                                                                ],
                                                                                "title": "Struct ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "size",
                                                                          "members"
                                                                        ],
                                                                        "title": "Struct ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Struct ABI entry"
                                                                  }
                                                                ],
                                                                "title": "Contract ABI entry"
                                                              }
                                                            }
                                                          },
                                                          "title": "Contract ABI",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Contract ABI"
                                                    },
                                                    "entry_points_by_type": {
                                                      "properties": {
                                                        "CONSTRUCTOR": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated constructor",
                                                          "type": "array"
                                                        },
                                                        "EXTERNAL": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated external",
                                                          "type": "array"
                                                        },
                                                        "L1_HANDLER": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated L1 handler",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Deprecated entry points by type",
                                                      "type": "object"
                                                    },
                                                    "program": {
                                                      "description": "A base64 representation of the compressed program code",
                                                      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                      "title": "Program",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "program",
                                                    "entry_points_by_type"
                                                  ],
                                                  "title": "Deprecated contract class",
                                                  "type": "object"
                                                }
                                              },
                                              "description": "The class to be declared",
                                              "title": "Contract class"
                                            }
                                          },
                                          "required": [
                                            "contract_class"
                                          ],
                                          "title": "ContractClass",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the declared class",
                                              "title": "Class hash"
                                            }
                                          },
                                          "required": [
                                            "class_hash"
                                          ],
                                          "title": "ClassHash",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V0",
                                  "title": "Declare Contract Transaction V0"
                                }
                              },
                              "title": "Declare transaction V0"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V1": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x1"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "title": "Declare txn v1",
                                      "type": "object"
                                    },
                                    {
                                      "oneOf": [
                                        {
                                          "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                          "properties": {
                                            "contract_class": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                  "description": "The definition of a StarkNet contract class",
                                                  "properties": {
                                                    "abi": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_ABI": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                "oneOf": [
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "inputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The function name",
                                                                            "title": "Function name",
                                                                            "type": "string"
                                                                          },
                                                                          "outputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "stateMutability": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                "enum": [
                                                                                  "view"
                                                                                ],
                                                                                "title": "Function state mutability type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function state mutability"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "function",
                                                                                  "l1_handler",
                                                                                  "constructor"
                                                                                ],
                                                                                "title": "Function ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "inputs",
                                                                          "outputs"
                                                                        ],
                                                                        "title": "Function ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Function ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "data": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "keys": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The event name",
                                                                            "title": "Event name",
                                                                            "type": "string"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "event"
                                                                                ],
                                                                                "title": "Event ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "keys",
                                                                          "data"
                                                                        ],
                                                                        "title": "Event ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Event ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "members": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/STRUCT_MEMBER": {
                                                                                  "allOf": [
                                                                                    {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      },
                                                                                      "title": "Typed parameter"
                                                                                    },
                                                                                    {
                                                                                      "properties": {
                                                                                        "offset": {
                                                                                          "description": "offset of this property within the struct",
                                                                                          "title": "Offset",
                                                                                          "type": "integer"
                                                                                        }
                                                                                      },
                                                                                      "title": "Offset",
                                                                                      "type": "object"
                                                                                    }
                                                                                  ],
                                                                                  "title": "Struct member"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Members",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The struct name",
                                                                            "title": "Struct name",
                                                                            "type": "string"
                                                                          },
                                                                          "size": {
                                                                            "minimum": 1,
                                                                            "title": "Size",
                                                                            "type": "integer"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "struct"
                                                                                ],
                                                                                "title": "Struct ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "size",
                                                                          "members"
                                                                        ],
                                                                        "title": "Struct ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Struct ABI entry"
                                                                  }
                                                                ],
                                                                "title": "Contract ABI entry"
                                                              }
                                                            }
                                                          },
                                                          "title": "Contract ABI",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Contract ABI"
                                                    },
                                                    "entry_points_by_type": {
                                                      "properties": {
                                                        "CONSTRUCTOR": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated constructor",
                                                          "type": "array"
                                                        },
                                                        "EXTERNAL": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated external",
                                                          "type": "array"
                                                        },
                                                        "L1_HANDLER": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated L1 handler",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Deprecated entry points by type",
                                                      "type": "object"
                                                    },
                                                    "program": {
                                                      "description": "A base64 representation of the compressed program code",
                                                      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                      "title": "Program",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "program",
                                                    "entry_points_by_type"
                                                  ],
                                                  "title": "Deprecated contract class",
                                                  "type": "object"
                                                }
                                              },
                                              "description": "The class to be declared",
                                              "title": "Contract class"
                                            }
                                          },
                                          "required": [
                                            "contract_class"
                                          ],
                                          "title": "ContractClass",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the declared class",
                                              "title": "Class hash"
                                            }
                                          },
                                          "required": [
                                            "class_hash"
                                          ],
                                          "title": "ClassHash",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V1",
                                  "title": "Declare Contract Transaction V1"
                                }
                              },
                              "title": "Declare transaction V1"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V2": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "compiled_class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                          "title": "Compiled class hash"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x2"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "compiled_class_hash",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "title": "Declare txn v2",
                                      "type": "object"
                                    },
                                    {
                                      "oneOf": [
                                        {
                                          "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                          "properties": {
                                            "contract_class": {
                                              "$ref": {
                                                "#/components/schemas/CONTRACT_CLASS": {
                                                  "properties": {
                                                    "abi": {
                                                      "description": "The class ABI, as supplied by the user declaring the class",
                                                      "title": "ABI",
                                                      "type": "string"
                                                    },
                                                    "contract_class_version": {
                                                      "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                      "title": "Contract class version",
                                                      "type": "string"
                                                    },
                                                    "entry_points_by_type": {
                                                      "properties": {
                                                        "CONSTRUCTOR": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                "properties": {
                                                                  "function_idx": {
                                                                    "description": "The index of the function in the program",
                                                                    "title": "Function index",
                                                                    "type": "integer"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "selector",
                                                                  "function_idx"
                                                                ],
                                                                "title": "Sierra entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Constructor",
                                                          "type": "array"
                                                        },
                                                        "EXTERNAL": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                "properties": {
                                                                  "function_idx": {
                                                                    "description": "The index of the function in the program",
                                                                    "title": "Function index",
                                                                    "type": "integer"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "selector",
                                                                  "function_idx"
                                                                ],
                                                                "title": "Sierra entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "External",
                                                          "type": "array"
                                                        },
                                                        "L1_HANDLER": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                "properties": {
                                                                  "function_idx": {
                                                                    "description": "The index of the function in the program",
                                                                    "title": "Function index",
                                                                    "type": "integer"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "selector",
                                                                  "function_idx"
                                                                ],
                                                                "title": "Sierra entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "L1 handler",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "required": [
                                                        "CONSTRUCTOR",
                                                        "EXTERNAL",
                                                        "L1_HANDLER"
                                                      ],
                                                      "title": "Entry points by type",
                                                      "type": "object"
                                                    },
                                                    "sierra_program": {
                                                      "description": "The list of Sierra instructions of which the program consists",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Sierra program",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "required": [
                                                    "sierra_program",
                                                    "contract_class_version",
                                                    "entry_points_by_type"
                                                  ],
                                                  "title": "Contract class",
                                                  "type": "object"
                                                }
                                              },
                                              "description": "The class to be declared",
                                              "title": "Contract class"
                                            }
                                          },
                                          "required": [
                                            "countract_class"
                                          ],
                                          "title": "ContractClass",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the declared class",
                                              "title": "Class hash"
                                            }
                                          },
                                          "required": [
                                            "class_hash"
                                          ],
                                          "title": "ClassHash",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V2",
                                  "title": "Declare Transaction V2"
                                }
                              },
                              "title": "Declare transaction V2"
                            }
                          ],
                          "title": "Declare transaction"
                        }
                      },
                      "title": "Declare transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DEPLOY_TXN": {
                          "allOf": [
                            {
                              "properties": {
                                "class_hash": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The hash of the deployed contract's class",
                                  "title": "Class hash"
                                },
                                "constructor_calldata": {
                                  "description": "The parameters passed to the constructor",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Constructor calldata",
                                  "type": "array"
                                },
                                "contract_address_salt": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The salt for the address of the deployed contract",
                                  "title": "Contract address salt"
                                },
                                "type": {
                                  "enum": [
                                    "DEPLOY"
                                  ],
                                  "title": "Deploy",
                                  "type": "string"
                                },
                                "version": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "Version of the transaction scheme",
                                  "title": "Version"
                                }
                              },
                              "required": [
                                "version",
                                "type",
                                "constructor_calldata",
                                "contract_address_salt",
                                "class_hash"
                              ],
                              "title": "Deploy txn",
                              "type": "object"
                            }
                          ],
                          "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                          "title": "Deploy Contract Transaction"
                        }
                      },
                      "title": "Deploy transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                          "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                          "properties": {
                            "class_hash": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The hash of the deployed contract's class",
                              "title": "Class hash"
                            },
                            "constructor_calldata": {
                              "description": "The parameters passed to the constructor",
                              "items": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                }
                              },
                              "title": "Constructor calldata",
                              "type": "array"
                            },
                            "contract_address_salt": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The salt for the address of the deployed contract",
                              "title": "Contract address salt"
                            },
                            "max_fee": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The maximal fee that can be charged for including the transaction",
                              "title": "Max fee"
                            },
                            "nonce": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "title": "Nonce"
                            },
                            "signature": {
                              "$ref": {
                                "#/components/schemas/SIGNATURE": {
                                  "description": "A transaction signature",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Signature",
                                  "type": "array"
                                }
                              },
                              "title": "Signature"
                            },
                            "type": {
                              "enum": [
                                "DEPLOY_ACCOUNT"
                              ],
                              "title": "Deploy account",
                              "type": "string"
                            },
                            "version": {
                              "$ref": {
                                "#/components/schemas/NUM_AS_HEX": {
                                  "description": "An integer number in hex format (0x...)",
                                  "pattern": "^0x[a-fA-F0-9]+$",
                                  "title": "Number as hex",
                                  "type": "string"
                                }
                              },
                              "description": "Version of the transaction scheme",
                              "title": "Version"
                            }
                          },
                          "required": [
                            "max_fee",
                            "version",
                            "signature",
                            "nonce",
                            "type",
                            "contract_address_salt",
                            "constructor_calldata",
                            "class_hash"
                          ],
                          "title": "Deploy account transaction"
                        }
                      },
                      "title": "Deploy account transaction"
                    }
                  ],
                  "title": "Transaction"
                }
              },
              "title": "transaction"
            },
            {
              "properties": {
                "transaction_hash": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "title": "transaction hash"
                }
              },
              "required": [
                "transaction_hash"
              ],
              "type": "object"
            }
          ],
          "title": "transactions in block",
          "type": "object"
        },
        "title": "Transactions",
        "type": "array"
      }
    },
    "required": [
      "transactions"
    ],
    "title": "Block body with transactions",
    "type": "object"
  },
  "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
    "properties": {
      "transactions": {
        "description": "The hashes of the transactions included in this block",
        "items": {
          "$ref": {
            "#/components/schemas/TXN_HASH": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The transaction hash, as assigned in StarkNet",
              "title": "Transaction hash"
            }
          },
          "description": "The hash of a single transaction"
        },
        "title": "Transaction",
        "type": "array"
      }
    },
    "required": [
      "transactions"
    ],
    "title": "Block body with transaction hashes",
    "type": "object"
  },
  "#/components/schemas/BLOCK_HASH": {
    "$ref": {
      "#/components/schemas/FELT": {
        "description": "A field element. represented by at most 63 hex digits",
        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
        "title": "Field element",
        "type": "string"
      }
    },
    "title": "Block hash"
  },
  "#/components/schemas/BLOCK_HEADER": {
    "properties": {
      "block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "title": "Block hash"
      },
      "block_number": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The block number (its height)",
        "title": "Block number"
      },
      "new_root": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The new global state root",
        "title": "New root"
      },
      "parent_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of this block's parent",
        "title": "Parent hash"
      },
      "sequencer_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The StarkNet identity of the sequencer submitting this block",
        "title": "Sequencer address"
      },
      "timestamp": {
        "description": "The time in which the block was created, encoded in Unix time",
        "minimum": 0,
        "title": "Timestamp",
        "type": "integer"
      }
    },
    "required": [
      "block_hash",
      "parent_hash",
      "block_number",
      "new_root",
      "timestamp",
      "sequencer_address"
    ],
    "title": "Block header",
    "type": "object"
  },
  "#/components/schemas/BLOCK_ID": {
    "description": "Block hash, number or tag",
    "oneOf": [
      {
        "properties": {
          "block_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "title": "Block hash"
          }
        },
        "required": [
          "block_hash"
        ],
        "title": "Block hash",
        "type": "object"
      },
      {
        "properties": {
          "block_number": {
            "$ref": {
              "#/components/schemas/BLOCK_NUMBER": {
                "description": "The block's number (its height)",
                "minimum": 0,
                "title": "Block number",
                "type": "integer"
              }
            },
            "title": "Block number"
          }
        },
        "required": [
          "block_number"
        ],
        "title": "Block number",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_TAG": {
            "description": "A tag specifying a dynamic reference to a block",
            "enum": [
              "latest",
              "pending"
            ],
            "title": "Block tag",
            "type": "string"
          }
        },
        "title": "Block tag"
      }
    ],
    "title": "Block id"
  },
  "#/components/schemas/BLOCK_NUMBER": {
    "description": "The block's number (its height)",
    "minimum": 0,
    "title": "Block number",
    "type": "integer"
  },
  "#/components/schemas/BLOCK_STATUS": {
    "description": "The status of the block",
    "enum": [
      "PENDING",
      "ACCEPTED_ON_L2",
      "ACCEPTED_ON_L1",
      "REJECTED"
    ],
    "title": "Block status",
    "type": "string"
  },
  "#/components/schemas/BLOCK_TAG": {
    "description": "A tag specifying a dynamic reference to a block",
    "enum": [
      "latest",
      "pending"
    ],
    "title": "Block tag",
    "type": "string"
  },
  "#/components/schemas/BLOCK_WITH_TXS": {
    "allOf": [
      {
        "properties": {
          "status": {
            "$ref": {
              "#/components/schemas/BLOCK_STATUS": {
                "description": "The status of the block",
                "enum": [
                  "PENDING",
                  "ACCEPTED_ON_L2",
                  "ACCEPTED_ON_L1",
                  "REJECTED"
                ],
                "title": "Block status",
                "type": "string"
              }
            },
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "block with txs",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_HEADER": {
            "properties": {
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "description": "The block number (its height)",
                "title": "Block number"
              },
              "new_root": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The new global state root",
                "title": "New root"
              },
              "parent_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "description": "The hash of this block's parent",
                "title": "Parent hash"
              },
              "sequencer_address": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The StarkNet identity of the sequencer submitting this block",
                "title": "Sequencer address"
              },
              "timestamp": {
                "description": "The time in which the block was created, encoded in Unix time",
                "minimum": 0,
                "title": "Timestamp",
                "type": "integer"
              }
            },
            "required": [
              "block_hash",
              "parent_hash",
              "block_number",
              "new_root",
              "timestamp",
              "sequencer_address"
            ],
            "title": "Block header",
            "type": "object"
          }
        },
        "title": "Block header"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TXS": {
            "properties": {
              "transactions": {
                "description": "The transactions in this block",
                "items": {
                  "allOf": [
                    {
                      "$ref": {
                        "#/components/schemas/TXN": {
                          "description": "The transaction schema, as it appears inside a block",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN": {
                                  "description": "Initiate a transaction from an account",
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V0": {
                                          "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            },
                                            "max_fee": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The maximal fee that can be charged for including the transaction",
                                              "title": "Max fee"
                                            },
                                            "signature": {
                                              "$ref": {
                                                "#/components/schemas/SIGNATURE": {
                                                  "description": "A transaction signature",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Signature",
                                                  "type": "array"
                                                }
                                              },
                                              "title": "Signature"
                                            },
                                            "type": {
                                              "enum": [
                                                "INVOKE"
                                              ],
                                              "title": "Type",
                                              "type": "string"
                                            },
                                            "version": {
                                              "description": "Version of the transaction scheme",
                                              "enum": [
                                                "0x0"
                                              ],
                                              "title": "Version",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata",
                                            "max_fee",
                                            "version",
                                            "signature"
                                          ],
                                          "title": "Invoke transaction V0"
                                        }
                                      },
                                      "title": "Invoke transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "calldata": {
                                                  "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "calldata",
                                                  "type": "array"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "title": "sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "INVOKE"
                                                  ],
                                                  "title": "Type",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x1"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "calldata",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "type": "object"
                                            }
                                          ],
                                          "description": "initiates a transaction from a given account",
                                          "title": "Invoke transaction V1"
                                        }
                                      },
                                      "title": "Invoke transaction V1"
                                    }
                                  ],
                                  "title": "Invoke transaction"
                                }
                              },
                              "title": "Invoke transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/L1_HANDLER_TXN": {
                                  "allOf": [
                                    {
                                      "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                                      "properties": {
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                          "title": "Nonce"
                                        },
                                        "type": {
                                          "enum": [
                                            "L1_HANDLER"
                                          ],
                                          "title": "type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "nonce"
                                      ],
                                      "title": "L1 handler transaction",
                                      "type": "object"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/FUNCTION_CALL": {
                                          "description": "Function call information",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            }
                                          },
                                          "required": [
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata"
                                          ],
                                          "title": "Function call",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Function call"
                                    }
                                  ],
                                  "title": "L1 Handler transaction"
                                }
                              },
                              "title": "L1 handler transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN": {
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V0": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x0"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature"
                                              ],
                                              "title": "Declare txn v0",
                                              "type": "object"
                                            },
                                            {
                                              "oneOf": [
                                                {
                                                  "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                  "properties": {
                                                    "contract_class": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                          "description": "The definition of a StarkNet contract class",
                                                          "properties": {
                                                            "abi": {
                                                              "$ref": {
                                                                "#/components/schemas/CONTRACT_ABI": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                        "oneOf": [
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "inputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The function name",
                                                                                    "title": "Function name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "outputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "stateMutability": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                        "enum": [
                                                                                          "view"
                                                                                        ],
                                                                                        "title": "Function state mutability type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function state mutability"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "function",
                                                                                          "l1_handler",
                                                                                          "constructor"
                                                                                        ],
                                                                                        "title": "Function ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "inputs",
                                                                                  "outputs"
                                                                                ],
                                                                                "title": "Function ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "data": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "keys": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The event name",
                                                                                    "title": "Event name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "event"
                                                                                        ],
                                                                                        "title": "Event ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Event ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "keys",
                                                                                  "data"
                                                                                ],
                                                                                "title": "Event ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "members": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/STRUCT_MEMBER": {
                                                                                          "allOf": [
                                                                                            {
                                                                                              "$ref": {
                                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                                  "properties": {
                                                                                                    "name": {
                                                                                                      "description": "The parameter's name",
                                                                                                      "title": "Parameter name",
                                                                                                      "type": "string"
                                                                                                    },
                                                                                                    "type": {
                                                                                                      "description": "The parameter's type",
                                                                                                      "title": "Parameter type",
                                                                                                      "type": "string"
                                                                                                    }
                                                                                                  },
                                                                                                  "required": [
                                                                                                    "name",
                                                                                                    "type"
                                                                                                  ],
                                                                                                  "title": "Typed parameter",
                                                                                                  "type": "object"
                                                                                                }
                                                                                              },
                                                                                              "title": "Typed parameter"
                                                                                            },
                                                                                            {
                                                                                              "properties": {
                                                                                                "offset": {
                                                                                                  "description": "offset of this property within the struct",
                                                                                                  "title": "Offset",
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              },
                                                                                              "title": "Offset",
                                                                                              "type": "object"
                                                                                            }
                                                                                          ],
                                                                                          "title": "Struct member"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Members",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The struct name",
                                                                                    "title": "Struct name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "size": {
                                                                                    "minimum": 1,
                                                                                    "title": "Size",
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "struct"
                                                                                        ],
                                                                                        "title": "Struct ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Struct ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "size",
                                                                                  "members"
                                                                                ],
                                                                                "title": "Struct ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI entry"
                                                                          }
                                                                        ],
                                                                        "title": "Contract ABI entry"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Contract ABI",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Contract ABI"
                                                            },
                                                            "entry_points_by_type": {
                                                              "properties": {
                                                                "CONSTRUCTOR": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated constructor",
                                                                  "type": "array"
                                                                },
                                                                "EXTERNAL": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated external",
                                                                  "type": "array"
                                                                },
                                                                "L1_HANDLER": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated L1 handler",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Deprecated entry points by type",
                                                              "type": "object"
                                                            },
                                                            "program": {
                                                              "description": "A base64 representation of the compressed program code",
                                                              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                              "title": "Program",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "program",
                                                            "entry_points_by_type"
                                                          ],
                                                          "title": "Deprecated contract class",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "description": "The class to be declared",
                                                      "title": "Contract class"
                                                    }
                                                  },
                                                  "required": [
                                                    "contract_class"
                                                  ],
                                                  "title": "ContractClass",
                                                  "type": "object"
                                                },
                                                {
                                                  "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the declared class",
                                                      "title": "Class hash"
                                                    }
                                                  },
                                                  "required": [
                                                    "class_hash"
                                                  ],
                                                  "title": "ClassHash",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V0",
                                          "title": "Declare Contract Transaction V0"
                                        }
                                      },
                                      "title": "Declare transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x1"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "title": "Declare txn v1",
                                              "type": "object"
                                            },
                                            {
                                              "oneOf": [
                                                {
                                                  "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                  "properties": {
                                                    "contract_class": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                          "description": "The definition of a StarkNet contract class",
                                                          "properties": {
                                                            "abi": {
                                                              "$ref": {
                                                                "#/components/schemas/CONTRACT_ABI": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                        "oneOf": [
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "inputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The function name",
                                                                                    "title": "Function name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "outputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "stateMutability": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                        "enum": [
                                                                                          "view"
                                                                                        ],
                                                                                        "title": "Function state mutability type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function state mutability"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "function",
                                                                                          "l1_handler",
                                                                                          "constructor"
                                                                                        ],
                                                                                        "title": "Function ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "inputs",
                                                                                  "outputs"
                                                                                ],
                                                                                "title": "Function ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "data": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "keys": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The event name",
                                                                                    "title": "Event name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "event"
                                                                                        ],
                                                                                        "title": "Event ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Event ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "keys",
                                                                                  "data"
                                                                                ],
                                                                                "title": "Event ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "members": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/STRUCT_MEMBER": {
                                                                                          "allOf": [
                                                                                            {
                                                                                              "$ref": {
                                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                                  "properties": {
                                                                                                    "name": {
                                                                                                      "description": "The parameter's name",
                                                                                                      "title": "Parameter name",
                                                                                                      "type": "string"
                                                                                                    },
                                                                                                    "type": {
                                                                                                      "description": "The parameter's type",
                                                                                                      "title": "Parameter type",
                                                                                                      "type": "string"
                                                                                                    }
                                                                                                  },
                                                                                                  "required": [
                                                                                                    "name",
                                                                                                    "type"
                                                                                                  ],
                                                                                                  "title": "Typed parameter",
                                                                                                  "type": "object"
                                                                                                }
                                                                                              },
                                                                                              "title": "Typed parameter"
                                                                                            },
                                                                                            {
                                                                                              "properties": {
                                                                                                "offset": {
                                                                                                  "description": "offset of this property within the struct",
                                                                                                  "title": "Offset",
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              },
                                                                                              "title": "Offset",
                                                                                              "type": "object"
                                                                                            }
                                                                                          ],
                                                                                          "title": "Struct member"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Members",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The struct name",
                                                                                    "title": "Struct name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "size": {
                                                                                    "minimum": 1,
                                                                                    "title": "Size",
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "struct"
                                                                                        ],
                                                                                        "title": "Struct ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Struct ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "size",
                                                                                  "members"
                                                                                ],
                                                                                "title": "Struct ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI entry"
                                                                          }
                                                                        ],
                                                                        "title": "Contract ABI entry"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Contract ABI",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Contract ABI"
                                                            },
                                                            "entry_points_by_type": {
                                                              "properties": {
                                                                "CONSTRUCTOR": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated constructor",
                                                                  "type": "array"
                                                                },
                                                                "EXTERNAL": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated external",
                                                                  "type": "array"
                                                                },
                                                                "L1_HANDLER": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated L1 handler",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Deprecated entry points by type",
                                                              "type": "object"
                                                            },
                                                            "program": {
                                                              "description": "A base64 representation of the compressed program code",
                                                              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                              "title": "Program",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "program",
                                                            "entry_points_by_type"
                                                          ],
                                                          "title": "Deprecated contract class",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "description": "The class to be declared",
                                                      "title": "Contract class"
                                                    }
                                                  },
                                                  "required": [
                                                    "contract_class"
                                                  ],
                                                  "title": "ContractClass",
                                                  "type": "object"
                                                },
                                                {
                                                  "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the declared class",
                                                      "title": "Class hash"
                                                    }
                                                  },
                                                  "required": [
                                                    "class_hash"
                                                  ],
                                                  "title": "ClassHash",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V1",
                                          "title": "Declare Contract Transaction V1"
                                        }
                                      },
                                      "title": "Declare transaction V1"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V2": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "compiled_class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                                  "title": "Compiled class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x2"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "compiled_class_hash",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "title": "Declare txn v2",
                                              "type": "object"
                                            },
                                            {
                                              "oneOf": [
                                                {
                                                  "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                  "properties": {
                                                    "contract_class": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_CLASS": {
                                                          "properties": {
                                                            "abi": {
                                                              "description": "The class ABI, as supplied by the user declaring the class",
                                                              "title": "ABI",
                                                              "type": "string"
                                                            },
                                                            "contract_class_version": {
                                                              "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                              "title": "Contract class version",
                                                              "type": "string"
                                                            },
                                                            "entry_points_by_type": {
                                                              "properties": {
                                                                "CONSTRUCTOR": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "function_idx": {
                                                                            "description": "The index of the function in the program",
                                                                            "title": "Function index",
                                                                            "type": "integer"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "selector",
                                                                          "function_idx"
                                                                        ],
                                                                        "title": "Sierra entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Constructor",
                                                                  "type": "array"
                                                                },
                                                                "EXTERNAL": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "function_idx": {
                                                                            "description": "The index of the function in the program",
                                                                            "title": "Function index",
                                                                            "type": "integer"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "selector",
                                                                          "function_idx"
                                                                        ],
                                                                        "title": "Sierra entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "External",
                                                                  "type": "array"
                                                                },
                                                                "L1_HANDLER": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "function_idx": {
                                                                            "description": "The index of the function in the program",
                                                                            "title": "Function index",
                                                                            "type": "integer"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "selector",
                                                                          "function_idx"
                                                                        ],
                                                                        "title": "Sierra entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "L1 handler",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "required": [
                                                                "CONSTRUCTOR",
                                                                "EXTERNAL",
                                                                "L1_HANDLER"
                                                              ],
                                                              "title": "Entry points by type",
                                                              "type": "object"
                                                            },
                                                            "sierra_program": {
                                                              "description": "The list of Sierra instructions of which the program consists",
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/FELT": {
                                                                    "description": "A field element. represented by at most 63 hex digits",
                                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                    "title": "Field element",
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Sierra program",
                                                              "type": "array"
                                                            }
                                                          },
                                                          "required": [
                                                            "sierra_program",
                                                            "contract_class_version",
                                                            "entry_points_by_type"
                                                          ],
                                                          "title": "Contract class",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "description": "The class to be declared",
                                                      "title": "Contract class"
                                                    }
                                                  },
                                                  "required": [
                                                    "countract_class"
                                                  ],
                                                  "title": "ContractClass",
                                                  "type": "object"
                                                },
                                                {
                                                  "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the declared class",
                                                      "title": "Class hash"
                                                    }
                                                  },
                                                  "required": [
                                                    "class_hash"
                                                  ],
                                                  "title": "ClassHash",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V2",
                                          "title": "Declare Transaction V2"
                                        }
                                      },
                                      "title": "Declare transaction V2"
                                    }
                                  ],
                                  "title": "Declare transaction"
                                }
                              },
                              "title": "Declare transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_TXN": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the deployed contract's class",
                                          "title": "Class hash"
                                        },
                                        "constructor_calldata": {
                                          "description": "The parameters passed to the constructor",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Constructor calldata",
                                          "type": "array"
                                        },
                                        "contract_address_salt": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The salt for the address of the deployed contract",
                                          "title": "Contract address salt"
                                        },
                                        "type": {
                                          "enum": [
                                            "DEPLOY"
                                          ],
                                          "title": "Deploy",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "constructor_calldata",
                                        "contract_address_salt",
                                        "class_hash"
                                      ],
                                      "title": "Deploy txn",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                                  "title": "Deploy Contract Transaction"
                                }
                              },
                              "title": "Deploy transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                                  "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                  "properties": {
                                    "class_hash": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The hash of the deployed contract's class",
                                      "title": "Class hash"
                                    },
                                    "constructor_calldata": {
                                      "description": "The parameters passed to the constructor",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Constructor calldata",
                                      "type": "array"
                                    },
                                    "contract_address_salt": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The salt for the address of the deployed contract",
                                      "title": "Contract address salt"
                                    },
                                    "max_fee": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The maximal fee that can be charged for including the transaction",
                                      "title": "Max fee"
                                    },
                                    "nonce": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Nonce"
                                    },
                                    "signature": {
                                      "$ref": {
                                        "#/components/schemas/SIGNATURE": {
                                          "description": "A transaction signature",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Signature",
                                          "type": "array"
                                        }
                                      },
                                      "title": "Signature"
                                    },
                                    "type": {
                                      "enum": [
                                        "DEPLOY_ACCOUNT"
                                      ],
                                      "title": "Deploy account",
                                      "type": "string"
                                    },
                                    "version": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "Version of the transaction scheme",
                                      "title": "Version"
                                    }
                                  },
                                  "required": [
                                    "max_fee",
                                    "version",
                                    "signature",
                                    "nonce",
                                    "type",
                                    "contract_address_salt",
                                    "constructor_calldata",
                                    "class_hash"
                                  ],
                                  "title": "Deploy account transaction"
                                }
                              },
                              "title": "Deploy account transaction"
                            }
                          ],
                          "title": "Transaction"
                        }
                      },
                      "title": "transaction"
                    },
                    {
                      "properties": {
                        "transaction_hash": {
                          "$ref": {
                            "#/components/schemas/TXN_HASH": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The transaction hash, as assigned in StarkNet",
                              "title": "Transaction hash"
                            }
                          },
                          "title": "transaction hash"
                        }
                      },
                      "required": [
                        "transaction_hash"
                      ],
                      "type": "object"
                    }
                  ],
                  "title": "transactions in block",
                  "type": "object"
                },
                "title": "Transactions",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transactions",
            "type": "object"
          }
        },
        "title": "Block body with transactions"
      }
    ],
    "description": "The block object",
    "title": "Block with transactions"
  },
  "#/components/schemas/BLOCK_WITH_TX_HASHES": {
    "allOf": [
      {
        "properties": {
          "status": {
            "$ref": {
              "#/components/schemas/BLOCK_STATUS": {
                "description": "The status of the block",
                "enum": [
                  "PENDING",
                  "ACCEPTED_ON_L2",
                  "ACCEPTED_ON_L1",
                  "REJECTED"
                ],
                "title": "Block status",
                "type": "string"
              }
            },
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "Block status",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_HEADER": {
            "properties": {
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "description": "The block number (its height)",
                "title": "Block number"
              },
              "new_root": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The new global state root",
                "title": "New root"
              },
              "parent_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "description": "The hash of this block's parent",
                "title": "Parent hash"
              },
              "sequencer_address": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The StarkNet identity of the sequencer submitting this block",
                "title": "Sequencer address"
              },
              "timestamp": {
                "description": "The time in which the block was created, encoded in Unix time",
                "minimum": 0,
                "title": "Timestamp",
                "type": "integer"
              }
            },
            "required": [
              "block_hash",
              "parent_hash",
              "block_number",
              "new_root",
              "timestamp",
              "sequencer_address"
            ],
            "title": "Block header",
            "type": "object"
          }
        },
        "title": "Block header"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
            "properties": {
              "transactions": {
                "description": "The hashes of the transactions included in this block",
                "items": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "description": "The hash of a single transaction"
                },
                "title": "Transaction",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transaction hashes",
            "type": "object"
          }
        },
        "title": "Block body with transaction hashes"
      }
    ],
    "description": "The block object",
    "title": "Block with transaction hashes"
  },
  "#/components/schemas/CHAIN_ID": {
    "description": "StarkNet chain id, given in hex representation.",
    "pattern": "^0x[a-fA-F0-9]+$",
    "title": "Chain id",
    "type": "string"
  },
  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
    "description": "Common properties for a transaction receipt",
    "properties": {
      "actual_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The fee that was charged by the sequencer",
        "title": "Actual fee"
      },
      "block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "title": "Block hash"
      },
      "block_number": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "title": "Block number"
      },
      "events": {
        "description": "The events emitted as part of this transaction",
        "items": {
          "$ref": {
            "#/components/schemas/EVENT": {
              "allOf": [
                {
                  "properties": {
                    "from_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "title": "From address"
                    }
                  },
                  "required": [
                    "from_address"
                  ],
                  "title": "Event emitter",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/EVENT_CONTENT": {
                      "description": "The content of an event",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Data",
                          "type": "array"
                        },
                        "keys": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Keys",
                          "type": "array"
                        }
                      },
                      "required": [
                        "keys",
                        "data"
                      ],
                      "title": "Event content",
                      "type": "object"
                    }
                  },
                  "title": "Event content"
                }
              ],
              "description": "A StarkNet event",
              "title": "Event"
            }
          }
        },
        "title": "Events",
        "type": "array"
      },
      "execution_status": {
        "$ref": {
          "#/components/schemas/TXN_EXECUTION_STATUS": {
            "description": "The execution status of the transaction",
            "enum": [
              "SUCCEEDED",
              "REVERTED"
            ],
            "title": "Execution status",
            "type": "string"
          }
        },
        "title": "Execution status"
      },
      "finality_status": {
        "$ref": {
          "#/components/schemas/TXN_FINALITY_STATUS": {
            "description": "The finality status of the transaction",
            "enum": [
              "ACCEPTED_ON_L2",
              "ACCEPTED_ON_L1"
            ],
            "title": "Finality status",
            "type": "string"
          }
        },
        "title": "Finality status"
      },
      "messages_sent": {
        "items": {
          "$ref": {
            "#/components/schemas/MSG_TO_L1": {
              "properties": {
                "from_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The address of the L2 contract sending the message"
                },
                "payload": {
                  "description": "The payload of the message",
                  "items": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    }
                  },
                  "title": "Payload",
                  "type": "array"
                },
                "to_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The target L1 address the message is sent to",
                  "title": "To address"
                }
              },
              "required": [
                "from_address",
                "to_address",
                "payload"
              ],
              "title": "Message to L1",
              "type": "object"
            }
          }
        },
        "title": "Messages sent",
        "type": "array"
      },
      "revert_reason": {
        "description": "the revert reason for the failed execution",
        "name": "revert reason",
        "title": "Revert reason",
        "type": "string"
      },
      "transaction_hash": {
        "$ref": {
          "#/components/schemas/TXN_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The transaction hash, as assigned in StarkNet",
            "title": "Transaction hash"
          }
        },
        "description": "The hash identifying the transaction",
        "title": "Transaction hash"
      }
    },
    "required": [
      "transaction_hash",
      "actual_fee",
      "finality_status",
      "execution_status",
      "block_hash",
      "block_number",
      "messages_sent",
      "events"
    ],
    "title": "Common receipt properties",
    "type": "object"
  },
  "#/components/schemas/CONTRACT_ABI": {
    "items": {
      "$ref": {
        "#/components/schemas/CONTRACT_ABI_ENTRY": {
          "oneOf": [
            {
              "$ref": {
                "#/components/schemas/FUNCTION_ABI_ENTRY": {
                  "properties": {
                    "inputs": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "name": {
                      "description": "The function name",
                      "title": "Function name",
                      "type": "string"
                    },
                    "outputs": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "stateMutability": {
                      "$ref": {
                        "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                          "enum": [
                            "view"
                          ],
                          "title": "Function state mutability type",
                          "type": "string"
                        }
                      },
                      "title": "Function state mutability"
                    },
                    "type": {
                      "$ref": {
                        "#/components/schemas/FUNCTION_ABI_TYPE": {
                          "enum": [
                            "function",
                            "l1_handler",
                            "constructor"
                          ],
                          "title": "Function ABI type",
                          "type": "string"
                        }
                      },
                      "title": "Function ABI type"
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "inputs",
                    "outputs"
                  ],
                  "title": "Function ABI entry",
                  "type": "object"
                }
              },
              "title": "Function ABI entry"
            },
            {
              "$ref": {
                "#/components/schemas/EVENT_ABI_ENTRY": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "keys": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "name": {
                      "description": "The event name",
                      "title": "Event name",
                      "type": "string"
                    },
                    "type": {
                      "$ref": {
                        "#/components/schemas/EVENT_ABI_TYPE": {
                          "enum": [
                            "event"
                          ],
                          "title": "Event ABI type",
                          "type": "string"
                        }
                      },
                      "title": "Event ABI type"
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "keys",
                    "data"
                  ],
                  "title": "Event ABI entry",
                  "type": "object"
                }
              },
              "title": "Event ABI entry"
            },
            {
              "$ref": {
                "#/components/schemas/STRUCT_ABI_ENTRY": {
                  "properties": {
                    "members": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/STRUCT_MEMBER": {
                            "allOf": [
                              {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                },
                                "title": "Typed parameter"
                              },
                              {
                                "properties": {
                                  "offset": {
                                    "description": "offset of this property within the struct",
                                    "title": "Offset",
                                    "type": "integer"
                                  }
                                },
                                "title": "Offset",
                                "type": "object"
                              }
                            ],
                            "title": "Struct member"
                          }
                        }
                      },
                      "title": "Members",
                      "type": "array"
                    },
                    "name": {
                      "description": "The struct name",
                      "title": "Struct name",
                      "type": "string"
                    },
                    "size": {
                      "minimum": 1,
                      "title": "Size",
                      "type": "integer"
                    },
                    "type": {
                      "$ref": {
                        "#/components/schemas/STRUCT_ABI_TYPE": {
                          "enum": [
                            "struct"
                          ],
                          "title": "Struct ABI type",
                          "type": "string"
                        }
                      },
                      "title": "Struct ABI type"
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "size",
                    "members"
                  ],
                  "title": "Struct ABI entry",
                  "type": "object"
                }
              },
              "title": "Struct ABI entry"
            }
          ],
          "title": "Contract ABI entry"
        }
      }
    },
    "title": "Contract ABI",
    "type": "array"
  },
  "#/components/schemas/CONTRACT_ABI_ENTRY": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/FUNCTION_ABI_ENTRY": {
            "properties": {
              "inputs": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "name": {
                "description": "The function name",
                "title": "Function name",
                "type": "string"
              },
              "outputs": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "stateMutability": {
                "$ref": {
                  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                    "enum": [
                      "view"
                    ],
                    "title": "Function state mutability type",
                    "type": "string"
                  }
                },
                "title": "Function state mutability"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/FUNCTION_ABI_TYPE": {
                    "enum": [
                      "function",
                      "l1_handler",
                      "constructor"
                    ],
                    "title": "Function ABI type",
                    "type": "string"
                  }
                },
                "title": "Function ABI type"
              }
            },
            "required": [
              "type",
              "name",
              "inputs",
              "outputs"
            ],
            "title": "Function ABI entry",
            "type": "object"
          }
        },
        "title": "Function ABI entry"
      },
      {
        "$ref": {
          "#/components/schemas/EVENT_ABI_ENTRY": {
            "properties": {
              "data": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "keys": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "name": {
                "description": "The event name",
                "title": "Event name",
                "type": "string"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/EVENT_ABI_TYPE": {
                    "enum": [
                      "event"
                    ],
                    "title": "Event ABI type",
                    "type": "string"
                  }
                },
                "title": "Event ABI type"
              }
            },
            "required": [
              "type",
              "name",
              "keys",
              "data"
            ],
            "title": "Event ABI entry",
            "type": "object"
          }
        },
        "title": "Event ABI entry"
      },
      {
        "$ref": {
          "#/components/schemas/STRUCT_ABI_ENTRY": {
            "properties": {
              "members": {
                "items": {
                  "$ref": {
                    "#/components/schemas/STRUCT_MEMBER": {
                      "allOf": [
                        {
                          "$ref": {
                            "#/components/schemas/TYPED_PARAMETER": {
                              "properties": {
                                "name": {
                                  "description": "The parameter's name",
                                  "title": "Parameter name",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The parameter's type",
                                  "title": "Parameter type",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ],
                              "title": "Typed parameter",
                              "type": "object"
                            }
                          },
                          "title": "Typed parameter"
                        },
                        {
                          "properties": {
                            "offset": {
                              "description": "offset of this property within the struct",
                              "title": "Offset",
                              "type": "integer"
                            }
                          },
                          "title": "Offset",
                          "type": "object"
                        }
                      ],
                      "title": "Struct member"
                    }
                  }
                },
                "title": "Members",
                "type": "array"
              },
              "name": {
                "description": "The struct name",
                "title": "Struct name",
                "type": "string"
              },
              "size": {
                "minimum": 1,
                "title": "Size",
                "type": "integer"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/STRUCT_ABI_TYPE": {
                    "enum": [
                      "struct"
                    ],
                    "title": "Struct ABI type",
                    "type": "string"
                  }
                },
                "title": "Struct ABI type"
              }
            },
            "required": [
              "type",
              "name",
              "size",
              "members"
            ],
            "title": "Struct ABI entry",
            "type": "object"
          }
        },
        "title": "Struct ABI entry"
      }
    ],
    "title": "Contract ABI entry"
  },
  "#/components/schemas/CONTRACT_CLASS": {
    "properties": {
      "abi": {
        "description": "The class ABI, as supplied by the user declaring the class",
        "title": "ABI",
        "type": "string"
      },
      "contract_class_version": {
        "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
        "title": "Contract class version",
        "type": "string"
      },
      "entry_points_by_type": {
        "properties": {
          "CONSTRUCTOR": {
            "items": {
              "$ref": {
                "#/components/schemas/SIERRA_ENTRY_POINT": {
                  "properties": {
                    "function_idx": {
                      "description": "The index of the function in the program",
                      "title": "Function index",
                      "type": "integer"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "selector",
                    "function_idx"
                  ],
                  "title": "Sierra entry point",
                  "type": "object"
                }
              }
            },
            "title": "Constructor",
            "type": "array"
          },
          "EXTERNAL": {
            "items": {
              "$ref": {
                "#/components/schemas/SIERRA_ENTRY_POINT": {
                  "properties": {
                    "function_idx": {
                      "description": "The index of the function in the program",
                      "title": "Function index",
                      "type": "integer"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "selector",
                    "function_idx"
                  ],
                  "title": "Sierra entry point",
                  "type": "object"
                }
              }
            },
            "title": "External",
            "type": "array"
          },
          "L1_HANDLER": {
            "items": {
              "$ref": {
                "#/components/schemas/SIERRA_ENTRY_POINT": {
                  "properties": {
                    "function_idx": {
                      "description": "The index of the function in the program",
                      "title": "Function index",
                      "type": "integer"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "selector",
                    "function_idx"
                  ],
                  "title": "Sierra entry point",
                  "type": "object"
                }
              }
            },
            "title": "L1 handler",
            "type": "array"
          }
        },
        "required": [
          "CONSTRUCTOR",
          "EXTERNAL",
          "L1_HANDLER"
        ],
        "title": "Entry points by type",
        "type": "object"
      },
      "sierra_program": {
        "description": "The list of Sierra instructions of which the program consists",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Sierra program",
        "type": "array"
      }
    },
    "required": [
      "sierra_program",
      "contract_class_version",
      "entry_points_by_type"
    ],
    "title": "Contract class",
    "type": "object"
  },
  "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
    "properties": {
      "address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The contract address for which the storage changed",
        "title": "Address"
      },
      "storage_entries": {
        "description": "The changes in the storage of the contract",
        "items": {
          "properties": {
            "key": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The key of the changed value",
              "title": "Key"
            },
            "value": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The new value applied to the given address",
              "title": "Value"
            }
          },
          "title": "Storage diff item",
          "type": "object"
        },
        "title": "Storage entries",
        "type": "array"
      }
    },
    "required": [
      "address",
      "storage_entries"
    ],
    "title": "Contract storage diff item",
    "type": "object"
  },
  "#/components/schemas/DECLARE_TXN": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_V0": {
            "allOf": [
              {
                "properties": {
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x0"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "max_fee",
                  "version",
                  "signature"
                ],
                "title": "Declare txn v0",
                "type": "object"
              },
              {
                "oneOf": [
                  {
                    "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                    "properties": {
                      "contract_class": {
                        "$ref": {
                          "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                            "description": "The definition of a StarkNet contract class",
                            "properties": {
                              "abi": {
                                "$ref": {
                                  "#/components/schemas/CONTRACT_ABI": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                          "oneOf": [
                                            {
                                              "$ref": {
                                                "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                  "properties": {
                                                    "inputs": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "name": {
                                                      "description": "The function name",
                                                      "title": "Function name",
                                                      "type": "string"
                                                    },
                                                    "outputs": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "stateMutability": {
                                                      "$ref": {
                                                        "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                          "enum": [
                                                            "view"
                                                          ],
                                                          "title": "Function state mutability type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Function state mutability"
                                                    },
                                                    "type": {
                                                      "$ref": {
                                                        "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                          "enum": [
                                                            "function",
                                                            "l1_handler",
                                                            "constructor"
                                                          ],
                                                          "title": "Function ABI type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Function ABI type"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "inputs",
                                                    "outputs"
                                                  ],
                                                  "title": "Function ABI entry",
                                                  "type": "object"
                                                }
                                              },
                                              "title": "Function ABI entry"
                                            },
                                            {
                                              "$ref": {
                                                "#/components/schemas/EVENT_ABI_ENTRY": {
                                                  "properties": {
                                                    "data": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "keys": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "name": {
                                                      "description": "The event name",
                                                      "title": "Event name",
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "$ref": {
                                                        "#/components/schemas/EVENT_ABI_TYPE": {
                                                          "enum": [
                                                            "event"
                                                          ],
                                                          "title": "Event ABI type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Event ABI type"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "keys",
                                                    "data"
                                                  ],
                                                  "title": "Event ABI entry",
                                                  "type": "object"
                                                }
                                              },
                                              "title": "Event ABI entry"
                                            },
                                            {
                                              "$ref": {
                                                "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                  "properties": {
                                                    "members": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/STRUCT_MEMBER": {
                                                            "allOf": [
                                                              {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                },
                                                                "title": "Typed parameter"
                                                              },
                                                              {
                                                                "properties": {
                                                                  "offset": {
                                                                    "description": "offset of this property within the struct",
                                                                    "title": "Offset",
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "title": "Offset",
                                                                "type": "object"
                                                              }
                                                            ],
                                                            "title": "Struct member"
                                                          }
                                                        }
                                                      },
                                                      "title": "Members",
                                                      "type": "array"
                                                    },
                                                    "name": {
                                                      "description": "The struct name",
                                                      "title": "Struct name",
                                                      "type": "string"
                                                    },
                                                    "size": {
                                                      "minimum": 1,
                                                      "title": "Size",
                                                      "type": "integer"
                                                    },
                                                    "type": {
                                                      "$ref": {
                                                        "#/components/schemas/STRUCT_ABI_TYPE": {
                                                          "enum": [
                                                            "struct"
                                                          ],
                                                          "title": "Struct ABI type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Struct ABI type"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "size",
                                                    "members"
                                                  ],
                                                  "title": "Struct ABI entry",
                                                  "type": "object"
                                                }
                                              },
                                              "title": "Struct ABI entry"
                                            }
                                          ],
                                          "title": "Contract ABI entry"
                                        }
                                      }
                                    },
                                    "title": "Contract ABI",
                                    "type": "array"
                                  }
                                },
                                "title": "Contract ABI"
                              },
                              "entry_points_by_type": {
                                "properties": {
                                  "CONSTRUCTOR": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                          "properties": {
                                            "offset": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The offset of the entry point in the program",
                                              "title": "Offset"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "offset",
                                            "selector"
                                          ],
                                          "title": "Deprecated Cairo entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Deprecated constructor",
                                    "type": "array"
                                  },
                                  "EXTERNAL": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                          "properties": {
                                            "offset": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The offset of the entry point in the program",
                                              "title": "Offset"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "offset",
                                            "selector"
                                          ],
                                          "title": "Deprecated Cairo entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Deprecated external",
                                    "type": "array"
                                  },
                                  "L1_HANDLER": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                          "properties": {
                                            "offset": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The offset of the entry point in the program",
                                              "title": "Offset"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "offset",
                                            "selector"
                                          ],
                                          "title": "Deprecated Cairo entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Deprecated L1 handler",
                                    "type": "array"
                                  }
                                },
                                "title": "Deprecated entry points by type",
                                "type": "object"
                              },
                              "program": {
                                "description": "A base64 representation of the compressed program code",
                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                "title": "Program",
                                "type": "string"
                              }
                            },
                            "required": [
                              "program",
                              "entry_points_by_type"
                            ],
                            "title": "Deprecated contract class",
                            "type": "object"
                          }
                        },
                        "description": "The class to be declared",
                        "title": "Contract class"
                      }
                    },
                    "required": [
                      "contract_class"
                    ],
                    "title": "ContractClass",
                    "type": "object"
                  },
                  {
                    "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                    "properties": {
                      "class_hash": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The hash of the declared class",
                        "title": "Class hash"
                      }
                    },
                    "required": [
                      "class_hash"
                    ],
                    "title": "ClassHash",
                    "type": "object"
                  }
                ]
              }
            ],
            "description": "Declare Contract Transaction V0",
            "title": "Declare Contract Transaction V0"
          }
        },
        "title": "Declare transaction V0"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_V1": {
            "allOf": [
              {
                "properties": {
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x1"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce"
                ],
                "title": "Declare txn v1",
                "type": "object"
              },
              {
                "oneOf": [
                  {
                    "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                    "properties": {
                      "contract_class": {
                        "$ref": {
                          "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                            "description": "The definition of a StarkNet contract class",
                            "properties": {
                              "abi": {
                                "$ref": {
                                  "#/components/schemas/CONTRACT_ABI": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                          "oneOf": [
                                            {
                                              "$ref": {
                                                "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                  "properties": {
                                                    "inputs": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "name": {
                                                      "description": "The function name",
                                                      "title": "Function name",
                                                      "type": "string"
                                                    },
                                                    "outputs": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "stateMutability": {
                                                      "$ref": {
                                                        "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                          "enum": [
                                                            "view"
                                                          ],
                                                          "title": "Function state mutability type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Function state mutability"
                                                    },
                                                    "type": {
                                                      "$ref": {
                                                        "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                          "enum": [
                                                            "function",
                                                            "l1_handler",
                                                            "constructor"
                                                          ],
                                                          "title": "Function ABI type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Function ABI type"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "inputs",
                                                    "outputs"
                                                  ],
                                                  "title": "Function ABI entry",
                                                  "type": "object"
                                                }
                                              },
                                              "title": "Function ABI entry"
                                            },
                                            {
                                              "$ref": {
                                                "#/components/schemas/EVENT_ABI_ENTRY": {
                                                  "properties": {
                                                    "data": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "keys": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "title": "Typed parameter",
                                                      "type": "array"
                                                    },
                                                    "name": {
                                                      "description": "The event name",
                                                      "title": "Event name",
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "$ref": {
                                                        "#/components/schemas/EVENT_ABI_TYPE": {
                                                          "enum": [
                                                            "event"
                                                          ],
                                                          "title": "Event ABI type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Event ABI type"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "keys",
                                                    "data"
                                                  ],
                                                  "title": "Event ABI entry",
                                                  "type": "object"
                                                }
                                              },
                                              "title": "Event ABI entry"
                                            },
                                            {
                                              "$ref": {
                                                "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                  "properties": {
                                                    "members": {
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/STRUCT_MEMBER": {
                                                            "allOf": [
                                                              {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                },
                                                                "title": "Typed parameter"
                                                              },
                                                              {
                                                                "properties": {
                                                                  "offset": {
                                                                    "description": "offset of this property within the struct",
                                                                    "title": "Offset",
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "title": "Offset",
                                                                "type": "object"
                                                              }
                                                            ],
                                                            "title": "Struct member"
                                                          }
                                                        }
                                                      },
                                                      "title": "Members",
                                                      "type": "array"
                                                    },
                                                    "name": {
                                                      "description": "The struct name",
                                                      "title": "Struct name",
                                                      "type": "string"
                                                    },
                                                    "size": {
                                                      "minimum": 1,
                                                      "title": "Size",
                                                      "type": "integer"
                                                    },
                                                    "type": {
                                                      "$ref": {
                                                        "#/components/schemas/STRUCT_ABI_TYPE": {
                                                          "enum": [
                                                            "struct"
                                                          ],
                                                          "title": "Struct ABI type",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Struct ABI type"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "size",
                                                    "members"
                                                  ],
                                                  "title": "Struct ABI entry",
                                                  "type": "object"
                                                }
                                              },
                                              "title": "Struct ABI entry"
                                            }
                                          ],
                                          "title": "Contract ABI entry"
                                        }
                                      }
                                    },
                                    "title": "Contract ABI",
                                    "type": "array"
                                  }
                                },
                                "title": "Contract ABI"
                              },
                              "entry_points_by_type": {
                                "properties": {
                                  "CONSTRUCTOR": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                          "properties": {
                                            "offset": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The offset of the entry point in the program",
                                              "title": "Offset"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "offset",
                                            "selector"
                                          ],
                                          "title": "Deprecated Cairo entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Deprecated constructor",
                                    "type": "array"
                                  },
                                  "EXTERNAL": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                          "properties": {
                                            "offset": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The offset of the entry point in the program",
                                              "title": "Offset"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "offset",
                                            "selector"
                                          ],
                                          "title": "Deprecated Cairo entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Deprecated external",
                                    "type": "array"
                                  },
                                  "L1_HANDLER": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                          "properties": {
                                            "offset": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The offset of the entry point in the program",
                                              "title": "Offset"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "offset",
                                            "selector"
                                          ],
                                          "title": "Deprecated Cairo entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Deprecated L1 handler",
                                    "type": "array"
                                  }
                                },
                                "title": "Deprecated entry points by type",
                                "type": "object"
                              },
                              "program": {
                                "description": "A base64 representation of the compressed program code",
                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                "title": "Program",
                                "type": "string"
                              }
                            },
                            "required": [
                              "program",
                              "entry_points_by_type"
                            ],
                            "title": "Deprecated contract class",
                            "type": "object"
                          }
                        },
                        "description": "The class to be declared",
                        "title": "Contract class"
                      }
                    },
                    "required": [
                      "contract_class"
                    ],
                    "title": "ContractClass",
                    "type": "object"
                  },
                  {
                    "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                    "properties": {
                      "class_hash": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The hash of the declared class",
                        "title": "Class hash"
                      }
                    },
                    "required": [
                      "class_hash"
                    ],
                    "title": "ClassHash",
                    "type": "object"
                  }
                ]
              }
            ],
            "description": "Declare Contract Transaction V1",
            "title": "Declare Contract Transaction V1"
          }
        },
        "title": "Declare transaction V1"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_V2": {
            "allOf": [
              {
                "properties": {
                  "compiled_class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                    "title": "Compiled class hash"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x2"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "compiled_class_hash",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce"
                ],
                "title": "Declare txn v2",
                "type": "object"
              },
              {
                "oneOf": [
                  {
                    "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                    "properties": {
                      "contract_class": {
                        "$ref": {
                          "#/components/schemas/CONTRACT_CLASS": {
                            "properties": {
                              "abi": {
                                "description": "The class ABI, as supplied by the user declaring the class",
                                "title": "ABI",
                                "type": "string"
                              },
                              "contract_class_version": {
                                "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                "title": "Contract class version",
                                "type": "string"
                              },
                              "entry_points_by_type": {
                                "properties": {
                                  "CONSTRUCTOR": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/SIERRA_ENTRY_POINT": {
                                          "properties": {
                                            "function_idx": {
                                              "description": "The index of the function in the program",
                                              "title": "Function index",
                                              "type": "integer"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "selector",
                                            "function_idx"
                                          ],
                                          "title": "Sierra entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "Constructor",
                                    "type": "array"
                                  },
                                  "EXTERNAL": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/SIERRA_ENTRY_POINT": {
                                          "properties": {
                                            "function_idx": {
                                              "description": "The index of the function in the program",
                                              "title": "Function index",
                                              "type": "integer"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "selector",
                                            "function_idx"
                                          ],
                                          "title": "Sierra entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "External",
                                    "type": "array"
                                  },
                                  "L1_HANDLER": {
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/SIERRA_ENTRY_POINT": {
                                          "properties": {
                                            "function_idx": {
                                              "description": "The index of the function in the program",
                                              "title": "Function index",
                                              "type": "integer"
                                            },
                                            "selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "A unique identifier of the entry point (function) in the program",
                                              "title": "Selector"
                                            }
                                          },
                                          "required": [
                                            "selector",
                                            "function_idx"
                                          ],
                                          "title": "Sierra entry point",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "title": "L1 handler",
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "CONSTRUCTOR",
                                  "EXTERNAL",
                                  "L1_HANDLER"
                                ],
                                "title": "Entry points by type",
                                "type": "object"
                              },
                              "sierra_program": {
                                "description": "The list of Sierra instructions of which the program consists",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Sierra program",
                                "type": "array"
                              }
                            },
                            "required": [
                              "sierra_program",
                              "contract_class_version",
                              "entry_points_by_type"
                            ],
                            "title": "Contract class",
                            "type": "object"
                          }
                        },
                        "description": "The class to be declared",
                        "title": "Contract class"
                      }
                    },
                    "required": [
                      "countract_class"
                    ],
                    "title": "ContractClass",
                    "type": "object"
                  },
                  {
                    "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                    "properties": {
                      "class_hash": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The hash of the declared class",
                        "title": "Class hash"
                      }
                    },
                    "required": [
                      "class_hash"
                    ],
                    "title": "ClassHash",
                    "type": "object"
                  }
                ]
              }
            ],
            "description": "Declare Contract Transaction V2",
            "title": "Declare Transaction V2"
          }
        },
        "title": "Declare transaction V2"
      }
    ],
    "title": "Declare transaction"
  },
  "#/components/schemas/DECLARE_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Declare txn receipt",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "title": "Declare Transaction Receipt"
  },
  "#/components/schemas/DECLARE_TXN_V0": {
    "allOf": [
      {
        "properties": {
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x0"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "max_fee",
          "version",
          "signature"
        ],
        "title": "Declare txn v0",
        "type": "object"
      },
      {
        "oneOf": [
          {
            "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
            "properties": {
              "contract_class": {
                "$ref": {
                  "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                    "description": "The definition of a StarkNet contract class",
                    "properties": {
                      "abi": {
                        "$ref": {
                          "#/components/schemas/CONTRACT_ABI": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                          "properties": {
                                            "inputs": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "name": {
                                              "description": "The function name",
                                              "title": "Function name",
                                              "type": "string"
                                            },
                                            "outputs": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "stateMutability": {
                                              "$ref": {
                                                "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                  "enum": [
                                                    "view"
                                                  ],
                                                  "title": "Function state mutability type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Function state mutability"
                                            },
                                            "type": {
                                              "$ref": {
                                                "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                  "enum": [
                                                    "function",
                                                    "l1_handler",
                                                    "constructor"
                                                  ],
                                                  "title": "Function ABI type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Function ABI type"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "inputs",
                                            "outputs"
                                          ],
                                          "title": "Function ABI entry",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Function ABI entry"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/EVENT_ABI_ENTRY": {
                                          "properties": {
                                            "data": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "keys": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "name": {
                                              "description": "The event name",
                                              "title": "Event name",
                                              "type": "string"
                                            },
                                            "type": {
                                              "$ref": {
                                                "#/components/schemas/EVENT_ABI_TYPE": {
                                                  "enum": [
                                                    "event"
                                                  ],
                                                  "title": "Event ABI type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Event ABI type"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "keys",
                                            "data"
                                          ],
                                          "title": "Event ABI entry",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Event ABI entry"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/STRUCT_ABI_ENTRY": {
                                          "properties": {
                                            "members": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/STRUCT_MEMBER": {
                                                    "allOf": [
                                                      {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        },
                                                        "title": "Typed parameter"
                                                      },
                                                      {
                                                        "properties": {
                                                          "offset": {
                                                            "description": "offset of this property within the struct",
                                                            "title": "Offset",
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "title": "Offset",
                                                        "type": "object"
                                                      }
                                                    ],
                                                    "title": "Struct member"
                                                  }
                                                }
                                              },
                                              "title": "Members",
                                              "type": "array"
                                            },
                                            "name": {
                                              "description": "The struct name",
                                              "title": "Struct name",
                                              "type": "string"
                                            },
                                            "size": {
                                              "minimum": 1,
                                              "title": "Size",
                                              "type": "integer"
                                            },
                                            "type": {
                                              "$ref": {
                                                "#/components/schemas/STRUCT_ABI_TYPE": {
                                                  "enum": [
                                                    "struct"
                                                  ],
                                                  "title": "Struct ABI type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Struct ABI type"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "size",
                                            "members"
                                          ],
                                          "title": "Struct ABI entry",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Struct ABI entry"
                                    }
                                  ],
                                  "title": "Contract ABI entry"
                                }
                              }
                            },
                            "title": "Contract ABI",
                            "type": "array"
                          }
                        },
                        "title": "Contract ABI"
                      },
                      "entry_points_by_type": {
                        "properties": {
                          "CONSTRUCTOR": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                  "properties": {
                                    "offset": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The offset of the entry point in the program",
                                      "title": "Offset"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "offset",
                                    "selector"
                                  ],
                                  "title": "Deprecated Cairo entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Deprecated constructor",
                            "type": "array"
                          },
                          "EXTERNAL": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                  "properties": {
                                    "offset": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The offset of the entry point in the program",
                                      "title": "Offset"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "offset",
                                    "selector"
                                  ],
                                  "title": "Deprecated Cairo entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Deprecated external",
                            "type": "array"
                          },
                          "L1_HANDLER": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                  "properties": {
                                    "offset": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The offset of the entry point in the program",
                                      "title": "Offset"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "offset",
                                    "selector"
                                  ],
                                  "title": "Deprecated Cairo entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Deprecated L1 handler",
                            "type": "array"
                          }
                        },
                        "title": "Deprecated entry points by type",
                        "type": "object"
                      },
                      "program": {
                        "description": "A base64 representation of the compressed program code",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                        "title": "Program",
                        "type": "string"
                      }
                    },
                    "required": [
                      "program",
                      "entry_points_by_type"
                    ],
                    "title": "Deprecated contract class",
                    "type": "object"
                  }
                },
                "description": "The class to be declared",
                "title": "Contract class"
              }
            },
            "required": [
              "contract_class"
            ],
            "title": "ContractClass",
            "type": "object"
          },
          {
            "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
            "properties": {
              "class_hash": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The hash of the declared class",
                "title": "Class hash"
              }
            },
            "required": [
              "class_hash"
            ],
            "title": "ClassHash",
            "type": "object"
          }
        ]
      }
    ],
    "description": "Declare Contract Transaction V0",
    "title": "Declare Contract Transaction V0"
  },
  "#/components/schemas/DECLARE_TXN_V1": {
    "allOf": [
      {
        "properties": {
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x1"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "max_fee",
          "version",
          "signature",
          "nonce"
        ],
        "title": "Declare txn v1",
        "type": "object"
      },
      {
        "oneOf": [
          {
            "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
            "properties": {
              "contract_class": {
                "$ref": {
                  "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                    "description": "The definition of a StarkNet contract class",
                    "properties": {
                      "abi": {
                        "$ref": {
                          "#/components/schemas/CONTRACT_ABI": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                          "properties": {
                                            "inputs": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "name": {
                                              "description": "The function name",
                                              "title": "Function name",
                                              "type": "string"
                                            },
                                            "outputs": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "stateMutability": {
                                              "$ref": {
                                                "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                  "enum": [
                                                    "view"
                                                  ],
                                                  "title": "Function state mutability type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Function state mutability"
                                            },
                                            "type": {
                                              "$ref": {
                                                "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                  "enum": [
                                                    "function",
                                                    "l1_handler",
                                                    "constructor"
                                                  ],
                                                  "title": "Function ABI type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Function ABI type"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "inputs",
                                            "outputs"
                                          ],
                                          "title": "Function ABI entry",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Function ABI entry"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/EVENT_ABI_ENTRY": {
                                          "properties": {
                                            "data": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "keys": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "The parameter's name",
                                                        "title": "Parameter name",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "description": "The parameter's type",
                                                        "title": "Parameter type",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "type"
                                                    ],
                                                    "title": "Typed parameter",
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "title": "Typed parameter",
                                              "type": "array"
                                            },
                                            "name": {
                                              "description": "The event name",
                                              "title": "Event name",
                                              "type": "string"
                                            },
                                            "type": {
                                              "$ref": {
                                                "#/components/schemas/EVENT_ABI_TYPE": {
                                                  "enum": [
                                                    "event"
                                                  ],
                                                  "title": "Event ABI type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Event ABI type"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "keys",
                                            "data"
                                          ],
                                          "title": "Event ABI entry",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Event ABI entry"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/STRUCT_ABI_ENTRY": {
                                          "properties": {
                                            "members": {
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/STRUCT_MEMBER": {
                                                    "allOf": [
                                                      {
                                                        "$ref": {
                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                            "properties": {
                                                              "name": {
                                                                "description": "The parameter's name",
                                                                "title": "Parameter name",
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "description": "The parameter's type",
                                                                "title": "Parameter type",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "name",
                                                              "type"
                                                            ],
                                                            "title": "Typed parameter",
                                                            "type": "object"
                                                          }
                                                        },
                                                        "title": "Typed parameter"
                                                      },
                                                      {
                                                        "properties": {
                                                          "offset": {
                                                            "description": "offset of this property within the struct",
                                                            "title": "Offset",
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "title": "Offset",
                                                        "type": "object"
                                                      }
                                                    ],
                                                    "title": "Struct member"
                                                  }
                                                }
                                              },
                                              "title": "Members",
                                              "type": "array"
                                            },
                                            "name": {
                                              "description": "The struct name",
                                              "title": "Struct name",
                                              "type": "string"
                                            },
                                            "size": {
                                              "minimum": 1,
                                              "title": "Size",
                                              "type": "integer"
                                            },
                                            "type": {
                                              "$ref": {
                                                "#/components/schemas/STRUCT_ABI_TYPE": {
                                                  "enum": [
                                                    "struct"
                                                  ],
                                                  "title": "Struct ABI type",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Struct ABI type"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "size",
                                            "members"
                                          ],
                                          "title": "Struct ABI entry",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Struct ABI entry"
                                    }
                                  ],
                                  "title": "Contract ABI entry"
                                }
                              }
                            },
                            "title": "Contract ABI",
                            "type": "array"
                          }
                        },
                        "title": "Contract ABI"
                      },
                      "entry_points_by_type": {
                        "properties": {
                          "CONSTRUCTOR": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                  "properties": {
                                    "offset": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The offset of the entry point in the program",
                                      "title": "Offset"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "offset",
                                    "selector"
                                  ],
                                  "title": "Deprecated Cairo entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Deprecated constructor",
                            "type": "array"
                          },
                          "EXTERNAL": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                  "properties": {
                                    "offset": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The offset of the entry point in the program",
                                      "title": "Offset"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "offset",
                                    "selector"
                                  ],
                                  "title": "Deprecated Cairo entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Deprecated external",
                            "type": "array"
                          },
                          "L1_HANDLER": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                  "properties": {
                                    "offset": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The offset of the entry point in the program",
                                      "title": "Offset"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "offset",
                                    "selector"
                                  ],
                                  "title": "Deprecated Cairo entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Deprecated L1 handler",
                            "type": "array"
                          }
                        },
                        "title": "Deprecated entry points by type",
                        "type": "object"
                      },
                      "program": {
                        "description": "A base64 representation of the compressed program code",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                        "title": "Program",
                        "type": "string"
                      }
                    },
                    "required": [
                      "program",
                      "entry_points_by_type"
                    ],
                    "title": "Deprecated contract class",
                    "type": "object"
                  }
                },
                "description": "The class to be declared",
                "title": "Contract class"
              }
            },
            "required": [
              "contract_class"
            ],
            "title": "ContractClass",
            "type": "object"
          },
          {
            "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
            "properties": {
              "class_hash": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The hash of the declared class",
                "title": "Class hash"
              }
            },
            "required": [
              "class_hash"
            ],
            "title": "ClassHash",
            "type": "object"
          }
        ]
      }
    ],
    "description": "Declare Contract Transaction V1",
    "title": "Declare Contract Transaction V1"
  },
  "#/components/schemas/DECLARE_TXN_V2": {
    "allOf": [
      {
        "properties": {
          "compiled_class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
            "title": "Compiled class hash"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x2"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "compiled_class_hash",
          "max_fee",
          "version",
          "signature",
          "nonce"
        ],
        "title": "Declare txn v2",
        "type": "object"
      },
      {
        "oneOf": [
          {
            "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
            "properties": {
              "contract_class": {
                "$ref": {
                  "#/components/schemas/CONTRACT_CLASS": {
                    "properties": {
                      "abi": {
                        "description": "The class ABI, as supplied by the user declaring the class",
                        "title": "ABI",
                        "type": "string"
                      },
                      "contract_class_version": {
                        "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                        "title": "Contract class version",
                        "type": "string"
                      },
                      "entry_points_by_type": {
                        "properties": {
                          "CONSTRUCTOR": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/SIERRA_ENTRY_POINT": {
                                  "properties": {
                                    "function_idx": {
                                      "description": "The index of the function in the program",
                                      "title": "Function index",
                                      "type": "integer"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "selector",
                                    "function_idx"
                                  ],
                                  "title": "Sierra entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "Constructor",
                            "type": "array"
                          },
                          "EXTERNAL": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/SIERRA_ENTRY_POINT": {
                                  "properties": {
                                    "function_idx": {
                                      "description": "The index of the function in the program",
                                      "title": "Function index",
                                      "type": "integer"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "selector",
                                    "function_idx"
                                  ],
                                  "title": "Sierra entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "External",
                            "type": "array"
                          },
                          "L1_HANDLER": {
                            "items": {
                              "$ref": {
                                "#/components/schemas/SIERRA_ENTRY_POINT": {
                                  "properties": {
                                    "function_idx": {
                                      "description": "The index of the function in the program",
                                      "title": "Function index",
                                      "type": "integer"
                                    },
                                    "selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "A unique identifier of the entry point (function) in the program",
                                      "title": "Selector"
                                    }
                                  },
                                  "required": [
                                    "selector",
                                    "function_idx"
                                  ],
                                  "title": "Sierra entry point",
                                  "type": "object"
                                }
                              }
                            },
                            "title": "L1 handler",
                            "type": "array"
                          }
                        },
                        "required": [
                          "CONSTRUCTOR",
                          "EXTERNAL",
                          "L1_HANDLER"
                        ],
                        "title": "Entry points by type",
                        "type": "object"
                      },
                      "sierra_program": {
                        "description": "The list of Sierra instructions of which the program consists",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Sierra program",
                        "type": "array"
                      }
                    },
                    "required": [
                      "sierra_program",
                      "contract_class_version",
                      "entry_points_by_type"
                    ],
                    "title": "Contract class",
                    "type": "object"
                  }
                },
                "description": "The class to be declared",
                "title": "Contract class"
              }
            },
            "required": [
              "countract_class"
            ],
            "title": "ContractClass",
            "type": "object"
          },
          {
            "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
            "properties": {
              "class_hash": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The hash of the declared class",
                "title": "Class hash"
              }
            },
            "required": [
              "class_hash"
            ],
            "title": "ClassHash",
            "type": "object"
          }
        ]
      }
    ],
    "description": "Declare Contract Transaction V2",
    "title": "Declare Transaction V2"
  },
  "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
    "properties": {
      "address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The address of the contract",
        "title": "Address"
      },
      "class_hash": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The hash of the contract code",
        "title": "Class hash"
      }
    },
    "required": [
      "address",
      "class_hash"
    ],
    "title": "Deployed contract item",
    "type": "object"
  },
  "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
    "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
    "properties": {
      "class_hash": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The hash of the deployed contract's class",
        "title": "Class hash"
      },
      "constructor_calldata": {
        "description": "The parameters passed to the constructor",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Constructor calldata",
        "type": "array"
      },
      "contract_address_salt": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The salt for the address of the deployed contract",
        "title": "Contract address salt"
      },
      "max_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The maximal fee that can be charged for including the transaction",
        "title": "Max fee"
      },
      "nonce": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Nonce"
      },
      "signature": {
        "$ref": {
          "#/components/schemas/SIGNATURE": {
            "description": "A transaction signature",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "Signature",
            "type": "array"
          }
        },
        "title": "Signature"
      },
      "type": {
        "enum": [
          "DEPLOY_ACCOUNT"
        ],
        "title": "Deploy account",
        "type": "string"
      },
      "version": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "Version of the transaction scheme",
        "title": "Version"
      }
    },
    "required": [
      "max_fee",
      "version",
      "signature",
      "nonce",
      "type",
      "contract_address_salt",
      "constructor_calldata",
      "class_hash"
    ],
    "title": "Deploy account transaction"
  },
  "#/components/schemas/DEPLOY_ACCOUNT_TXN_RECEIPT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      },
      {
        "properties": {
          "contract_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The address of the deployed contract",
            "title": "Contract address"
          },
          "type": {
            "enum": [
              "DEPLOY_ACCOUNT"
            ],
            "title": "Deploy account",
            "type": "string"
          }
        },
        "required": [
          "type",
          "contract_address"
        ],
        "title": "DeployAccount txn receipt",
        "type": "object"
      }
    ],
    "title": "Deploy Account Transaction Receipt"
  },
  "#/components/schemas/DEPLOY_TXN": {
    "allOf": [
      {
        "properties": {
          "class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the deployed contract's class",
            "title": "Class hash"
          },
          "constructor_calldata": {
            "description": "The parameters passed to the constructor",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "Constructor calldata",
            "type": "array"
          },
          "contract_address_salt": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The salt for the address of the deployed contract",
            "title": "Contract address salt"
          },
          "type": {
            "enum": [
              "DEPLOY"
            ],
            "title": "Deploy",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "version",
          "type",
          "constructor_calldata",
          "contract_address_salt",
          "class_hash"
        ],
        "title": "Deploy txn",
        "type": "object"
      }
    ],
    "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
    "title": "Deploy Contract Transaction"
  },
  "#/components/schemas/DEPLOY_TXN_RECEIPT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      },
      {
        "properties": {
          "contract_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The address of the deployed contract",
            "title": "Contract address"
          },
          "type": {
            "enum": [
              "DEPLOY"
            ],
            "title": "Deploy",
            "type": "string"
          }
        },
        "required": [
          "type",
          "contract_address"
        ],
        "title": "Deploy txn receipt",
        "type": "object"
      }
    ],
    "title": "Deploy Transaction Receipt"
  },
  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
    "properties": {
      "offset": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The offset of the entry point in the program",
        "title": "Offset"
      },
      "selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "A unique identifier of the entry point (function) in the program",
        "title": "Selector"
      }
    },
    "required": [
      "offset",
      "selector"
    ],
    "title": "Deprecated Cairo entry point",
    "type": "object"
  },
  "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
    "description": "The definition of a StarkNet contract class",
    "properties": {
      "abi": {
        "$ref": {
          "#/components/schemas/CONTRACT_ABI": {
            "items": {
              "$ref": {
                "#/components/schemas/CONTRACT_ABI_ENTRY": {
                  "oneOf": [
                    {
                      "$ref": {
                        "#/components/schemas/FUNCTION_ABI_ENTRY": {
                          "properties": {
                            "inputs": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "name": {
                              "description": "The function name",
                              "title": "Function name",
                              "type": "string"
                            },
                            "outputs": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "stateMutability": {
                              "$ref": {
                                "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                  "enum": [
                                    "view"
                                  ],
                                  "title": "Function state mutability type",
                                  "type": "string"
                                }
                              },
                              "title": "Function state mutability"
                            },
                            "type": {
                              "$ref": {
                                "#/components/schemas/FUNCTION_ABI_TYPE": {
                                  "enum": [
                                    "function",
                                    "l1_handler",
                                    "constructor"
                                  ],
                                  "title": "Function ABI type",
                                  "type": "string"
                                }
                              },
                              "title": "Function ABI type"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "inputs",
                            "outputs"
                          ],
                          "title": "Function ABI entry",
                          "type": "object"
                        }
                      },
                      "title": "Function ABI entry"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/EVENT_ABI_ENTRY": {
                          "properties": {
                            "data": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "keys": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "name": {
                              "description": "The event name",
                              "title": "Event name",
                              "type": "string"
                            },
                            "type": {
                              "$ref": {
                                "#/components/schemas/EVENT_ABI_TYPE": {
                                  "enum": [
                                    "event"
                                  ],
                                  "title": "Event ABI type",
                                  "type": "string"
                                }
                              },
                              "title": "Event ABI type"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "keys",
                            "data"
                          ],
                          "title": "Event ABI entry",
                          "type": "object"
                        }
                      },
                      "title": "Event ABI entry"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/STRUCT_ABI_ENTRY": {
                          "properties": {
                            "members": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/STRUCT_MEMBER": {
                                    "allOf": [
                                      {
                                        "$ref": {
                                          "#/components/schemas/TYPED_PARAMETER": {
                                            "properties": {
                                              "name": {
                                                "description": "The parameter's name",
                                                "title": "Parameter name",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "The parameter's type",
                                                "title": "Parameter type",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Typed parameter",
                                            "type": "object"
                                          }
                                        },
                                        "title": "Typed parameter"
                                      },
                                      {
                                        "properties": {
                                          "offset": {
                                            "description": "offset of this property within the struct",
                                            "title": "Offset",
                                            "type": "integer"
                                          }
                                        },
                                        "title": "Offset",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Struct member"
                                  }
                                }
                              },
                              "title": "Members",
                              "type": "array"
                            },
                            "name": {
                              "description": "The struct name",
                              "title": "Struct name",
                              "type": "string"
                            },
                            "size": {
                              "minimum": 1,
                              "title": "Size",
                              "type": "integer"
                            },
                            "type": {
                              "$ref": {
                                "#/components/schemas/STRUCT_ABI_TYPE": {
                                  "enum": [
                                    "struct"
                                  ],
                                  "title": "Struct ABI type",
                                  "type": "string"
                                }
                              },
                              "title": "Struct ABI type"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "size",
                            "members"
                          ],
                          "title": "Struct ABI entry",
                          "type": "object"
                        }
                      },
                      "title": "Struct ABI entry"
                    }
                  ],
                  "title": "Contract ABI entry"
                }
              }
            },
            "title": "Contract ABI",
            "type": "array"
          }
        },
        "title": "Contract ABI"
      },
      "entry_points_by_type": {
        "properties": {
          "CONSTRUCTOR": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                  "properties": {
                    "offset": {
                      "$ref": {
                        "#/components/schemas/NUM_AS_HEX": {
                          "description": "An integer number in hex format (0x...)",
                          "pattern": "^0x[a-fA-F0-9]+$",
                          "title": "Number as hex",
                          "type": "string"
                        }
                      },
                      "description": "The offset of the entry point in the program",
                      "title": "Offset"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "offset",
                    "selector"
                  ],
                  "title": "Deprecated Cairo entry point",
                  "type": "object"
                }
              }
            },
            "title": "Deprecated constructor",
            "type": "array"
          },
          "EXTERNAL": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                  "properties": {
                    "offset": {
                      "$ref": {
                        "#/components/schemas/NUM_AS_HEX": {
                          "description": "An integer number in hex format (0x...)",
                          "pattern": "^0x[a-fA-F0-9]+$",
                          "title": "Number as hex",
                          "type": "string"
                        }
                      },
                      "description": "The offset of the entry point in the program",
                      "title": "Offset"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "offset",
                    "selector"
                  ],
                  "title": "Deprecated Cairo entry point",
                  "type": "object"
                }
              }
            },
            "title": "Deprecated external",
            "type": "array"
          },
          "L1_HANDLER": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                  "properties": {
                    "offset": {
                      "$ref": {
                        "#/components/schemas/NUM_AS_HEX": {
                          "description": "An integer number in hex format (0x...)",
                          "pattern": "^0x[a-fA-F0-9]+$",
                          "title": "Number as hex",
                          "type": "string"
                        }
                      },
                      "description": "The offset of the entry point in the program",
                      "title": "Offset"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "offset",
                    "selector"
                  ],
                  "title": "Deprecated Cairo entry point",
                  "type": "object"
                }
              }
            },
            "title": "Deprecated L1 handler",
            "type": "array"
          }
        },
        "title": "Deprecated entry points by type",
        "type": "object"
      },
      "program": {
        "description": "A base64 representation of the compressed program code",
        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
        "title": "Program",
        "type": "string"
      }
    },
    "required": [
      "program",
      "entry_points_by_type"
    ],
    "title": "Deprecated contract class",
    "type": "object"
  },
  "#/components/schemas/EMITTED_EVENT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/EVENT": {
            "allOf": [
              {
                "properties": {
                  "from_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "title": "From address"
                  }
                },
                "required": [
                  "from_address"
                ],
                "title": "Event emitter",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/EVENT_CONTENT": {
                    "description": "The content of an event",
                    "properties": {
                      "data": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Data",
                        "type": "array"
                      },
                      "keys": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Keys",
                        "type": "array"
                      }
                    },
                    "required": [
                      "keys",
                      "data"
                    ],
                    "title": "Event content",
                    "type": "object"
                  }
                },
                "title": "Event content"
              }
            ],
            "description": "A StarkNet event",
            "title": "Event"
          }
        },
        "description": "The event information",
        "title": "Event"
      },
      {
        "description": "The event emission information",
        "properties": {
          "block_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "description": "The hash of the block in which the event was emitted",
            "title": "Block hash"
          },
          "block_number": {
            "$ref": {
              "#/components/schemas/BLOCK_NUMBER": {
                "description": "The block's number (its height)",
                "minimum": 0,
                "title": "Block number",
                "type": "integer"
              }
            },
            "description": "The number of the block in which the event was emitted",
            "title": "Block number"
          },
          "transaction_hash": {
            "$ref": {
              "#/components/schemas/TXN_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The transaction hash, as assigned in StarkNet",
                "title": "Transaction hash"
              }
            },
            "description": "The transaction that emitted the event",
            "title": "Transaction hash"
          }
        },
        "required": [
          "block_hash",
          "block_number",
          "transaction_hash"
        ],
        "title": "Event context",
        "type": "object"
      }
    ],
    "description": "Event information decorated with metadata on where it was emitted / An event emitted as a result of transaction execution",
    "title": "Emitted event"
  },
  "#/components/schemas/ETH_ADDRESS": {
    "$comment": "An ethereum address",
    "description": "an ethereum address represented as 40 hex digits",
    "pattern": "^0x[a-fA-F0-9]{40}$",
    "title": "Ethereum address",
    "type": "string"
  },
  "#/components/schemas/EVENT": {
    "allOf": [
      {
        "properties": {
          "from_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "title": "From address"
          }
        },
        "required": [
          "from_address"
        ],
        "title": "Event emitter",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/EVENT_CONTENT": {
            "description": "The content of an event",
            "properties": {
              "data": {
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Data",
                "type": "array"
              },
              "keys": {
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Keys",
                "type": "array"
              }
            },
            "required": [
              "keys",
              "data"
            ],
            "title": "Event content",
            "type": "object"
          }
        },
        "title": "Event content"
      }
    ],
    "description": "A StarkNet event",
    "title": "Event"
  },
  "#/components/schemas/EVENTS_CHUNK": {
    "properties": {
      "continuation_token": {
        "description": "Use this token in a subsequent query to obtain the next page. Should not appear if there are no more pages.",
        "title": "Continuation token",
        "type": "string"
      },
      "events": {
        "items": {
          "$ref": {
            "#/components/schemas/EMITTED_EVENT": {
              "allOf": [
                {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  },
                  "description": "The event information",
                  "title": "Event"
                },
                {
                  "description": "The event emission information",
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "description": "The hash of the block in which the event was emitted",
                      "title": "Block hash"
                    },
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "description": "The number of the block in which the event was emitted",
                      "title": "Block number"
                    },
                    "transaction_hash": {
                      "$ref": {
                        "#/components/schemas/TXN_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The transaction hash, as assigned in StarkNet",
                          "title": "Transaction hash"
                        }
                      },
                      "description": "The transaction that emitted the event",
                      "title": "Transaction hash"
                    }
                  },
                  "required": [
                    "block_hash",
                    "block_number",
                    "transaction_hash"
                  ],
                  "title": "Event context",
                  "type": "object"
                }
              ],
              "description": "Event information decorated with metadata on where it was emitted / An event emitted as a result of transaction execution",
              "title": "Emitted event"
            }
          }
        },
        "title": "Matching Events",
        "type": "array"
      }
    },
    "required": [
      "events"
    ],
    "title": "Events chunk",
    "type": "object"
  },
  "#/components/schemas/EVENT_ABI_ENTRY": {
    "properties": {
      "data": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "keys": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "name": {
        "description": "The event name",
        "title": "Event name",
        "type": "string"
      },
      "type": {
        "$ref": {
          "#/components/schemas/EVENT_ABI_TYPE": {
            "enum": [
              "event"
            ],
            "title": "Event ABI type",
            "type": "string"
          }
        },
        "title": "Event ABI type"
      }
    },
    "required": [
      "type",
      "name",
      "keys",
      "data"
    ],
    "title": "Event ABI entry",
    "type": "object"
  },
  "#/components/schemas/EVENT_ABI_TYPE": {
    "enum": [
      "event"
    ],
    "title": "Event ABI type",
    "type": "string"
  },
  "#/components/schemas/EVENT_CONTENT": {
    "description": "The content of an event",
    "properties": {
      "data": {
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Data",
        "type": "array"
      },
      "keys": {
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Keys",
        "type": "array"
      }
    },
    "required": [
      "keys",
      "data"
    ],
    "title": "Event content",
    "type": "object"
  },
  "#/components/schemas/EVENT_FILTER": {
    "description": "An event filter/query",
    "properties": {
      "address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "title": "from contract"
      },
      "from_block": {
        "$ref": {
          "#/components/schemas/BLOCK_ID": {
            "description": "Block hash, number or tag",
            "oneOf": [
              {
                "properties": {
                  "block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "required": [
                  "block_hash"
                ],
                "title": "Block hash",
                "type": "object"
              },
              {
                "properties": {
                  "block_number": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "title": "Block number"
                  }
                },
                "required": [
                  "block_number"
                ],
                "title": "Block number",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/BLOCK_TAG": {
                    "description": "A tag specifying a dynamic reference to a block",
                    "enum": [
                      "latest",
                      "pending"
                    ],
                    "title": "Block tag",
                    "type": "string"
                  }
                },
                "title": "Block tag"
              }
            ],
            "title": "Block id"
          }
        },
        "title": "from block"
      },
      "keys": {
        "description": "The values used to filter the events",
        "items": {
          "description": "Per key (by position), designate the possible values to be matched for events to be returned. Empty array designates 'any' value",
          "items": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            }
          },
          "title": "Keys",
          "type": "array"
        },
        "title": "Keys",
        "type": "array"
      },
      "to_block": {
        "$ref": {
          "#/components/schemas/BLOCK_ID": {
            "description": "Block hash, number or tag",
            "oneOf": [
              {
                "properties": {
                  "block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "required": [
                  "block_hash"
                ],
                "title": "Block hash",
                "type": "object"
              },
              {
                "properties": {
                  "block_number": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "title": "Block number"
                  }
                },
                "required": [
                  "block_number"
                ],
                "title": "Block number",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/BLOCK_TAG": {
                    "description": "A tag specifying a dynamic reference to a block",
                    "enum": [
                      "latest",
                      "pending"
                    ],
                    "title": "Block tag",
                    "type": "string"
                  }
                },
                "title": "Block tag"
              }
            ],
            "title": "Block id"
          }
        },
        "title": "to block"
      }
    },
    "required": [],
    "title": "Event filter",
    "type": "object"
  },
  "#/components/schemas/FEE_ESTIMATE": {
    "properties": {
      "gas_consumed": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The Ethereum gas cost of the transaction (see https://docs.starknet.io/docs/Fees/fee-mechanism for more info)",
        "title": "Gas consumed"
      },
      "gas_price": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The gas price (in gwei) that was used in the cost estimation",
        "title": "Gas price"
      },
      "overall_fee": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The estimated fee for the transaction (in gwei), product of gas_consumed and gas_price",
        "title": "Overall fee"
      }
    },
    "required": [
      "gas_consumed",
      "gas_price",
      "overall_fee"
    ],
    "title": "Fee estimation",
    "type": "object"
  },
  "#/components/schemas/FELT": {
    "description": "A field element. represented by at most 63 hex digits",
    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
    "title": "Field element",
    "type": "string"
  },
  "#/components/schemas/FUNCTION_ABI_ENTRY": {
    "properties": {
      "inputs": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "name": {
        "description": "The function name",
        "title": "Function name",
        "type": "string"
      },
      "outputs": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "stateMutability": {
        "$ref": {
          "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
            "enum": [
              "view"
            ],
            "title": "Function state mutability type",
            "type": "string"
          }
        },
        "title": "Function state mutability"
      },
      "type": {
        "$ref": {
          "#/components/schemas/FUNCTION_ABI_TYPE": {
            "enum": [
              "function",
              "l1_handler",
              "constructor"
            ],
            "title": "Function ABI type",
            "type": "string"
          }
        },
        "title": "Function ABI type"
      }
    },
    "required": [
      "type",
      "name",
      "inputs",
      "outputs"
    ],
    "title": "Function ABI entry",
    "type": "object"
  },
  "#/components/schemas/FUNCTION_ABI_TYPE": {
    "enum": [
      "function",
      "l1_handler",
      "constructor"
    ],
    "title": "Function ABI type",
    "type": "string"
  },
  "#/components/schemas/FUNCTION_CALL": {
    "description": "Function call information",
    "properties": {
      "calldata": {
        "description": "The parameters passed to the function",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Calldata",
        "type": "array"
      },
      "contract_address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "title": "Contract address"
      },
      "entry_point_selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Entry point selector"
      }
    },
    "required": [
      "contract_address",
      "entry_point_selector",
      "calldata"
    ],
    "title": "Function call",
    "type": "object"
  },
  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
    "enum": [
      "view"
    ],
    "title": "Function state mutability type",
    "type": "string"
  },
  "#/components/schemas/INVOKE_TXN": {
    "description": "Initiate a transaction from an account",
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_V0": {
            "description": "invokes a specific function in the desired contract (not necessarily an account)",
            "properties": {
              "calldata": {
                "description": "The parameters passed to the function",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Calldata",
                "type": "array"
              },
              "contract_address": {
                "$ref": {
                  "#/components/schemas/ADDRESS": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Address"
                  }
                },
                "title": "Contract address"
              },
              "entry_point_selector": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Entry point selector"
              },
              "max_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The maximal fee that can be charged for including the transaction",
                "title": "Max fee"
              },
              "signature": {
                "$ref": {
                  "#/components/schemas/SIGNATURE": {
                    "description": "A transaction signature",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Signature",
                    "type": "array"
                  }
                },
                "title": "Signature"
              },
              "type": {
                "enum": [
                  "INVOKE"
                ],
                "title": "Type",
                "type": "string"
              },
              "version": {
                "description": "Version of the transaction scheme",
                "enum": [
                  "0x0"
                ],
                "title": "Version",
                "type": "string"
              }
            },
            "required": [
              "type",
              "contract_address",
              "entry_point_selector",
              "calldata",
              "max_fee",
              "version",
              "signature"
            ],
            "title": "Invoke transaction V0"
          }
        },
        "title": "Invoke transaction V0"
      },
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_V1": {
            "allOf": [
              {
                "properties": {
                  "calldata": {
                    "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "calldata",
                    "type": "array"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "title": "sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "INVOKE"
                    ],
                    "title": "Type",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x1"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "calldata",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce"
                ],
                "type": "object"
              }
            ],
            "description": "initiates a transaction from a given account",
            "title": "Invoke transaction V1"
          }
        },
        "title": "Invoke transaction V1"
      }
    ],
    "title": "Invoke transaction"
  },
  "#/components/schemas/INVOKE_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "INVOKE"
            ],
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Type",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "title": "Invoke Transaction Receipt"
  },
  "#/components/schemas/INVOKE_TXN_V0": {
    "description": "invokes a specific function in the desired contract (not necessarily an account)",
    "properties": {
      "calldata": {
        "description": "The parameters passed to the function",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Calldata",
        "type": "array"
      },
      "contract_address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "title": "Contract address"
      },
      "entry_point_selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Entry point selector"
      },
      "max_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The maximal fee that can be charged for including the transaction",
        "title": "Max fee"
      },
      "signature": {
        "$ref": {
          "#/components/schemas/SIGNATURE": {
            "description": "A transaction signature",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "Signature",
            "type": "array"
          }
        },
        "title": "Signature"
      },
      "type": {
        "enum": [
          "INVOKE"
        ],
        "title": "Type",
        "type": "string"
      },
      "version": {
        "description": "Version of the transaction scheme",
        "enum": [
          "0x0"
        ],
        "title": "Version",
        "type": "string"
      }
    },
    "required": [
      "type",
      "contract_address",
      "entry_point_selector",
      "calldata",
      "max_fee",
      "version",
      "signature"
    ],
    "title": "Invoke transaction V0"
  },
  "#/components/schemas/INVOKE_TXN_V1": {
    "allOf": [
      {
        "properties": {
          "calldata": {
            "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "calldata",
            "type": "array"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "title": "sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "INVOKE"
            ],
            "title": "Type",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x1"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "calldata",
          "max_fee",
          "version",
          "signature",
          "nonce"
        ],
        "type": "object"
      }
    ],
    "description": "initiates a transaction from a given account",
    "title": "Invoke transaction V1"
  },
  "#/components/schemas/L1_HANDLER_TXN": {
    "allOf": [
      {
        "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
        "properties": {
          "nonce": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
            "title": "Nonce"
          },
          "type": {
            "enum": [
              "L1_HANDLER"
            ],
            "title": "type",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "version",
          "type",
          "nonce"
        ],
        "title": "L1 handler transaction",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/FUNCTION_CALL": {
            "description": "Function call information",
            "properties": {
              "calldata": {
                "description": "The parameters passed to the function",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Calldata",
                "type": "array"
              },
              "contract_address": {
                "$ref": {
                  "#/components/schemas/ADDRESS": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Address"
                  }
                },
                "title": "Contract address"
              },
              "entry_point_selector": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Entry point selector"
              }
            },
            "required": [
              "contract_address",
              "entry_point_selector",
              "calldata"
            ],
            "title": "Function call",
            "type": "object"
          }
        },
        "title": "Function call"
      }
    ],
    "title": "L1 Handler transaction"
  },
  "#/components/schemas/L1_HANDLER_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "L1_HANDLER"
            ],
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Transaction type",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "description": "receipt for l1 handler transaction",
    "title": "L1 Handler Transaction Receipt"
  },
  "#/components/schemas/MSG_FROM_L1": {
    "properties": {
      "entry_point_selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The selector of the l1_handler in invoke in the target contract",
        "title": "Selector"
      },
      "from_address": {
        "$ref": {
          "#/components/schemas/ETH_ADDRESS": {
            "$comment": "An ethereum address",
            "description": "an ethereum address represented as 40 hex digits",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "title": "Ethereum address",
            "type": "string"
          }
        },
        "description": "The address of the L1 contract sending the message"
      },
      "payload": {
        "description": "The payload of the message",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Payload",
        "type": "array"
      },
      "to_address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "description": "The target L2 address the message is sent to",
        "title": "To address"
      }
    },
    "required": [
      "from_address",
      "to_address",
      "payload",
      "entry_point_selector"
    ],
    "title": "Message from L1",
    "type": "object"
  },
  "#/components/schemas/MSG_TO_L1": {
    "properties": {
      "from_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The address of the L2 contract sending the message"
      },
      "payload": {
        "description": "The payload of the message",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Payload",
        "type": "array"
      },
      "to_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The target L1 address the message is sent to",
        "title": "To address"
      }
    },
    "required": [
      "from_address",
      "to_address",
      "payload"
    ],
    "title": "Message to L1",
    "type": "object"
  },
  "#/components/schemas/NUM_AS_HEX": {
    "description": "An integer number in hex format (0x...)",
    "pattern": "^0x[a-fA-F0-9]+$",
    "title": "Number as hex",
    "type": "string"
  },
  "#/components/schemas/PENDING_BLOCK_WITH_TXS": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TXS": {
            "properties": {
              "transactions": {
                "description": "The transactions in this block",
                "items": {
                  "allOf": [
                    {
                      "$ref": {
                        "#/components/schemas/TXN": {
                          "description": "The transaction schema, as it appears inside a block",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN": {
                                  "description": "Initiate a transaction from an account",
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V0": {
                                          "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            },
                                            "max_fee": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The maximal fee that can be charged for including the transaction",
                                              "title": "Max fee"
                                            },
                                            "signature": {
                                              "$ref": {
                                                "#/components/schemas/SIGNATURE": {
                                                  "description": "A transaction signature",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Signature",
                                                  "type": "array"
                                                }
                                              },
                                              "title": "Signature"
                                            },
                                            "type": {
                                              "enum": [
                                                "INVOKE"
                                              ],
                                              "title": "Type",
                                              "type": "string"
                                            },
                                            "version": {
                                              "description": "Version of the transaction scheme",
                                              "enum": [
                                                "0x0"
                                              ],
                                              "title": "Version",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata",
                                            "max_fee",
                                            "version",
                                            "signature"
                                          ],
                                          "title": "Invoke transaction V0"
                                        }
                                      },
                                      "title": "Invoke transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "calldata": {
                                                  "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "calldata",
                                                  "type": "array"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "title": "sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "INVOKE"
                                                  ],
                                                  "title": "Type",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x1"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "calldata",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "type": "object"
                                            }
                                          ],
                                          "description": "initiates a transaction from a given account",
                                          "title": "Invoke transaction V1"
                                        }
                                      },
                                      "title": "Invoke transaction V1"
                                    }
                                  ],
                                  "title": "Invoke transaction"
                                }
                              },
                              "title": "Invoke transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/L1_HANDLER_TXN": {
                                  "allOf": [
                                    {
                                      "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                                      "properties": {
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                          "title": "Nonce"
                                        },
                                        "type": {
                                          "enum": [
                                            "L1_HANDLER"
                                          ],
                                          "title": "type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "nonce"
                                      ],
                                      "title": "L1 handler transaction",
                                      "type": "object"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/FUNCTION_CALL": {
                                          "description": "Function call information",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            }
                                          },
                                          "required": [
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata"
                                          ],
                                          "title": "Function call",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Function call"
                                    }
                                  ],
                                  "title": "L1 Handler transaction"
                                }
                              },
                              "title": "L1 handler transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN": {
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V0": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x0"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature"
                                              ],
                                              "title": "Declare txn v0",
                                              "type": "object"
                                            },
                                            {
                                              "oneOf": [
                                                {
                                                  "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                  "properties": {
                                                    "contract_class": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                          "description": "The definition of a StarkNet contract class",
                                                          "properties": {
                                                            "abi": {
                                                              "$ref": {
                                                                "#/components/schemas/CONTRACT_ABI": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                        "oneOf": [
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "inputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The function name",
                                                                                    "title": "Function name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "outputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "stateMutability": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                        "enum": [
                                                                                          "view"
                                                                                        ],
                                                                                        "title": "Function state mutability type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function state mutability"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "function",
                                                                                          "l1_handler",
                                                                                          "constructor"
                                                                                        ],
                                                                                        "title": "Function ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "inputs",
                                                                                  "outputs"
                                                                                ],
                                                                                "title": "Function ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "data": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "keys": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The event name",
                                                                                    "title": "Event name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "event"
                                                                                        ],
                                                                                        "title": "Event ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Event ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "keys",
                                                                                  "data"
                                                                                ],
                                                                                "title": "Event ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "members": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/STRUCT_MEMBER": {
                                                                                          "allOf": [
                                                                                            {
                                                                                              "$ref": {
                                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                                  "properties": {
                                                                                                    "name": {
                                                                                                      "description": "The parameter's name",
                                                                                                      "title": "Parameter name",
                                                                                                      "type": "string"
                                                                                                    },
                                                                                                    "type": {
                                                                                                      "description": "The parameter's type",
                                                                                                      "title": "Parameter type",
                                                                                                      "type": "string"
                                                                                                    }
                                                                                                  },
                                                                                                  "required": [
                                                                                                    "name",
                                                                                                    "type"
                                                                                                  ],
                                                                                                  "title": "Typed parameter",
                                                                                                  "type": "object"
                                                                                                }
                                                                                              },
                                                                                              "title": "Typed parameter"
                                                                                            },
                                                                                            {
                                                                                              "properties": {
                                                                                                "offset": {
                                                                                                  "description": "offset of this property within the struct",
                                                                                                  "title": "Offset",
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              },
                                                                                              "title": "Offset",
                                                                                              "type": "object"
                                                                                            }
                                                                                          ],
                                                                                          "title": "Struct member"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Members",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The struct name",
                                                                                    "title": "Struct name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "size": {
                                                                                    "minimum": 1,
                                                                                    "title": "Size",
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "struct"
                                                                                        ],
                                                                                        "title": "Struct ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Struct ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "size",
                                                                                  "members"
                                                                                ],
                                                                                "title": "Struct ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI entry"
                                                                          }
                                                                        ],
                                                                        "title": "Contract ABI entry"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Contract ABI",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Contract ABI"
                                                            },
                                                            "entry_points_by_type": {
                                                              "properties": {
                                                                "CONSTRUCTOR": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated constructor",
                                                                  "type": "array"
                                                                },
                                                                "EXTERNAL": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated external",
                                                                  "type": "array"
                                                                },
                                                                "L1_HANDLER": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated L1 handler",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Deprecated entry points by type",
                                                              "type": "object"
                                                            },
                                                            "program": {
                                                              "description": "A base64 representation of the compressed program code",
                                                              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                              "title": "Program",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "program",
                                                            "entry_points_by_type"
                                                          ],
                                                          "title": "Deprecated contract class",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "description": "The class to be declared",
                                                      "title": "Contract class"
                                                    }
                                                  },
                                                  "required": [
                                                    "contract_class"
                                                  ],
                                                  "title": "ContractClass",
                                                  "type": "object"
                                                },
                                                {
                                                  "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the declared class",
                                                      "title": "Class hash"
                                                    }
                                                  },
                                                  "required": [
                                                    "class_hash"
                                                  ],
                                                  "title": "ClassHash",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V0",
                                          "title": "Declare Contract Transaction V0"
                                        }
                                      },
                                      "title": "Declare transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x1"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "title": "Declare txn v1",
                                              "type": "object"
                                            },
                                            {
                                              "oneOf": [
                                                {
                                                  "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                  "properties": {
                                                    "contract_class": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                          "description": "The definition of a StarkNet contract class",
                                                          "properties": {
                                                            "abi": {
                                                              "$ref": {
                                                                "#/components/schemas/CONTRACT_ABI": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                        "oneOf": [
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "inputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The function name",
                                                                                    "title": "Function name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "outputs": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "stateMutability": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                        "enum": [
                                                                                          "view"
                                                                                        ],
                                                                                        "title": "Function state mutability type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function state mutability"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "function",
                                                                                          "l1_handler",
                                                                                          "constructor"
                                                                                        ],
                                                                                        "title": "Function ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Function ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "inputs",
                                                                                  "outputs"
                                                                                ],
                                                                                "title": "Function ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "data": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "keys": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The event name",
                                                                                    "title": "Event name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "event"
                                                                                        ],
                                                                                        "title": "Event ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Event ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "keys",
                                                                                  "data"
                                                                                ],
                                                                                "title": "Event ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI entry"
                                                                          },
                                                                          {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                "properties": {
                                                                                  "members": {
                                                                                    "items": {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/STRUCT_MEMBER": {
                                                                                          "allOf": [
                                                                                            {
                                                                                              "$ref": {
                                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                                  "properties": {
                                                                                                    "name": {
                                                                                                      "description": "The parameter's name",
                                                                                                      "title": "Parameter name",
                                                                                                      "type": "string"
                                                                                                    },
                                                                                                    "type": {
                                                                                                      "description": "The parameter's type",
                                                                                                      "title": "Parameter type",
                                                                                                      "type": "string"
                                                                                                    }
                                                                                                  },
                                                                                                  "required": [
                                                                                                    "name",
                                                                                                    "type"
                                                                                                  ],
                                                                                                  "title": "Typed parameter",
                                                                                                  "type": "object"
                                                                                                }
                                                                                              },
                                                                                              "title": "Typed parameter"
                                                                                            },
                                                                                            {
                                                                                              "properties": {
                                                                                                "offset": {
                                                                                                  "description": "offset of this property within the struct",
                                                                                                  "title": "Offset",
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              },
                                                                                              "title": "Offset",
                                                                                              "type": "object"
                                                                                            }
                                                                                          ],
                                                                                          "title": "Struct member"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "title": "Members",
                                                                                    "type": "array"
                                                                                  },
                                                                                  "name": {
                                                                                    "description": "The struct name",
                                                                                    "title": "Struct name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "size": {
                                                                                    "minimum": 1,
                                                                                    "title": "Size",
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "type": {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                        "enum": [
                                                                                          "struct"
                                                                                        ],
                                                                                        "title": "Struct ABI type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "title": "Struct ABI type"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "type",
                                                                                  "name",
                                                                                  "size",
                                                                                  "members"
                                                                                ],
                                                                                "title": "Struct ABI entry",
                                                                                "type": "object"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI entry"
                                                                          }
                                                                        ],
                                                                        "title": "Contract ABI entry"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Contract ABI",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Contract ABI"
                                                            },
                                                            "entry_points_by_type": {
                                                              "properties": {
                                                                "CONSTRUCTOR": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated constructor",
                                                                  "type": "array"
                                                                },
                                                                "EXTERNAL": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated external",
                                                                  "type": "array"
                                                                },
                                                                "L1_HANDLER": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "$ref": {
                                                                              "#/components/schemas/NUM_AS_HEX": {
                                                                                "description": "An integer number in hex format (0x...)",
                                                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                                                "title": "Number as hex",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "The offset of the entry point in the program",
                                                                            "title": "Offset"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "offset",
                                                                          "selector"
                                                                        ],
                                                                        "title": "Deprecated Cairo entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Deprecated L1 handler",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Deprecated entry points by type",
                                                              "type": "object"
                                                            },
                                                            "program": {
                                                              "description": "A base64 representation of the compressed program code",
                                                              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                              "title": "Program",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "program",
                                                            "entry_points_by_type"
                                                          ],
                                                          "title": "Deprecated contract class",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "description": "The class to be declared",
                                                      "title": "Contract class"
                                                    }
                                                  },
                                                  "required": [
                                                    "contract_class"
                                                  ],
                                                  "title": "ContractClass",
                                                  "type": "object"
                                                },
                                                {
                                                  "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the declared class",
                                                      "title": "Class hash"
                                                    }
                                                  },
                                                  "required": [
                                                    "class_hash"
                                                  ],
                                                  "title": "ClassHash",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V1",
                                          "title": "Declare Contract Transaction V1"
                                        }
                                      },
                                      "title": "Declare transaction V1"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V2": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "compiled_class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                                  "title": "Compiled class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x2"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "compiled_class_hash",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "title": "Declare txn v2",
                                              "type": "object"
                                            },
                                            {
                                              "oneOf": [
                                                {
                                                  "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                  "properties": {
                                                    "contract_class": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_CLASS": {
                                                          "properties": {
                                                            "abi": {
                                                              "description": "The class ABI, as supplied by the user declaring the class",
                                                              "title": "ABI",
                                                              "type": "string"
                                                            },
                                                            "contract_class_version": {
                                                              "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                              "title": "Contract class version",
                                                              "type": "string"
                                                            },
                                                            "entry_points_by_type": {
                                                              "properties": {
                                                                "CONSTRUCTOR": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "function_idx": {
                                                                            "description": "The index of the function in the program",
                                                                            "title": "Function index",
                                                                            "type": "integer"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "selector",
                                                                          "function_idx"
                                                                        ],
                                                                        "title": "Sierra entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Constructor",
                                                                  "type": "array"
                                                                },
                                                                "EXTERNAL": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "function_idx": {
                                                                            "description": "The index of the function in the program",
                                                                            "title": "Function index",
                                                                            "type": "integer"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "selector",
                                                                          "function_idx"
                                                                        ],
                                                                        "title": "Sierra entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "External",
                                                                  "type": "array"
                                                                },
                                                                "L1_HANDLER": {
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                        "properties": {
                                                                          "function_idx": {
                                                                            "description": "The index of the function in the program",
                                                                            "title": "Function index",
                                                                            "type": "integer"
                                                                          },
                                                                          "selector": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "description": "A unique identifier of the entry point (function) in the program",
                                                                            "title": "Selector"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "selector",
                                                                          "function_idx"
                                                                        ],
                                                                        "title": "Sierra entry point",
                                                                        "type": "object"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "L1 handler",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "required": [
                                                                "CONSTRUCTOR",
                                                                "EXTERNAL",
                                                                "L1_HANDLER"
                                                              ],
                                                              "title": "Entry points by type",
                                                              "type": "object"
                                                            },
                                                            "sierra_program": {
                                                              "description": "The list of Sierra instructions of which the program consists",
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/FELT": {
                                                                    "description": "A field element. represented by at most 63 hex digits",
                                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                    "title": "Field element",
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Sierra program",
                                                              "type": "array"
                                                            }
                                                          },
                                                          "required": [
                                                            "sierra_program",
                                                            "contract_class_version",
                                                            "entry_points_by_type"
                                                          ],
                                                          "title": "Contract class",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "description": "The class to be declared",
                                                      "title": "Contract class"
                                                    }
                                                  },
                                                  "required": [
                                                    "countract_class"
                                                  ],
                                                  "title": "ContractClass",
                                                  "type": "object"
                                                },
                                                {
                                                  "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the declared class",
                                                      "title": "Class hash"
                                                    }
                                                  },
                                                  "required": [
                                                    "class_hash"
                                                  ],
                                                  "title": "ClassHash",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V2",
                                          "title": "Declare Transaction V2"
                                        }
                                      },
                                      "title": "Declare transaction V2"
                                    }
                                  ],
                                  "title": "Declare transaction"
                                }
                              },
                              "title": "Declare transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_TXN": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the deployed contract's class",
                                          "title": "Class hash"
                                        },
                                        "constructor_calldata": {
                                          "description": "The parameters passed to the constructor",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Constructor calldata",
                                          "type": "array"
                                        },
                                        "contract_address_salt": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The salt for the address of the deployed contract",
                                          "title": "Contract address salt"
                                        },
                                        "type": {
                                          "enum": [
                                            "DEPLOY"
                                          ],
                                          "title": "Deploy",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "constructor_calldata",
                                        "contract_address_salt",
                                        "class_hash"
                                      ],
                                      "title": "Deploy txn",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                                  "title": "Deploy Contract Transaction"
                                }
                              },
                              "title": "Deploy transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                                  "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                  "properties": {
                                    "class_hash": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The hash of the deployed contract's class",
                                      "title": "Class hash"
                                    },
                                    "constructor_calldata": {
                                      "description": "The parameters passed to the constructor",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Constructor calldata",
                                      "type": "array"
                                    },
                                    "contract_address_salt": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The salt for the address of the deployed contract",
                                      "title": "Contract address salt"
                                    },
                                    "max_fee": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The maximal fee that can be charged for including the transaction",
                                      "title": "Max fee"
                                    },
                                    "nonce": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Nonce"
                                    },
                                    "signature": {
                                      "$ref": {
                                        "#/components/schemas/SIGNATURE": {
                                          "description": "A transaction signature",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Signature",
                                          "type": "array"
                                        }
                                      },
                                      "title": "Signature"
                                    },
                                    "type": {
                                      "enum": [
                                        "DEPLOY_ACCOUNT"
                                      ],
                                      "title": "Deploy account",
                                      "type": "string"
                                    },
                                    "version": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "Version of the transaction scheme",
                                      "title": "Version"
                                    }
                                  },
                                  "required": [
                                    "max_fee",
                                    "version",
                                    "signature",
                                    "nonce",
                                    "type",
                                    "contract_address_salt",
                                    "constructor_calldata",
                                    "class_hash"
                                  ],
                                  "title": "Deploy account transaction"
                                }
                              },
                              "title": "Deploy account transaction"
                            }
                          ],
                          "title": "Transaction"
                        }
                      },
                      "title": "transaction"
                    },
                    {
                      "properties": {
                        "transaction_hash": {
                          "$ref": {
                            "#/components/schemas/TXN_HASH": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The transaction hash, as assigned in StarkNet",
                              "title": "Transaction hash"
                            }
                          },
                          "title": "transaction hash"
                        }
                      },
                      "required": [
                        "transaction_hash"
                      ],
                      "type": "object"
                    }
                  ],
                  "title": "transactions in block",
                  "type": "object"
                },
                "title": "Transactions",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transactions",
            "type": "object"
          }
        },
        "title": "Block body with transactions"
      },
      {
        "properties": {
          "parent_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "description": "The hash of this block's parent",
            "title": "Parent hash"
          },
          "sequencer_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The StarkNet identity of the sequencer submitting this block",
            "title": "Sequencer address"
          },
          "timestamp": {
            "description": "The time in which the block was created, encoded in Unix time",
            "minimum": 0,
            "title": "Timestamp",
            "type": "integer"
          }
        },
        "title": "Block Info",
        "type": "object"
      }
    ],
    "description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
    "title": "Pending block with transactions"
  },
  "#/components/schemas/PENDING_BLOCK_WITH_TX_HASHES": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
            "properties": {
              "transactions": {
                "description": "The hashes of the transactions included in this block",
                "items": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "description": "The hash of a single transaction"
                },
                "title": "Transaction",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transaction hashes",
            "type": "object"
          }
        },
        "title": "Block body with transactions hashes"
      },
      {
        "properties": {
          "parent_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "description": "The hash of this block's parent",
            "title": "Parent hash"
          },
          "sequencer_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The StarkNet identity of the sequencer submitting this block",
            "title": "Sequencer address"
          },
          "timestamp": {
            "description": "The time in which the block was created, encoded in Unix time",
            "minimum": 0,
            "title": "Timestamp",
            "type": "integer"
          }
        },
        "title": "Pending block header",
        "type": "object"
      }
    ],
    "description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
    "title": "Pending block with transaction hashes"
  },
  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
    "description": "Common properties for a pending transaction receipt",
    "properties": {
      "actual_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The fee that was charged by the sequencer",
        "title": "Actual fee"
      },
      "events": {
        "description": "The events emitted as part of this transaction",
        "items": {
          "$ref": {
            "#/components/schemas/EVENT": {
              "allOf": [
                {
                  "properties": {
                    "from_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "title": "From address"
                    }
                  },
                  "required": [
                    "from_address"
                  ],
                  "title": "Event emitter",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/EVENT_CONTENT": {
                      "description": "The content of an event",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Data",
                          "type": "array"
                        },
                        "keys": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Keys",
                          "type": "array"
                        }
                      },
                      "required": [
                        "keys",
                        "data"
                      ],
                      "title": "Event content",
                      "type": "object"
                    }
                  },
                  "title": "Event content"
                }
              ],
              "description": "A StarkNet event",
              "title": "Event"
            }
          }
        },
        "title": "Events",
        "type": "array"
      },
      "execution_status": {
        "$ref": {
          "#/components/schemas/TXN_EXECUTION_STATUS": {
            "description": "The execution status of the transaction",
            "enum": [
              "SUCCEEDED",
              "REVERTED"
            ],
            "title": "Execution status",
            "type": "string"
          }
        },
        "title": "Execution status"
      },
      "finality_status": {
        "description": "The finality status of the transaction",
        "enum": [
          "ACCEPTED_ON_L2"
        ],
        "title": "Finality status",
        "type": "string"
      },
      "messages_sent": {
        "items": {
          "$ref": {
            "#/components/schemas/MSG_TO_L1": {
              "properties": {
                "from_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The address of the L2 contract sending the message"
                },
                "payload": {
                  "description": "The payload of the message",
                  "items": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    }
                  },
                  "title": "Payload",
                  "type": "array"
                },
                "to_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The target L1 address the message is sent to",
                  "title": "To address"
                }
              },
              "required": [
                "from_address",
                "to_address",
                "payload"
              ],
              "title": "Message to L1",
              "type": "object"
            }
          }
        },
        "title": "Messages sent",
        "type": "array"
      },
      "revert_reason": {
        "description": "the revert reason for the failed execution",
        "name": "revert reason",
        "title": "Revert reason",
        "type": "string"
      },
      "transaction_hash": {
        "$ref": {
          "#/components/schemas/TXN_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The transaction hash, as assigned in StarkNet",
            "title": "Transaction hash"
          }
        },
        "description": "The hash identifying the transaction",
        "title": "Transaction hash"
      },
      "type": {
        "$ref": {
          "#/components/schemas/TXN_TYPE": {
            "description": "The type of the transaction",
            "enum": [
              "DECLARE",
              "DEPLOY",
              "DEPLOY_ACCOUNT",
              "INVOKE",
              "L1_HANDLER"
            ],
            "title": "Transaction type",
            "type": "string"
          }
        },
        "title": "Transaction type"
      }
    },
    "required": [
      "transaction_hash",
      "actual_fee",
      "type",
      "messages_sent",
      "events",
      "finality_status",
      "execution_status"
    ],
    "title": "Pending common receipt properties",
    "type": "object"
  },
  "#/components/schemas/PENDING_DEPLOY_TXN_RECEIPT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a pending transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "description": "The finality status of the transaction",
                "enum": [
                  "ACCEPTED_ON_L2"
                ],
                "title": "Finality status",
                "type": "string"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/TXN_TYPE": {
                    "description": "The type of the transaction",
                    "enum": [
                      "DECLARE",
                      "DEPLOY",
                      "DEPLOY_ACCOUNT",
                      "INVOKE",
                      "L1_HANDLER"
                    ],
                    "title": "Transaction type",
                    "type": "string"
                  }
                },
                "title": "Transaction type"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "type",
              "messages_sent",
              "events",
              "finality_status",
              "execution_status"
            ],
            "title": "Pending common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      },
      {
        "properties": {
          "contract_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The address of the deployed contract",
            "title": "Contract address"
          }
        },
        "title": "Contract address",
        "type": "object"
      }
    ],
    "title": "Pending deploy Transaction Receipt"
  },
  "#/components/schemas/PENDING_STATE_UPDATE": {
    "description": "Pending state update",
    "properties": {
      "old_root": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The previous global state root",
        "title": "Old root"
      },
      "state_diff": {
        "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
        "properties": {
          "declared_classes": {
            "items": {
              "description": "The declared class hash and compiled class hash",
              "properties": {
                "class_hash": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The hash of the declared class",
                  "title": "Class hash"
                },
                "compiled_class_hash": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The Cairo assembly hash corresponding to the declared class",
                  "title": "Compiled class hash"
                }
              },
              "title": "New classes",
              "type": "object"
            },
            "title": "Declared classes",
            "type": "array"
          },
          "deployed_contracts": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
                  "properties": {
                    "address": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The address of the contract",
                      "title": "Address"
                    },
                    "class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The hash of the contract code",
                      "title": "Class hash"
                    }
                  },
                  "required": [
                    "address",
                    "class_hash"
                  ],
                  "title": "Deployed contract item",
                  "type": "object"
                }
              },
              "description": "A new contract deployed as part of the state update"
            },
            "title": "Deployed contracts",
            "type": "array"
          },
          "deprecated_declared_classes": {
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The hash of the declared class"
            },
            "title": "Deprecated declared classes",
            "type": "array"
          },
          "nonces": {
            "items": {
              "description": "The updated nonce per contract address",
              "properties": {
                "contract_address": {
                  "$ref": {
                    "#/components/schemas/ADDRESS": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "title": "Address"
                    }
                  },
                  "description": "The address of the contract",
                  "title": "Contract address"
                },
                "nonce": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The nonce for the given address at the end of the block",
                  "title": "Nonce"
                }
              },
              "title": "Nonce update",
              "type": "object"
            },
            "title": "Nonces",
            "type": "array"
          },
          "replaced_classes": {
            "items": {
              "description": "The list of contracts whose class was replaced",
              "properties": {
                "class_hash": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The new class hash",
                  "title": "Class hash"
                },
                "contract_address": {
                  "$ref": {
                    "#/components/schemas/ADDRESS": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "title": "Address"
                    }
                  },
                  "description": "The address of the contract whose class was replaced",
                  "title": "Contract address"
                }
              },
              "title": "Replaced class",
              "type": "object"
            },
            "title": "Replaced classes",
            "type": "array"
          },
          "storage_diffs": {
            "items": {
              "$ref": {
                "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
                  "properties": {
                    "address": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The contract address for which the storage changed",
                      "title": "Address"
                    },
                    "storage_entries": {
                      "description": "The changes in the storage of the contract",
                      "items": {
                        "properties": {
                          "key": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The key of the changed value",
                            "title": "Key"
                          },
                          "value": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The new value applied to the given address",
                            "title": "Value"
                          }
                        },
                        "title": "Storage diff item",
                        "type": "object"
                      },
                      "title": "Storage entries",
                      "type": "array"
                    }
                  },
                  "required": [
                    "address",
                    "storage_entries"
                  ],
                  "title": "Contract storage diff item",
                  "type": "object"
                }
              },
              "description": "The changes in the storage per contract address"
            },
            "title": "Storage diffs",
            "type": "array"
          }
        },
        "required": [
          "storage_diffs",
          "deprecated_declared_classes",
          "declared_classes",
          "replaced_classes",
          "deployed_contracts",
          "nonces"
        ],
        "title": "State diff",
        "type": "object"
      }
    },
    "required": [
      "old_root",
      "state_diff"
    ],
    "title": "Pending state update",
    "type": "object"
  },
  "#/components/schemas/PENDING_TXN_RECEIPT": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/PENDING_DEPLOY_TXN_RECEIPT": {
            "allOf": [
              {
                "$ref": {
                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a pending transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "description": "The finality status of the transaction",
                        "enum": [
                          "ACCEPTED_ON_L2"
                        ],
                        "title": "Finality status",
                        "type": "string"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      },
                      "type": {
                        "$ref": {
                          "#/components/schemas/TXN_TYPE": {
                            "description": "The type of the transaction",
                            "enum": [
                              "DECLARE",
                              "DEPLOY",
                              "DEPLOY_ACCOUNT",
                              "INVOKE",
                              "L1_HANDLER"
                            ],
                            "title": "Transaction type",
                            "type": "string"
                          }
                        },
                        "title": "Transaction type"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "type",
                      "messages_sent",
                      "events",
                      "finality_status",
                      "execution_status"
                    ],
                    "title": "Pending common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              },
              {
                "properties": {
                  "contract_address": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The address of the deployed contract",
                    "title": "Contract address"
                  }
                },
                "title": "Contract address",
                "type": "object"
              }
            ],
            "title": "Pending deploy Transaction Receipt"
          }
        },
        "title": "Pending deploy transaction receipt"
      },
      {
        "$comment": "Used for pending invoke and declare transaction receipts",
        "$ref": {
          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a pending transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "description": "The finality status of the transaction",
                "enum": [
                  "ACCEPTED_ON_L2"
                ],
                "title": "Finality status",
                "type": "string"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/TXN_TYPE": {
                    "description": "The type of the transaction",
                    "enum": [
                      "DECLARE",
                      "DEPLOY",
                      "DEPLOY_ACCOUNT",
                      "INVOKE",
                      "L1_HANDLER"
                    ],
                    "title": "Transaction type",
                    "type": "string"
                  }
                },
                "title": "Transaction type"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "type",
              "messages_sent",
              "events",
              "finality_status",
              "execution_status"
            ],
            "title": "Pending common receipt properties",
            "type": "object"
          }
        },
        "title": "Pending common receipt properties"
      }
    ],
    "title": "Pending Transaction Receipt"
  },
  "#/components/schemas/RESULT_PAGE_REQUEST": {
    "properties": {
      "chunk_size": {
        "minimum": 1,
        "title": "Chunk size",
        "type": "integer"
      },
      "continuation_token": {
        "description": "The token returned from the previous query. If no token is provided the first page is returned.",
        "title": "Continuation token",
        "type": "string"
      }
    },
    "required": [
      "chunk_size"
    ],
    "title": "Result page request",
    "type": "object"
  },
  "#/components/schemas/SIERRA_ENTRY_POINT": {
    "properties": {
      "function_idx": {
        "description": "The index of the function in the program",
        "title": "Function index",
        "type": "integer"
      },
      "selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "A unique identifier of the entry point (function) in the program",
        "title": "Selector"
      }
    },
    "required": [
      "selector",
      "function_idx"
    ],
    "title": "Sierra entry point",
    "type": "object"
  },
  "#/components/schemas/SIGNATURE": {
    "description": "A transaction signature",
    "items": {
      "$ref": {
        "#/components/schemas/FELT": {
          "description": "A field element. represented by at most 63 hex digits",
          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
          "title": "Field element",
          "type": "string"
        }
      }
    },
    "title": "Signature",
    "type": "array"
  },
  "#/components/schemas/STATE_UPDATE": {
    "allOf": [
      {
        "properties": {
          "block_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "title": "Block hash"
          },
          "new_root": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The new global state root",
            "title": "New root"
          }
        },
        "required": [
          "block_hash",
          "new_root"
        ],
        "title": "Block info",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_STATE_UPDATE": {
            "description": "Pending state update",
            "properties": {
              "old_root": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The previous global state root",
                "title": "Old root"
              },
              "state_diff": {
                "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
                "properties": {
                  "declared_classes": {
                    "items": {
                      "description": "The declared class hash and compiled class hash",
                      "properties": {
                        "class_hash": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The hash of the declared class",
                          "title": "Class hash"
                        },
                        "compiled_class_hash": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The Cairo assembly hash corresponding to the declared class",
                          "title": "Compiled class hash"
                        }
                      },
                      "title": "New classes",
                      "type": "object"
                    },
                    "title": "Declared classes",
                    "type": "array"
                  },
                  "deployed_contracts": {
                    "items": {
                      "$ref": {
                        "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
                          "properties": {
                            "address": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The address of the contract",
                              "title": "Address"
                            },
                            "class_hash": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The hash of the contract code",
                              "title": "Class hash"
                            }
                          },
                          "required": [
                            "address",
                            "class_hash"
                          ],
                          "title": "Deployed contract item",
                          "type": "object"
                        }
                      },
                      "description": "A new contract deployed as part of the state update"
                    },
                    "title": "Deployed contracts",
                    "type": "array"
                  },
                  "deprecated_declared_classes": {
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The hash of the declared class"
                    },
                    "title": "Deprecated declared classes",
                    "type": "array"
                  },
                  "nonces": {
                    "items": {
                      "description": "The updated nonce per contract address",
                      "properties": {
                        "contract_address": {
                          "$ref": {
                            "#/components/schemas/ADDRESS": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "title": "Address"
                            }
                          },
                          "description": "The address of the contract",
                          "title": "Contract address"
                        },
                        "nonce": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The nonce for the given address at the end of the block",
                          "title": "Nonce"
                        }
                      },
                      "title": "Nonce update",
                      "type": "object"
                    },
                    "title": "Nonces",
                    "type": "array"
                  },
                  "replaced_classes": {
                    "items": {
                      "description": "The list of contracts whose class was replaced",
                      "properties": {
                        "class_hash": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The new class hash",
                          "title": "Class hash"
                        },
                        "contract_address": {
                          "$ref": {
                            "#/components/schemas/ADDRESS": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "title": "Address"
                            }
                          },
                          "description": "The address of the contract whose class was replaced",
                          "title": "Contract address"
                        }
                      },
                      "title": "Replaced class",
                      "type": "object"
                    },
                    "title": "Replaced classes",
                    "type": "array"
                  },
                  "storage_diffs": {
                    "items": {
                      "$ref": {
                        "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
                          "properties": {
                            "address": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The contract address for which the storage changed",
                              "title": "Address"
                            },
                            "storage_entries": {
                              "description": "The changes in the storage of the contract",
                              "items": {
                                "properties": {
                                  "key": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The key of the changed value",
                                    "title": "Key"
                                  },
                                  "value": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The new value applied to the given address",
                                    "title": "Value"
                                  }
                                },
                                "title": "Storage diff item",
                                "type": "object"
                              },
                              "title": "Storage entries",
                              "type": "array"
                            }
                          },
                          "required": [
                            "address",
                            "storage_entries"
                          ],
                          "title": "Contract storage diff item",
                          "type": "object"
                        }
                      },
                      "description": "The changes in the storage per contract address"
                    },
                    "title": "Storage diffs",
                    "type": "array"
                  }
                },
                "required": [
                  "storage_diffs",
                  "deprecated_declared_classes",
                  "declared_classes",
                  "replaced_classes",
                  "deployed_contracts",
                  "nonces"
                ],
                "title": "State diff",
                "type": "object"
              }
            },
            "required": [
              "old_root",
              "state_diff"
            ],
            "title": "Pending state update",
            "type": "object"
          }
        },
        "title": "Pending state update"
      }
    ],
    "title": "State update",
    "type": "object"
  },
  "#/components/schemas/STORAGE_KEY": {
    "$comment": "A storage key, represented as a string of hex digits",
    "description": "A storage key. Represented as up to 62 hex digits, 3 bits, and 5 leading zeroes.",
    "pattern": "^0x0[0-7]{1}[a-fA-F0-9]{0,62}$",
    "title": "Storage key",
    "type": "string"
  },
  "#/components/schemas/STRUCT_ABI_ENTRY": {
    "properties": {
      "members": {
        "items": {
          "$ref": {
            "#/components/schemas/STRUCT_MEMBER": {
              "allOf": [
                {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  },
                  "title": "Typed parameter"
                },
                {
                  "properties": {
                    "offset": {
                      "description": "offset of this property within the struct",
                      "title": "Offset",
                      "type": "integer"
                    }
                  },
                  "title": "Offset",
                  "type": "object"
                }
              ],
              "title": "Struct member"
            }
          }
        },
        "title": "Members",
        "type": "array"
      },
      "name": {
        "description": "The struct name",
        "title": "Struct name",
        "type": "string"
      },
      "size": {
        "minimum": 1,
        "title": "Size",
        "type": "integer"
      },
      "type": {
        "$ref": {
          "#/components/schemas/STRUCT_ABI_TYPE": {
            "enum": [
              "struct"
            ],
            "title": "Struct ABI type",
            "type": "string"
          }
        },
        "title": "Struct ABI type"
      }
    },
    "required": [
      "type",
      "name",
      "size",
      "members"
    ],
    "title": "Struct ABI entry",
    "type": "object"
  },
  "#/components/schemas/STRUCT_ABI_TYPE": {
    "enum": [
      "struct"
    ],
    "title": "Struct ABI type",
    "type": "string"
  },
  "#/components/schemas/STRUCT_MEMBER": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/TYPED_PARAMETER": {
            "properties": {
              "name": {
                "description": "The parameter's name",
                "title": "Parameter name",
                "type": "string"
              },
              "type": {
                "description": "The parameter's type",
                "title": "Parameter type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Typed parameter",
            "type": "object"
          }
        },
        "title": "Typed parameter"
      },
      {
        "properties": {
          "offset": {
            "description": "offset of this property within the struct",
            "title": "Offset",
            "type": "integer"
          }
        },
        "title": "Offset",
        "type": "object"
      }
    ],
    "title": "Struct member"
  },
  "#/components/schemas/SYNC_STATUS": {
    "description": "An object describing the node synchronization status",
    "properties": {
      "current_block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of the current block being synchronized",
        "title": "Current block hash"
      },
      "current_block_num": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The number (height) of the current block being synchronized",
        "title": "Current block number"
      },
      "highest_block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of the estimated highest block to be synchronized",
        "title": "Highest block hash"
      },
      "highest_block_num": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The number (height) of the estimated highest block to be synchronized",
        "title": "Highest block number"
      },
      "starting_block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of the block from which the sync started",
        "title": "Starting block hash"
      },
      "starting_block_num": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The number (height) of the block from which the sync started",
        "title": "Starting block number"
      }
    },
    "required": [
      "starting_block_hash",
      "starting_block_num",
      "current_block_hash",
      "current_block_num",
      "highest_block_hash",
      "highest_block_num"
    ],
    "title": "Sync status",
    "type": "object"
  },
  "#/components/schemas/TXN": {
    "description": "The transaction schema, as it appears inside a block",
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN": {
            "description": "Initiate a transaction from an account",
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_V0": {
                    "description": "invokes a specific function in the desired contract (not necessarily an account)",
                    "properties": {
                      "calldata": {
                        "description": "The parameters passed to the function",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Calldata",
                        "type": "array"
                      },
                      "contract_address": {
                        "$ref": {
                          "#/components/schemas/ADDRESS": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Address"
                          }
                        },
                        "title": "Contract address"
                      },
                      "entry_point_selector": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Entry point selector"
                      },
                      "max_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The maximal fee that can be charged for including the transaction",
                        "title": "Max fee"
                      },
                      "signature": {
                        "$ref": {
                          "#/components/schemas/SIGNATURE": {
                            "description": "A transaction signature",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Signature",
                            "type": "array"
                          }
                        },
                        "title": "Signature"
                      },
                      "type": {
                        "enum": [
                          "INVOKE"
                        ],
                        "title": "Type",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the transaction scheme",
                        "enum": [
                          "0x0"
                        ],
                        "title": "Version",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "contract_address",
                      "entry_point_selector",
                      "calldata",
                      "max_fee",
                      "version",
                      "signature"
                    ],
                    "title": "Invoke transaction V0"
                  }
                },
                "title": "Invoke transaction V0"
              },
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_V1": {
                    "allOf": [
                      {
                        "properties": {
                          "calldata": {
                            "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "calldata",
                            "type": "array"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "title": "sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "INVOKE"
                            ],
                            "title": "Type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x1"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "calldata",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "initiates a transaction from a given account",
                    "title": "Invoke transaction V1"
                  }
                },
                "title": "Invoke transaction V1"
              }
            ],
            "title": "Invoke transaction"
          }
        },
        "title": "Invoke transaction"
      },
      {
        "$ref": {
          "#/components/schemas/L1_HANDLER_TXN": {
            "allOf": [
              {
                "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                "properties": {
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                    "title": "Nonce"
                  },
                  "type": {
                    "enum": [
                      "L1_HANDLER"
                    ],
                    "title": "type",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "version",
                  "type",
                  "nonce"
                ],
                "title": "L1 handler transaction",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/FUNCTION_CALL": {
                    "description": "Function call information",
                    "properties": {
                      "calldata": {
                        "description": "The parameters passed to the function",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Calldata",
                        "type": "array"
                      },
                      "contract_address": {
                        "$ref": {
                          "#/components/schemas/ADDRESS": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Address"
                          }
                        },
                        "title": "Contract address"
                      },
                      "entry_point_selector": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Entry point selector"
                      }
                    },
                    "required": [
                      "contract_address",
                      "entry_point_selector",
                      "calldata"
                    ],
                    "title": "Function call",
                    "type": "object"
                  }
                },
                "title": "Function call"
              }
            ],
            "title": "L1 Handler transaction"
          }
        },
        "title": "L1 handler transaction"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_V0": {
                    "allOf": [
                      {
                        "properties": {
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x0"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "max_fee",
                          "version",
                          "signature"
                        ],
                        "title": "Declare txn v0",
                        "type": "object"
                      },
                      {
                        "oneOf": [
                          {
                            "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                            "properties": {
                              "contract_class": {
                                "$ref": {
                                  "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                    "description": "The definition of a StarkNet contract class",
                                    "properties": {
                                      "abi": {
                                        "$ref": {
                                          "#/components/schemas/CONTRACT_ABI": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                  "oneOf": [
                                                    {
                                                      "$ref": {
                                                        "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                          "properties": {
                                                            "inputs": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "name": {
                                                              "description": "The function name",
                                                              "title": "Function name",
                                                              "type": "string"
                                                            },
                                                            "outputs": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "stateMutability": {
                                                              "$ref": {
                                                                "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                  "enum": [
                                                                    "view"
                                                                  ],
                                                                  "title": "Function state mutability type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Function state mutability"
                                                            },
                                                            "type": {
                                                              "$ref": {
                                                                "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                  "enum": [
                                                                    "function",
                                                                    "l1_handler",
                                                                    "constructor"
                                                                  ],
                                                                  "title": "Function ABI type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Function ABI type"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "name",
                                                            "inputs",
                                                            "outputs"
                                                          ],
                                                          "title": "Function ABI entry",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "title": "Function ABI entry"
                                                    },
                                                    {
                                                      "$ref": {
                                                        "#/components/schemas/EVENT_ABI_ENTRY": {
                                                          "properties": {
                                                            "data": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "keys": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "name": {
                                                              "description": "The event name",
                                                              "title": "Event name",
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "$ref": {
                                                                "#/components/schemas/EVENT_ABI_TYPE": {
                                                                  "enum": [
                                                                    "event"
                                                                  ],
                                                                  "title": "Event ABI type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Event ABI type"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "name",
                                                            "keys",
                                                            "data"
                                                          ],
                                                          "title": "Event ABI entry",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "title": "Event ABI entry"
                                                    },
                                                    {
                                                      "$ref": {
                                                        "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                          "properties": {
                                                            "members": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/STRUCT_MEMBER": {
                                                                    "allOf": [
                                                                      {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        },
                                                                        "title": "Typed parameter"
                                                                      },
                                                                      {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "description": "offset of this property within the struct",
                                                                            "title": "Offset",
                                                                            "type": "integer"
                                                                          }
                                                                        },
                                                                        "title": "Offset",
                                                                        "type": "object"
                                                                      }
                                                                    ],
                                                                    "title": "Struct member"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Members",
                                                              "type": "array"
                                                            },
                                                            "name": {
                                                              "description": "The struct name",
                                                              "title": "Struct name",
                                                              "type": "string"
                                                            },
                                                            "size": {
                                                              "minimum": 1,
                                                              "title": "Size",
                                                              "type": "integer"
                                                            },
                                                            "type": {
                                                              "$ref": {
                                                                "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                  "enum": [
                                                                    "struct"
                                                                  ],
                                                                  "title": "Struct ABI type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Struct ABI type"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "name",
                                                            "size",
                                                            "members"
                                                          ],
                                                          "title": "Struct ABI entry",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "title": "Struct ABI entry"
                                                    }
                                                  ],
                                                  "title": "Contract ABI entry"
                                                }
                                              }
                                            },
                                            "title": "Contract ABI",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Contract ABI"
                                      },
                                      "entry_points_by_type": {
                                        "properties": {
                                          "CONSTRUCTOR": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                  "properties": {
                                                    "offset": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The offset of the entry point in the program",
                                                      "title": "Offset"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "offset",
                                                    "selector"
                                                  ],
                                                  "title": "Deprecated Cairo entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Deprecated constructor",
                                            "type": "array"
                                          },
                                          "EXTERNAL": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                  "properties": {
                                                    "offset": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The offset of the entry point in the program",
                                                      "title": "Offset"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "offset",
                                                    "selector"
                                                  ],
                                                  "title": "Deprecated Cairo entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Deprecated external",
                                            "type": "array"
                                          },
                                          "L1_HANDLER": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                  "properties": {
                                                    "offset": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The offset of the entry point in the program",
                                                      "title": "Offset"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "offset",
                                                    "selector"
                                                  ],
                                                  "title": "Deprecated Cairo entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Deprecated L1 handler",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Deprecated entry points by type",
                                        "type": "object"
                                      },
                                      "program": {
                                        "description": "A base64 representation of the compressed program code",
                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                        "title": "Program",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "program",
                                      "entry_points_by_type"
                                    ],
                                    "title": "Deprecated contract class",
                                    "type": "object"
                                  }
                                },
                                "description": "The class to be declared",
                                "title": "Contract class"
                              }
                            },
                            "required": [
                              "contract_class"
                            ],
                            "title": "ContractClass",
                            "type": "object"
                          },
                          {
                            "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                            "properties": {
                              "class_hash": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The hash of the declared class",
                                "title": "Class hash"
                              }
                            },
                            "required": [
                              "class_hash"
                            ],
                            "title": "ClassHash",
                            "type": "object"
                          }
                        ]
                      }
                    ],
                    "description": "Declare Contract Transaction V0",
                    "title": "Declare Contract Transaction V0"
                  }
                },
                "title": "Declare transaction V0"
              },
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_V1": {
                    "allOf": [
                      {
                        "properties": {
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x1"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce"
                        ],
                        "title": "Declare txn v1",
                        "type": "object"
                      },
                      {
                        "oneOf": [
                          {
                            "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                            "properties": {
                              "contract_class": {
                                "$ref": {
                                  "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                    "description": "The definition of a StarkNet contract class",
                                    "properties": {
                                      "abi": {
                                        "$ref": {
                                          "#/components/schemas/CONTRACT_ABI": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                  "oneOf": [
                                                    {
                                                      "$ref": {
                                                        "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                          "properties": {
                                                            "inputs": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "name": {
                                                              "description": "The function name",
                                                              "title": "Function name",
                                                              "type": "string"
                                                            },
                                                            "outputs": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "stateMutability": {
                                                              "$ref": {
                                                                "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                  "enum": [
                                                                    "view"
                                                                  ],
                                                                  "title": "Function state mutability type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Function state mutability"
                                                            },
                                                            "type": {
                                                              "$ref": {
                                                                "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                  "enum": [
                                                                    "function",
                                                                    "l1_handler",
                                                                    "constructor"
                                                                  ],
                                                                  "title": "Function ABI type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Function ABI type"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "name",
                                                            "inputs",
                                                            "outputs"
                                                          ],
                                                          "title": "Function ABI entry",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "title": "Function ABI entry"
                                                    },
                                                    {
                                                      "$ref": {
                                                        "#/components/schemas/EVENT_ABI_ENTRY": {
                                                          "properties": {
                                                            "data": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "keys": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                    "properties": {
                                                                      "name": {
                                                                        "description": "The parameter's name",
                                                                        "title": "Parameter name",
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "description": "The parameter's type",
                                                                        "title": "Parameter type",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "name",
                                                                      "type"
                                                                    ],
                                                                    "title": "Typed parameter",
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Typed parameter",
                                                              "type": "array"
                                                            },
                                                            "name": {
                                                              "description": "The event name",
                                                              "title": "Event name",
                                                              "type": "string"
                                                            },
                                                            "type": {
                                                              "$ref": {
                                                                "#/components/schemas/EVENT_ABI_TYPE": {
                                                                  "enum": [
                                                                    "event"
                                                                  ],
                                                                  "title": "Event ABI type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Event ABI type"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "name",
                                                            "keys",
                                                            "data"
                                                          ],
                                                          "title": "Event ABI entry",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "title": "Event ABI entry"
                                                    },
                                                    {
                                                      "$ref": {
                                                        "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                          "properties": {
                                                            "members": {
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/STRUCT_MEMBER": {
                                                                    "allOf": [
                                                                      {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        },
                                                                        "title": "Typed parameter"
                                                                      },
                                                                      {
                                                                        "properties": {
                                                                          "offset": {
                                                                            "description": "offset of this property within the struct",
                                                                            "title": "Offset",
                                                                            "type": "integer"
                                                                          }
                                                                        },
                                                                        "title": "Offset",
                                                                        "type": "object"
                                                                      }
                                                                    ],
                                                                    "title": "Struct member"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Members",
                                                              "type": "array"
                                                            },
                                                            "name": {
                                                              "description": "The struct name",
                                                              "title": "Struct name",
                                                              "type": "string"
                                                            },
                                                            "size": {
                                                              "minimum": 1,
                                                              "title": "Size",
                                                              "type": "integer"
                                                            },
                                                            "type": {
                                                              "$ref": {
                                                                "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                  "enum": [
                                                                    "struct"
                                                                  ],
                                                                  "title": "Struct ABI type",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Struct ABI type"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "name",
                                                            "size",
                                                            "members"
                                                          ],
                                                          "title": "Struct ABI entry",
                                                          "type": "object"
                                                        }
                                                      },
                                                      "title": "Struct ABI entry"
                                                    }
                                                  ],
                                                  "title": "Contract ABI entry"
                                                }
                                              }
                                            },
                                            "title": "Contract ABI",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Contract ABI"
                                      },
                                      "entry_points_by_type": {
                                        "properties": {
                                          "CONSTRUCTOR": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                  "properties": {
                                                    "offset": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The offset of the entry point in the program",
                                                      "title": "Offset"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "offset",
                                                    "selector"
                                                  ],
                                                  "title": "Deprecated Cairo entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Deprecated constructor",
                                            "type": "array"
                                          },
                                          "EXTERNAL": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                  "properties": {
                                                    "offset": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The offset of the entry point in the program",
                                                      "title": "Offset"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "offset",
                                                    "selector"
                                                  ],
                                                  "title": "Deprecated Cairo entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Deprecated external",
                                            "type": "array"
                                          },
                                          "L1_HANDLER": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                  "properties": {
                                                    "offset": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The offset of the entry point in the program",
                                                      "title": "Offset"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "offset",
                                                    "selector"
                                                  ],
                                                  "title": "Deprecated Cairo entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Deprecated L1 handler",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Deprecated entry points by type",
                                        "type": "object"
                                      },
                                      "program": {
                                        "description": "A base64 representation of the compressed program code",
                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                        "title": "Program",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "program",
                                      "entry_points_by_type"
                                    ],
                                    "title": "Deprecated contract class",
                                    "type": "object"
                                  }
                                },
                                "description": "The class to be declared",
                                "title": "Contract class"
                              }
                            },
                            "required": [
                              "contract_class"
                            ],
                            "title": "ContractClass",
                            "type": "object"
                          },
                          {
                            "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                            "properties": {
                              "class_hash": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The hash of the declared class",
                                "title": "Class hash"
                              }
                            },
                            "required": [
                              "class_hash"
                            ],
                            "title": "ClassHash",
                            "type": "object"
                          }
                        ]
                      }
                    ],
                    "description": "Declare Contract Transaction V1",
                    "title": "Declare Contract Transaction V1"
                  }
                },
                "title": "Declare transaction V1"
              },
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_V2": {
                    "allOf": [
                      {
                        "properties": {
                          "compiled_class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                            "title": "Compiled class hash"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x2"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "compiled_class_hash",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce"
                        ],
                        "title": "Declare txn v2",
                        "type": "object"
                      },
                      {
                        "oneOf": [
                          {
                            "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                            "properties": {
                              "contract_class": {
                                "$ref": {
                                  "#/components/schemas/CONTRACT_CLASS": {
                                    "properties": {
                                      "abi": {
                                        "description": "The class ABI, as supplied by the user declaring the class",
                                        "title": "ABI",
                                        "type": "string"
                                      },
                                      "contract_class_version": {
                                        "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                        "title": "Contract class version",
                                        "type": "string"
                                      },
                                      "entry_points_by_type": {
                                        "properties": {
                                          "CONSTRUCTOR": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                  "properties": {
                                                    "function_idx": {
                                                      "description": "The index of the function in the program",
                                                      "title": "Function index",
                                                      "type": "integer"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "selector",
                                                    "function_idx"
                                                  ],
                                                  "title": "Sierra entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "Constructor",
                                            "type": "array"
                                          },
                                          "EXTERNAL": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                  "properties": {
                                                    "function_idx": {
                                                      "description": "The index of the function in the program",
                                                      "title": "Function index",
                                                      "type": "integer"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "selector",
                                                    "function_idx"
                                                  ],
                                                  "title": "Sierra entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "External",
                                            "type": "array"
                                          },
                                          "L1_HANDLER": {
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                  "properties": {
                                                    "function_idx": {
                                                      "description": "The index of the function in the program",
                                                      "title": "Function index",
                                                      "type": "integer"
                                                    },
                                                    "selector": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "A unique identifier of the entry point (function) in the program",
                                                      "title": "Selector"
                                                    }
                                                  },
                                                  "required": [
                                                    "selector",
                                                    "function_idx"
                                                  ],
                                                  "title": "Sierra entry point",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "title": "L1 handler",
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "CONSTRUCTOR",
                                          "EXTERNAL",
                                          "L1_HANDLER"
                                        ],
                                        "title": "Entry points by type",
                                        "type": "object"
                                      },
                                      "sierra_program": {
                                        "description": "The list of Sierra instructions of which the program consists",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Sierra program",
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "sierra_program",
                                      "contract_class_version",
                                      "entry_points_by_type"
                                    ],
                                    "title": "Contract class",
                                    "type": "object"
                                  }
                                },
                                "description": "The class to be declared",
                                "title": "Contract class"
                              }
                            },
                            "required": [
                              "countract_class"
                            ],
                            "title": "ContractClass",
                            "type": "object"
                          },
                          {
                            "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                            "properties": {
                              "class_hash": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The hash of the declared class",
                                "title": "Class hash"
                              }
                            },
                            "required": [
                              "class_hash"
                            ],
                            "title": "ClassHash",
                            "type": "object"
                          }
                        ]
                      }
                    ],
                    "description": "Declare Contract Transaction V2",
                    "title": "Declare Transaction V2"
                  }
                },
                "title": "Declare transaction V2"
              }
            ],
            "title": "Declare transaction"
          }
        },
        "title": "Declare transaction"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_TXN": {
            "allOf": [
              {
                "properties": {
                  "class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the deployed contract's class",
                    "title": "Class hash"
                  },
                  "constructor_calldata": {
                    "description": "The parameters passed to the constructor",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Constructor calldata",
                    "type": "array"
                  },
                  "contract_address_salt": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The salt for the address of the deployed contract",
                    "title": "Contract address salt"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY"
                    ],
                    "title": "Deploy",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "version",
                  "type",
                  "constructor_calldata",
                  "contract_address_salt",
                  "class_hash"
                ],
                "title": "Deploy txn",
                "type": "object"
              }
            ],
            "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
            "title": "Deploy Contract Transaction"
          }
        },
        "title": "Deploy transaction"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
            "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
            "properties": {
              "class_hash": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The hash of the deployed contract's class",
                "title": "Class hash"
              },
              "constructor_calldata": {
                "description": "The parameters passed to the constructor",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Constructor calldata",
                "type": "array"
              },
              "contract_address_salt": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The salt for the address of the deployed contract",
                "title": "Contract address salt"
              },
              "max_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The maximal fee that can be charged for including the transaction",
                "title": "Max fee"
              },
              "nonce": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Nonce"
              },
              "signature": {
                "$ref": {
                  "#/components/schemas/SIGNATURE": {
                    "description": "A transaction signature",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Signature",
                    "type": "array"
                  }
                },
                "title": "Signature"
              },
              "type": {
                "enum": [
                  "DEPLOY_ACCOUNT"
                ],
                "title": "Deploy account",
                "type": "string"
              },
              "version": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "Version of the transaction scheme",
                "title": "Version"
              }
            },
            "required": [
              "max_fee",
              "version",
              "signature",
              "nonce",
              "type",
              "contract_address_salt",
              "constructor_calldata",
              "class_hash"
            ],
            "title": "Deploy account transaction"
          }
        },
        "title": "Deploy account transaction"
      }
    ],
    "title": "Transaction"
  },
  "#/components/schemas/TXN_EXECUTION_STATUS": {
    "description": "The execution status of the transaction",
    "enum": [
      "SUCCEEDED",
      "REVERTED"
    ],
    "title": "Execution status",
    "type": "string"
  },
  "#/components/schemas/TXN_FINALITY_STATUS": {
    "description": "The finality status of the transaction",
    "enum": [
      "ACCEPTED_ON_L2",
      "ACCEPTED_ON_L1"
    ],
    "title": "Finality status",
    "type": "string"
  },
  "#/components/schemas/TXN_HASH": {
    "$ref": {
      "#/components/schemas/FELT": {
        "description": "A field element. represented by at most 63 hex digits",
        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
        "title": "Field element",
        "type": "string"
      }
    },
    "description": "The transaction hash, as assigned in StarkNet",
    "title": "Transaction hash"
  },
  "#/components/schemas/TXN_RECEIPT": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "INVOKE"
                    ],
                    "title": "Type",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Type",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "title": "Invoke Transaction Receipt"
          }
        },
        "title": "Invoke transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/L1_HANDLER_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "L1_HANDLER"
                    ],
                    "title": "type",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Transaction type",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "description": "receipt for l1 handler transaction",
            "title": "L1 Handler Transaction Receipt"
          }
        },
        "title": "L1 handler transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Declare txn receipt",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "title": "Declare Transaction Receipt"
          }
        },
        "title": "Declare transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_TXN_RECEIPT": {
            "allOf": [
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              },
              {
                "properties": {
                  "contract_address": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The address of the deployed contract",
                    "title": "Contract address"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY"
                    ],
                    "title": "Deploy",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "contract_address"
                ],
                "title": "Deploy txn receipt",
                "type": "object"
              }
            ],
            "title": "Deploy Transaction Receipt"
          }
        },
        "title": "Deploy transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_ACCOUNT_TXN_RECEIPT": {
            "allOf": [
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              },
              {
                "properties": {
                  "contract_address": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The address of the deployed contract",
                    "title": "Contract address"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY_ACCOUNT"
                    ],
                    "title": "Deploy account",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "contract_address"
                ],
                "title": "DeployAccount txn receipt",
                "type": "object"
              }
            ],
            "title": "Deploy Account Transaction Receipt"
          }
        },
        "title": "Deploy account transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_TXN_RECEIPT": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/PENDING_DEPLOY_TXN_RECEIPT": {
                    "allOf": [
                      {
                        "$ref": {
                          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a pending transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "description": "The finality status of the transaction",
                                "enum": [
                                  "ACCEPTED_ON_L2"
                                ],
                                "title": "Finality status",
                                "type": "string"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              },
                              "type": {
                                "$ref": {
                                  "#/components/schemas/TXN_TYPE": {
                                    "description": "The type of the transaction",
                                    "enum": [
                                      "DECLARE",
                                      "DEPLOY",
                                      "DEPLOY_ACCOUNT",
                                      "INVOKE",
                                      "L1_HANDLER"
                                    ],
                                    "title": "Transaction type",
                                    "type": "string"
                                  }
                                },
                                "title": "Transaction type"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "type",
                              "messages_sent",
                              "events",
                              "finality_status",
                              "execution_status"
                            ],
                            "title": "Pending common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Common receipt properties"
                      },
                      {
                        "properties": {
                          "contract_address": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The address of the deployed contract",
                            "title": "Contract address"
                          }
                        },
                        "title": "Contract address",
                        "type": "object"
                      }
                    ],
                    "title": "Pending deploy Transaction Receipt"
                  }
                },
                "title": "Pending deploy transaction receipt"
              },
              {
                "$comment": "Used for pending invoke and declare transaction receipts",
                "$ref": {
                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a pending transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "description": "The finality status of the transaction",
                        "enum": [
                          "ACCEPTED_ON_L2"
                        ],
                        "title": "Finality status",
                        "type": "string"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      },
                      "type": {
                        "$ref": {
                          "#/components/schemas/TXN_TYPE": {
                            "description": "The type of the transaction",
                            "enum": [
                              "DECLARE",
                              "DEPLOY",
                              "DEPLOY_ACCOUNT",
                              "INVOKE",
                              "L1_HANDLER"
                            ],
                            "title": "Transaction type",
                            "type": "string"
                          }
                        },
                        "title": "Transaction type"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "type",
                      "messages_sent",
                      "events",
                      "finality_status",
                      "execution_status"
                    ],
                    "title": "Pending common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Pending common receipt properties"
              }
            ],
            "title": "Pending Transaction Receipt"
          }
        },
        "title": "Pending transaction receipt"
      }
    ],
    "title": "Transaction Receipt"
  },
  "#/components/schemas/TXN_TYPE": {
    "description": "The type of the transaction",
    "enum": [
      "DECLARE",
      "DEPLOY",
      "DEPLOY_ACCOUNT",
      "INVOKE",
      "L1_HANDLER"
    ],
    "title": "Transaction type",
    "type": "string"
  },
  "#/components/schemas/TYPED_PARAMETER": {
    "properties": {
      "name": {
        "description": "The parameter's name",
        "title": "Parameter name",
        "type": "string"
      },
      "type": {
        "description": "The parameter's type",
        "title": "Parameter type",
        "type": "string"
      }
    },
    "required": [
      "name",
      "type"
    ],
    "title": "Typed parameter",
    "type": "object"
  },
  "#/methods/starknet_blockHashAndNumber": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/NO_BLOCKS": {
            "code": 32,
            "message": "There are no blocks"
          }
        }
      }
    ],
    "name": "starknet_blockHashAndNumber",
    "params": [],
    "result": {
      "description": "The latest block hash and number",
      "name": "result",
      "schema": {
        "properties": {
          "block_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "title": "Block hash"
          },
          "block_number": {
            "$ref": {
              "#/components/schemas/BLOCK_NUMBER": {
                "description": "The block's number (its height)",
                "minimum": 0,
                "title": "Block number",
                "type": "integer"
              }
            },
            "title": "Block number"
          }
        },
        "required": [
          "block_hash",
          "block_number"
        ],
        "title": "Starknet block hash and number result",
        "type": "object"
      }
    },
    "summary": "Get the most recent accepted block hash and number"
  },
  "#/methods/starknet_blockNumber": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/NO_BLOCKS": {
            "code": 32,
            "message": "There are no blocks"
          }
        }
      }
    ],
    "name": "starknet_blockNumber",
    "params": [],
    "result": {
      "description": "The latest block number",
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "title": "Block number"
      }
    },
    "summary": "Get the most recent accepted block number"
  },
  "#/methods/starknet_call": {
    "description": "Calls a function in a contract and returns the return value.  Using this call will not create a transaction; hence, will not change the state",
    "errors": [
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CONTRACT_ERROR": {
            "code": 40,
            "message": "Contract error"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_call",
    "params": [
      {
        "name": "request",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/FUNCTION_CALL": {
              "description": "Function call information",
              "properties": {
                "calldata": {
                  "description": "The parameters passed to the function",
                  "items": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    }
                  },
                  "title": "Calldata",
                  "type": "array"
                },
                "contract_address": {
                  "$ref": {
                    "#/components/schemas/ADDRESS": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "title": "Address"
                    }
                  },
                  "title": "Contract address"
                },
                "entry_point_selector": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "title": "Entry point selector"
                }
              },
              "required": [
                "contract_address",
                "entry_point_selector",
                "calldata"
              ],
              "title": "Function call",
              "type": "object"
            }
          },
          "title": "Function call"
        },
        "summary": "The details of the function call"
      },
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag, for the block referencing the state or call the transaction on.",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "The function's return value, as defined in the Cairo output",
      "name": "result",
      "schema": {
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Field element",
        "type": "array"
      },
      "summary": "The function's return value"
    },
    "summary": "call a starknet function without creating a StarkNet transaction"
  },
  "#/methods/starknet_chainId": {
    "name": "starknet_chainId",
    "params": [],
    "result": {
      "description": "The chain id this node is connected to",
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/CHAIN_ID": {
            "description": "StarkNet chain id, given in hex representation.",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Chain id",
            "type": "string"
          }
        },
        "title": "Chain id"
      }
    },
    "summary": "Return the currently configured StarkNet chain id"
  },
  "#/methods/starknet_estimateFee": {
    "description": "estimates the resources required by transactions when applyed on a given state",
    "errors": [
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CONTRACT_ERROR": {
            "code": 40,
            "message": "Contract error"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_estimateFee",
    "params": [
      {
        "name": "request",
        "required": true,
        "schema": {
          "description": "a sequence of transactions to estimate, running each transaction on the state resulting from applying all the previous ones",
          "items": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN": {
                    "oneOf": [
                      {
                        "$ref": {
                          "#/components/schemas/DECLARE_TXN_V0": {
                            "allOf": [
                              {
                                "properties": {
                                  "max_fee": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The maximal fee that can be charged for including the transaction",
                                    "title": "Max fee"
                                  },
                                  "sender_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "description": "The address of the account contract sending the declaration transaction",
                                    "title": "Sender address"
                                  },
                                  "signature": {
                                    "$ref": {
                                      "#/components/schemas/SIGNATURE": {
                                        "description": "A transaction signature",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Signature",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Signature"
                                  },
                                  "type": {
                                    "enum": [
                                      "DECLARE"
                                    ],
                                    "title": "Declare",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the transaction scheme",
                                    "enum": [
                                      "0x0"
                                    ],
                                    "title": "Version",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "sender_address",
                                  "max_fee",
                                  "version",
                                  "signature"
                                ],
                                "title": "Declare txn v0",
                                "type": "object"
                              },
                              {
                                "oneOf": [
                                  {
                                    "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                    "properties": {
                                      "contract_class": {
                                        "$ref": {
                                          "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                            "description": "The definition of a StarkNet contract class",
                                            "properties": {
                                              "abi": {
                                                "$ref": {
                                                  "#/components/schemas/CONTRACT_ABI": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                          "oneOf": [
                                                            {
                                                              "$ref": {
                                                                "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                  "properties": {
                                                                    "inputs": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "name": {
                                                                      "description": "The function name",
                                                                      "title": "Function name",
                                                                      "type": "string"
                                                                    },
                                                                    "outputs": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "stateMutability": {
                                                                      "$ref": {
                                                                        "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                          "enum": [
                                                                            "view"
                                                                          ],
                                                                          "title": "Function state mutability type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Function state mutability"
                                                                    },
                                                                    "type": {
                                                                      "$ref": {
                                                                        "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                          "enum": [
                                                                            "function",
                                                                            "l1_handler",
                                                                            "constructor"
                                                                          ],
                                                                          "title": "Function ABI type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Function ABI type"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "type",
                                                                    "name",
                                                                    "inputs",
                                                                    "outputs"
                                                                  ],
                                                                  "title": "Function ABI entry",
                                                                  "type": "object"
                                                                }
                                                              },
                                                              "title": "Function ABI entry"
                                                            },
                                                            {
                                                              "$ref": {
                                                                "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                  "properties": {
                                                                    "data": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "keys": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "name": {
                                                                      "description": "The event name",
                                                                      "title": "Event name",
                                                                      "type": "string"
                                                                    },
                                                                    "type": {
                                                                      "$ref": {
                                                                        "#/components/schemas/EVENT_ABI_TYPE": {
                                                                          "enum": [
                                                                            "event"
                                                                          ],
                                                                          "title": "Event ABI type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Event ABI type"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "type",
                                                                    "name",
                                                                    "keys",
                                                                    "data"
                                                                  ],
                                                                  "title": "Event ABI entry",
                                                                  "type": "object"
                                                                }
                                                              },
                                                              "title": "Event ABI entry"
                                                            },
                                                            {
                                                              "$ref": {
                                                                "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                  "properties": {
                                                                    "members": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/STRUCT_MEMBER": {
                                                                            "allOf": [
                                                                              {
                                                                                "$ref": {
                                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                                    "properties": {
                                                                                      "name": {
                                                                                        "description": "The parameter's name",
                                                                                        "title": "Parameter name",
                                                                                        "type": "string"
                                                                                      },
                                                                                      "type": {
                                                                                        "description": "The parameter's type",
                                                                                        "title": "Parameter type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "name",
                                                                                      "type"
                                                                                    ],
                                                                                    "title": "Typed parameter",
                                                                                    "type": "object"
                                                                                  }
                                                                                },
                                                                                "title": "Typed parameter"
                                                                              },
                                                                              {
                                                                                "properties": {
                                                                                  "offset": {
                                                                                    "description": "offset of this property within the struct",
                                                                                    "title": "Offset",
                                                                                    "type": "integer"
                                                                                  }
                                                                                },
                                                                                "title": "Offset",
                                                                                "type": "object"
                                                                              }
                                                                            ],
                                                                            "title": "Struct member"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Members",
                                                                      "type": "array"
                                                                    },
                                                                    "name": {
                                                                      "description": "The struct name",
                                                                      "title": "Struct name",
                                                                      "type": "string"
                                                                    },
                                                                    "size": {
                                                                      "minimum": 1,
                                                                      "title": "Size",
                                                                      "type": "integer"
                                                                    },
                                                                    "type": {
                                                                      "$ref": {
                                                                        "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                          "enum": [
                                                                            "struct"
                                                                          ],
                                                                          "title": "Struct ABI type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Struct ABI type"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "type",
                                                                    "name",
                                                                    "size",
                                                                    "members"
                                                                  ],
                                                                  "title": "Struct ABI entry",
                                                                  "type": "object"
                                                                }
                                                              },
                                                              "title": "Struct ABI entry"
                                                            }
                                                          ],
                                                          "title": "Contract ABI entry"
                                                        }
                                                      }
                                                    },
                                                    "title": "Contract ABI",
                                                    "type": "array"
                                                  }
                                                },
                                                "title": "Contract ABI"
                                              },
                                              "entry_points_by_type": {
                                                "properties": {
                                                  "CONSTRUCTOR": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                          "properties": {
                                                            "offset": {
                                                              "$ref": {
                                                                "#/components/schemas/NUM_AS_HEX": {
                                                                  "description": "An integer number in hex format (0x...)",
                                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                                  "title": "Number as hex",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The offset of the entry point in the program",
                                                              "title": "Offset"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "offset",
                                                            "selector"
                                                          ],
                                                          "title": "Deprecated Cairo entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Deprecated constructor",
                                                    "type": "array"
                                                  },
                                                  "EXTERNAL": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                          "properties": {
                                                            "offset": {
                                                              "$ref": {
                                                                "#/components/schemas/NUM_AS_HEX": {
                                                                  "description": "An integer number in hex format (0x...)",
                                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                                  "title": "Number as hex",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The offset of the entry point in the program",
                                                              "title": "Offset"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "offset",
                                                            "selector"
                                                          ],
                                                          "title": "Deprecated Cairo entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Deprecated external",
                                                    "type": "array"
                                                  },
                                                  "L1_HANDLER": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                          "properties": {
                                                            "offset": {
                                                              "$ref": {
                                                                "#/components/schemas/NUM_AS_HEX": {
                                                                  "description": "An integer number in hex format (0x...)",
                                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                                  "title": "Number as hex",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The offset of the entry point in the program",
                                                              "title": "Offset"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "offset",
                                                            "selector"
                                                          ],
                                                          "title": "Deprecated Cairo entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Deprecated L1 handler",
                                                    "type": "array"
                                                  }
                                                },
                                                "title": "Deprecated entry points by type",
                                                "type": "object"
                                              },
                                              "program": {
                                                "description": "A base64 representation of the compressed program code",
                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                "title": "Program",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "program",
                                              "entry_points_by_type"
                                            ],
                                            "title": "Deprecated contract class",
                                            "type": "object"
                                          }
                                        },
                                        "description": "The class to be declared",
                                        "title": "Contract class"
                                      }
                                    },
                                    "required": [
                                      "contract_class"
                                    ],
                                    "title": "ContractClass",
                                    "type": "object"
                                  },
                                  {
                                    "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                    "properties": {
                                      "class_hash": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The hash of the declared class",
                                        "title": "Class hash"
                                      }
                                    },
                                    "required": [
                                      "class_hash"
                                    ],
                                    "title": "ClassHash",
                                    "type": "object"
                                  }
                                ]
                              }
                            ],
                            "description": "Declare Contract Transaction V0",
                            "title": "Declare Contract Transaction V0"
                          }
                        },
                        "title": "Declare transaction V0"
                      },
                      {
                        "$ref": {
                          "#/components/schemas/DECLARE_TXN_V1": {
                            "allOf": [
                              {
                                "properties": {
                                  "max_fee": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The maximal fee that can be charged for including the transaction",
                                    "title": "Max fee"
                                  },
                                  "nonce": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Nonce"
                                  },
                                  "sender_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "description": "The address of the account contract sending the declaration transaction",
                                    "title": "Sender address"
                                  },
                                  "signature": {
                                    "$ref": {
                                      "#/components/schemas/SIGNATURE": {
                                        "description": "A transaction signature",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Signature",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Signature"
                                  },
                                  "type": {
                                    "enum": [
                                      "DECLARE"
                                    ],
                                    "title": "Declare",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the transaction scheme",
                                    "enum": [
                                      "0x1"
                                    ],
                                    "title": "Version",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "sender_address",
                                  "max_fee",
                                  "version",
                                  "signature",
                                  "nonce"
                                ],
                                "title": "Declare txn v1",
                                "type": "object"
                              },
                              {
                                "oneOf": [
                                  {
                                    "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                    "properties": {
                                      "contract_class": {
                                        "$ref": {
                                          "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                            "description": "The definition of a StarkNet contract class",
                                            "properties": {
                                              "abi": {
                                                "$ref": {
                                                  "#/components/schemas/CONTRACT_ABI": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                          "oneOf": [
                                                            {
                                                              "$ref": {
                                                                "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                  "properties": {
                                                                    "inputs": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "name": {
                                                                      "description": "The function name",
                                                                      "title": "Function name",
                                                                      "type": "string"
                                                                    },
                                                                    "outputs": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "stateMutability": {
                                                                      "$ref": {
                                                                        "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                          "enum": [
                                                                            "view"
                                                                          ],
                                                                          "title": "Function state mutability type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Function state mutability"
                                                                    },
                                                                    "type": {
                                                                      "$ref": {
                                                                        "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                          "enum": [
                                                                            "function",
                                                                            "l1_handler",
                                                                            "constructor"
                                                                          ],
                                                                          "title": "Function ABI type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Function ABI type"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "type",
                                                                    "name",
                                                                    "inputs",
                                                                    "outputs"
                                                                  ],
                                                                  "title": "Function ABI entry",
                                                                  "type": "object"
                                                                }
                                                              },
                                                              "title": "Function ABI entry"
                                                            },
                                                            {
                                                              "$ref": {
                                                                "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                  "properties": {
                                                                    "data": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "keys": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/TYPED_PARAMETER": {
                                                                            "properties": {
                                                                              "name": {
                                                                                "description": "The parameter's name",
                                                                                "title": "Parameter name",
                                                                                "type": "string"
                                                                              },
                                                                              "type": {
                                                                                "description": "The parameter's type",
                                                                                "title": "Parameter type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "name",
                                                                              "type"
                                                                            ],
                                                                            "title": "Typed parameter",
                                                                            "type": "object"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Typed parameter",
                                                                      "type": "array"
                                                                    },
                                                                    "name": {
                                                                      "description": "The event name",
                                                                      "title": "Event name",
                                                                      "type": "string"
                                                                    },
                                                                    "type": {
                                                                      "$ref": {
                                                                        "#/components/schemas/EVENT_ABI_TYPE": {
                                                                          "enum": [
                                                                            "event"
                                                                          ],
                                                                          "title": "Event ABI type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Event ABI type"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "type",
                                                                    "name",
                                                                    "keys",
                                                                    "data"
                                                                  ],
                                                                  "title": "Event ABI entry",
                                                                  "type": "object"
                                                                }
                                                              },
                                                              "title": "Event ABI entry"
                                                            },
                                                            {
                                                              "$ref": {
                                                                "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                  "properties": {
                                                                    "members": {
                                                                      "items": {
                                                                        "$ref": {
                                                                          "#/components/schemas/STRUCT_MEMBER": {
                                                                            "allOf": [
                                                                              {
                                                                                "$ref": {
                                                                                  "#/components/schemas/TYPED_PARAMETER": {
                                                                                    "properties": {
                                                                                      "name": {
                                                                                        "description": "The parameter's name",
                                                                                        "title": "Parameter name",
                                                                                        "type": "string"
                                                                                      },
                                                                                      "type": {
                                                                                        "description": "The parameter's type",
                                                                                        "title": "Parameter type",
                                                                                        "type": "string"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "name",
                                                                                      "type"
                                                                                    ],
                                                                                    "title": "Typed parameter",
                                                                                    "type": "object"
                                                                                  }
                                                                                },
                                                                                "title": "Typed parameter"
                                                                              },
                                                                              {
                                                                                "properties": {
                                                                                  "offset": {
                                                                                    "description": "offset of this property within the struct",
                                                                                    "title": "Offset",
                                                                                    "type": "integer"
                                                                                  }
                                                                                },
                                                                                "title": "Offset",
                                                                                "type": "object"
                                                                              }
                                                                            ],
                                                                            "title": "Struct member"
                                                                          }
                                                                        }
                                                                      },
                                                                      "title": "Members",
                                                                      "type": "array"
                                                                    },
                                                                    "name": {
                                                                      "description": "The struct name",
                                                                      "title": "Struct name",
                                                                      "type": "string"
                                                                    },
                                                                    "size": {
                                                                      "minimum": 1,
                                                                      "title": "Size",
                                                                      "type": "integer"
                                                                    },
                                                                    "type": {
                                                                      "$ref": {
                                                                        "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                          "enum": [
                                                                            "struct"
                                                                          ],
                                                                          "title": "Struct ABI type",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "title": "Struct ABI type"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "type",
                                                                    "name",
                                                                    "size",
                                                                    "members"
                                                                  ],
                                                                  "title": "Struct ABI entry",
                                                                  "type": "object"
                                                                }
                                                              },
                                                              "title": "Struct ABI entry"
                                                            }
                                                          ],
                                                          "title": "Contract ABI entry"
                                                        }
                                                      }
                                                    },
                                                    "title": "Contract ABI",
                                                    "type": "array"
                                                  }
                                                },
                                                "title": "Contract ABI"
                                              },
                                              "entry_points_by_type": {
                                                "properties": {
                                                  "CONSTRUCTOR": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                          "properties": {
                                                            "offset": {
                                                              "$ref": {
                                                                "#/components/schemas/NUM_AS_HEX": {
                                                                  "description": "An integer number in hex format (0x...)",
                                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                                  "title": "Number as hex",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The offset of the entry point in the program",
                                                              "title": "Offset"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "offset",
                                                            "selector"
                                                          ],
                                                          "title": "Deprecated Cairo entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Deprecated constructor",
                                                    "type": "array"
                                                  },
                                                  "EXTERNAL": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                          "properties": {
                                                            "offset": {
                                                              "$ref": {
                                                                "#/components/schemas/NUM_AS_HEX": {
                                                                  "description": "An integer number in hex format (0x...)",
                                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                                  "title": "Number as hex",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The offset of the entry point in the program",
                                                              "title": "Offset"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "offset",
                                                            "selector"
                                                          ],
                                                          "title": "Deprecated Cairo entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Deprecated external",
                                                    "type": "array"
                                                  },
                                                  "L1_HANDLER": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                          "properties": {
                                                            "offset": {
                                                              "$ref": {
                                                                "#/components/schemas/NUM_AS_HEX": {
                                                                  "description": "An integer number in hex format (0x...)",
                                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                                  "title": "Number as hex",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The offset of the entry point in the program",
                                                              "title": "Offset"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "offset",
                                                            "selector"
                                                          ],
                                                          "title": "Deprecated Cairo entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Deprecated L1 handler",
                                                    "type": "array"
                                                  }
                                                },
                                                "title": "Deprecated entry points by type",
                                                "type": "object"
                                              },
                                              "program": {
                                                "description": "A base64 representation of the compressed program code",
                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                "title": "Program",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "program",
                                              "entry_points_by_type"
                                            ],
                                            "title": "Deprecated contract class",
                                            "type": "object"
                                          }
                                        },
                                        "description": "The class to be declared",
                                        "title": "Contract class"
                                      }
                                    },
                                    "required": [
                                      "contract_class"
                                    ],
                                    "title": "ContractClass",
                                    "type": "object"
                                  },
                                  {
                                    "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                    "properties": {
                                      "class_hash": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The hash of the declared class",
                                        "title": "Class hash"
                                      }
                                    },
                                    "required": [
                                      "class_hash"
                                    ],
                                    "title": "ClassHash",
                                    "type": "object"
                                  }
                                ]
                              }
                            ],
                            "description": "Declare Contract Transaction V1",
                            "title": "Declare Contract Transaction V1"
                          }
                        },
                        "title": "Declare transaction V1"
                      },
                      {
                        "$ref": {
                          "#/components/schemas/DECLARE_TXN_V2": {
                            "allOf": [
                              {
                                "properties": {
                                  "compiled_class_hash": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                    "title": "Compiled class hash"
                                  },
                                  "max_fee": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The maximal fee that can be charged for including the transaction",
                                    "title": "Max fee"
                                  },
                                  "nonce": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Nonce"
                                  },
                                  "sender_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "description": "The address of the account contract sending the declaration transaction",
                                    "title": "Sender address"
                                  },
                                  "signature": {
                                    "$ref": {
                                      "#/components/schemas/SIGNATURE": {
                                        "description": "A transaction signature",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Signature",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Signature"
                                  },
                                  "type": {
                                    "enum": [
                                      "DECLARE"
                                    ],
                                    "title": "Declare",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the transaction scheme",
                                    "enum": [
                                      "0x2"
                                    ],
                                    "title": "Version",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "sender_address",
                                  "compiled_class_hash",
                                  "max_fee",
                                  "version",
                                  "signature",
                                  "nonce"
                                ],
                                "title": "Declare txn v2",
                                "type": "object"
                              },
                              {
                                "oneOf": [
                                  {
                                    "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                    "properties": {
                                      "contract_class": {
                                        "$ref": {
                                          "#/components/schemas/CONTRACT_CLASS": {
                                            "properties": {
                                              "abi": {
                                                "description": "The class ABI, as supplied by the user declaring the class",
                                                "title": "ABI",
                                                "type": "string"
                                              },
                                              "contract_class_version": {
                                                "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                "title": "Contract class version",
                                                "type": "string"
                                              },
                                              "entry_points_by_type": {
                                                "properties": {
                                                  "CONSTRUCTOR": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                          "properties": {
                                                            "function_idx": {
                                                              "description": "The index of the function in the program",
                                                              "title": "Function index",
                                                              "type": "integer"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "selector",
                                                            "function_idx"
                                                          ],
                                                          "title": "Sierra entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "Constructor",
                                                    "type": "array"
                                                  },
                                                  "EXTERNAL": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                          "properties": {
                                                            "function_idx": {
                                                              "description": "The index of the function in the program",
                                                              "title": "Function index",
                                                              "type": "integer"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "selector",
                                                            "function_idx"
                                                          ],
                                                          "title": "Sierra entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "External",
                                                    "type": "array"
                                                  },
                                                  "L1_HANDLER": {
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                          "properties": {
                                                            "function_idx": {
                                                              "description": "The index of the function in the program",
                                                              "title": "Function index",
                                                              "type": "integer"
                                                            },
                                                            "selector": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "A unique identifier of the entry point (function) in the program",
                                                              "title": "Selector"
                                                            }
                                                          },
                                                          "required": [
                                                            "selector",
                                                            "function_idx"
                                                          ],
                                                          "title": "Sierra entry point",
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "title": "L1 handler",
                                                    "type": "array"
                                                  }
                                                },
                                                "required": [
                                                  "CONSTRUCTOR",
                                                  "EXTERNAL",
                                                  "L1_HANDLER"
                                                ],
                                                "title": "Entry points by type",
                                                "type": "object"
                                              },
                                              "sierra_program": {
                                                "description": "The list of Sierra instructions of which the program consists",
                                                "items": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "title": "Sierra program",
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "sierra_program",
                                              "contract_class_version",
                                              "entry_points_by_type"
                                            ],
                                            "title": "Contract class",
                                            "type": "object"
                                          }
                                        },
                                        "description": "The class to be declared",
                                        "title": "Contract class"
                                      }
                                    },
                                    "required": [
                                      "countract_class"
                                    ],
                                    "title": "ContractClass",
                                    "type": "object"
                                  },
                                  {
                                    "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                    "properties": {
                                      "class_hash": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The hash of the declared class",
                                        "title": "Class hash"
                                      }
                                    },
                                    "required": [
                                      "class_hash"
                                    ],
                                    "title": "ClassHash",
                                    "type": "object"
                                  }
                                ]
                              }
                            ],
                            "description": "Declare Contract Transaction V2",
                            "title": "Declare Transaction V2"
                          }
                        },
                        "title": "Declare transaction V2"
                      }
                    ],
                    "title": "Declare transaction"
                  }
                },
                "title": "Declare transaction"
              },
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN": {
                    "description": "Initiate a transaction from an account",
                    "oneOf": [
                      {
                        "$ref": {
                          "#/components/schemas/INVOKE_TXN_V0": {
                            "description": "invokes a specific function in the desired contract (not necessarily an account)",
                            "properties": {
                              "calldata": {
                                "description": "The parameters passed to the function",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Calldata",
                                "type": "array"
                              },
                              "contract_address": {
                                "$ref": {
                                  "#/components/schemas/ADDRESS": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Address"
                                  }
                                },
                                "title": "Contract address"
                              },
                              "entry_point_selector": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Entry point selector"
                              },
                              "max_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The maximal fee that can be charged for including the transaction",
                                "title": "Max fee"
                              },
                              "signature": {
                                "$ref": {
                                  "#/components/schemas/SIGNATURE": {
                                    "description": "A transaction signature",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "Signature",
                                    "type": "array"
                                  }
                                },
                                "title": "Signature"
                              },
                              "type": {
                                "enum": [
                                  "INVOKE"
                                ],
                                "title": "Type",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the transaction scheme",
                                "enum": [
                                  "0x0"
                                ],
                                "title": "Version",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "contract_address",
                              "entry_point_selector",
                              "calldata",
                              "max_fee",
                              "version",
                              "signature"
                            ],
                            "title": "Invoke transaction V0"
                          }
                        },
                        "title": "Invoke transaction V0"
                      },
                      {
                        "$ref": {
                          "#/components/schemas/INVOKE_TXN_V1": {
                            "allOf": [
                              {
                                "properties": {
                                  "calldata": {
                                    "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "calldata",
                                    "type": "array"
                                  },
                                  "max_fee": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The maximal fee that can be charged for including the transaction",
                                    "title": "Max fee"
                                  },
                                  "nonce": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Nonce"
                                  },
                                  "sender_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "title": "sender address"
                                  },
                                  "signature": {
                                    "$ref": {
                                      "#/components/schemas/SIGNATURE": {
                                        "description": "A transaction signature",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Signature",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Signature"
                                  },
                                  "type": {
                                    "enum": [
                                      "INVOKE"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the transaction scheme",
                                    "enum": [
                                      "0x1"
                                    ],
                                    "title": "Version",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "sender_address",
                                  "calldata",
                                  "max_fee",
                                  "version",
                                  "signature",
                                  "nonce"
                                ],
                                "type": "object"
                              }
                            ],
                            "description": "initiates a transaction from a given account",
                            "title": "Invoke transaction V1"
                          }
                        },
                        "title": "Invoke transaction V1"
                      }
                    ],
                    "title": "Invoke transaction"
                  }
                },
                "title": "Invoke transaction"
              },
              {
                "$ref": {
                  "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                    "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                    "properties": {
                      "class_hash": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The hash of the deployed contract's class",
                        "title": "Class hash"
                      },
                      "constructor_calldata": {
                        "description": "The parameters passed to the constructor",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Constructor calldata",
                        "type": "array"
                      },
                      "contract_address_salt": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The salt for the address of the deployed contract",
                        "title": "Contract address salt"
                      },
                      "max_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The maximal fee that can be charged for including the transaction",
                        "title": "Max fee"
                      },
                      "nonce": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Nonce"
                      },
                      "signature": {
                        "$ref": {
                          "#/components/schemas/SIGNATURE": {
                            "description": "A transaction signature",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Signature",
                            "type": "array"
                          }
                        },
                        "title": "Signature"
                      },
                      "type": {
                        "enum": [
                          "DEPLOY_ACCOUNT"
                        ],
                        "title": "Deploy account",
                        "type": "string"
                      },
                      "version": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "Version of the transaction scheme",
                        "title": "Version"
                      }
                    },
                    "required": [
                      "max_fee",
                      "version",
                      "signature",
                      "nonce",
                      "type",
                      "contract_address_salt",
                      "constructor_calldata",
                      "class_hash"
                    ],
                    "title": "Deploy account transaction"
                  }
                },
                "title": "Deploy account transaction"
              }
            ]
          },
          "title": "Transaction",
          "type": "array"
        },
        "summary": "The transaction to estimate"
      },
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag, for the block referencing the state or call the transaction on.",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "the fee estimations",
      "name": "result",
      "schema": {
        "description": "a sequence of fee estimatione where the i'th estimate corresponds to the i'th transaction",
        "items": {
          "$ref": {
            "#/components/schemas/FEE_ESTIMATE": {
              "properties": {
                "gas_consumed": {
                  "$ref": {
                    "#/components/schemas/NUM_AS_HEX": {
                      "description": "An integer number in hex format (0x...)",
                      "pattern": "^0x[a-fA-F0-9]+$",
                      "title": "Number as hex",
                      "type": "string"
                    }
                  },
                  "description": "The Ethereum gas cost of the transaction (see https://docs.starknet.io/docs/Fees/fee-mechanism for more info)",
                  "title": "Gas consumed"
                },
                "gas_price": {
                  "$ref": {
                    "#/components/schemas/NUM_AS_HEX": {
                      "description": "An integer number in hex format (0x...)",
                      "pattern": "^0x[a-fA-F0-9]+$",
                      "title": "Number as hex",
                      "type": "string"
                    }
                  },
                  "description": "The gas price (in gwei) that was used in the cost estimation",
                  "title": "Gas price"
                },
                "overall_fee": {
                  "$ref": {
                    "#/components/schemas/NUM_AS_HEX": {
                      "description": "An integer number in hex format (0x...)",
                      "pattern": "^0x[a-fA-F0-9]+$",
                      "title": "Number as hex",
                      "type": "string"
                    }
                  },
                  "description": "The estimated fee for the transaction (in gwei), product of gas_consumed and gas_price",
                  "title": "Overall fee"
                }
              },
              "required": [
                "gas_consumed",
                "gas_price",
                "overall_fee"
              ],
              "title": "Fee estimation",
              "type": "object"
            }
          }
        },
        "title": "Estimation",
        "type": "array"
      }
    },
    "summary": "estimate the fee for of StarkNet transactions"
  },
  "#/methods/starknet_estimateMessageFee": {
    "description": "estimates the resources required by the l1_handler transaction induced by the message",
    "errors": [
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CONTRACT_ERROR": {
            "code": 40,
            "message": "Contract error"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_estimateMessageFee",
    "params": [
      {
        "description": "the message's parameters",
        "name": "message",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/MSG_FROM_L1": {
              "properties": {
                "entry_point_selector": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The selector of the l1_handler in invoke in the target contract",
                  "title": "Selector"
                },
                "from_address": {
                  "$ref": {
                    "#/components/schemas/ETH_ADDRESS": {
                      "$comment": "An ethereum address",
                      "description": "an ethereum address represented as 40 hex digits",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "title": "Ethereum address",
                      "type": "string"
                    }
                  },
                  "description": "The address of the L1 contract sending the message"
                },
                "payload": {
                  "description": "The payload of the message",
                  "items": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    }
                  },
                  "title": "Payload",
                  "type": "array"
                },
                "to_address": {
                  "$ref": {
                    "#/components/schemas/ADDRESS": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "title": "Address"
                    }
                  },
                  "description": "The target L2 address the message is sent to",
                  "title": "To address"
                }
              },
              "required": [
                "from_address",
                "to_address",
                "payload",
                "entry_point_selector"
              ],
              "title": "Message from L1",
              "type": "object"
            }
          }
        }
      },
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag, for the block referencing the state or call the transaction on.",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "the fee estimation",
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/FEE_ESTIMATE": {
            "properties": {
              "gas_consumed": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The Ethereum gas cost of the transaction (see https://docs.starknet.io/docs/Fees/fee-mechanism for more info)",
                "title": "Gas consumed"
              },
              "gas_price": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The gas price (in gwei) that was used in the cost estimation",
                "title": "Gas price"
              },
              "overall_fee": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The estimated fee for the transaction (in gwei), product of gas_consumed and gas_price",
                "title": "Overall fee"
              }
            },
            "required": [
              "gas_consumed",
              "gas_price",
              "overall_fee"
            ],
            "title": "Fee estimation",
            "type": "object"
          }
        }
      }
    },
    "summary": "estimate the L2 fee of a message sent on L1"
  },
  "#/methods/starknet_getBlockTransactionCount": {
    "description": "Returns the number of transactions in the designated block.",
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_getBlockTransactionCount",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "The number of transactions in the designated block",
      "name": "result",
      "schema": {
        "minimum": 0,
        "title": "Block transaction count",
        "type": "integer"
      },
      "summary": "The number of transactions in the designated block"
    },
    "summary": "Get the number of transactions in a block given a block id"
  },
  "#/methods/starknet_getBlockWithTxHashes": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_getBlockWithTxHashes",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "The resulting block information with transaction hashes",
      "name": "result",
      "schema": {
        "oneOf": [
          {
            "$ref": {
              "#/components/schemas/BLOCK_WITH_TX_HASHES": {
                "allOf": [
                  {
                    "properties": {
                      "status": {
                        "$ref": {
                          "#/components/schemas/BLOCK_STATUS": {
                            "description": "The status of the block",
                            "enum": [
                              "PENDING",
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1",
                              "REJECTED"
                            ],
                            "title": "Block status",
                            "type": "string"
                          }
                        },
                        "title": "Status"
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "title": "Block status",
                    "type": "object"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/BLOCK_HEADER": {
                        "properties": {
                          "block_hash": {
                            "$ref": {
                              "#/components/schemas/BLOCK_HASH": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Block hash"
                              }
                            },
                            "title": "Block hash"
                          },
                          "block_number": {
                            "$ref": {
                              "#/components/schemas/BLOCK_NUMBER": {
                                "description": "The block's number (its height)",
                                "minimum": 0,
                                "title": "Block number",
                                "type": "integer"
                              }
                            },
                            "description": "The block number (its height)",
                            "title": "Block number"
                          },
                          "new_root": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The new global state root",
                            "title": "New root"
                          },
                          "parent_hash": {
                            "$ref": {
                              "#/components/schemas/BLOCK_HASH": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Block hash"
                              }
                            },
                            "description": "The hash of this block's parent",
                            "title": "Parent hash"
                          },
                          "sequencer_address": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The StarkNet identity of the sequencer submitting this block",
                            "title": "Sequencer address"
                          },
                          "timestamp": {
                            "description": "The time in which the block was created, encoded in Unix time",
                            "minimum": 0,
                            "title": "Timestamp",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "block_hash",
                          "parent_hash",
                          "block_number",
                          "new_root",
                          "timestamp",
                          "sequencer_address"
                        ],
                        "title": "Block header",
                        "type": "object"
                      }
                    },
                    "title": "Block header"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
                        "properties": {
                          "transactions": {
                            "description": "The hashes of the transactions included in this block",
                            "items": {
                              "$ref": {
                                "#/components/schemas/TXN_HASH": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The transaction hash, as assigned in StarkNet",
                                  "title": "Transaction hash"
                                }
                              },
                              "description": "The hash of a single transaction"
                            },
                            "title": "Transaction",
                            "type": "array"
                          }
                        },
                        "required": [
                          "transactions"
                        ],
                        "title": "Block body with transaction hashes",
                        "type": "object"
                      }
                    },
                    "title": "Block body with transaction hashes"
                  }
                ],
                "description": "The block object",
                "title": "Block with transaction hashes"
              }
            },
            "title": "Block with transaction hashes"
          },
          {
            "$ref": {
              "#/components/schemas/PENDING_BLOCK_WITH_TX_HASHES": {
                "allOf": [
                  {
                    "$ref": {
                      "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
                        "properties": {
                          "transactions": {
                            "description": "The hashes of the transactions included in this block",
                            "items": {
                              "$ref": {
                                "#/components/schemas/TXN_HASH": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The transaction hash, as assigned in StarkNet",
                                  "title": "Transaction hash"
                                }
                              },
                              "description": "The hash of a single transaction"
                            },
                            "title": "Transaction",
                            "type": "array"
                          }
                        },
                        "required": [
                          "transactions"
                        ],
                        "title": "Block body with transaction hashes",
                        "type": "object"
                      }
                    },
                    "title": "Block body with transactions hashes"
                  },
                  {
                    "properties": {
                      "parent_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "description": "The hash of this block's parent",
                        "title": "Parent hash"
                      },
                      "sequencer_address": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The StarkNet identity of the sequencer submitting this block",
                        "title": "Sequencer address"
                      },
                      "timestamp": {
                        "description": "The time in which the block was created, encoded in Unix time",
                        "minimum": 0,
                        "title": "Timestamp",
                        "type": "integer"
                      }
                    },
                    "title": "Pending block header",
                    "type": "object"
                  }
                ],
                "description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
                "title": "Pending block with transaction hashes"
              }
            },
            "title": "Pending block with transaction hashes"
          }
        ],
        "title": "Starknet get block hash with tx hashes result"
      }
    },
    "summary": "Get block information with transaction hashes given the block id"
  },
  "#/methods/starknet_getBlockWithTxs": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_getBlockWithTxs",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "The resulting block information with full transactions",
      "name": "result",
      "schema": {
        "oneOf": [
          {
            "$ref": {
              "#/components/schemas/BLOCK_WITH_TXS": {
                "allOf": [
                  {
                    "properties": {
                      "status": {
                        "$ref": {
                          "#/components/schemas/BLOCK_STATUS": {
                            "description": "The status of the block",
                            "enum": [
                              "PENDING",
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1",
                              "REJECTED"
                            ],
                            "title": "Block status",
                            "type": "string"
                          }
                        },
                        "title": "Status"
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "title": "block with txs",
                    "type": "object"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/BLOCK_HEADER": {
                        "properties": {
                          "block_hash": {
                            "$ref": {
                              "#/components/schemas/BLOCK_HASH": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Block hash"
                              }
                            },
                            "title": "Block hash"
                          },
                          "block_number": {
                            "$ref": {
                              "#/components/schemas/BLOCK_NUMBER": {
                                "description": "The block's number (its height)",
                                "minimum": 0,
                                "title": "Block number",
                                "type": "integer"
                              }
                            },
                            "description": "The block number (its height)",
                            "title": "Block number"
                          },
                          "new_root": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The new global state root",
                            "title": "New root"
                          },
                          "parent_hash": {
                            "$ref": {
                              "#/components/schemas/BLOCK_HASH": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Block hash"
                              }
                            },
                            "description": "The hash of this block's parent",
                            "title": "Parent hash"
                          },
                          "sequencer_address": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The StarkNet identity of the sequencer submitting this block",
                            "title": "Sequencer address"
                          },
                          "timestamp": {
                            "description": "The time in which the block was created, encoded in Unix time",
                            "minimum": 0,
                            "title": "Timestamp",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "block_hash",
                          "parent_hash",
                          "block_number",
                          "new_root",
                          "timestamp",
                          "sequencer_address"
                        ],
                        "title": "Block header",
                        "type": "object"
                      }
                    },
                    "title": "Block header"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/BLOCK_BODY_WITH_TXS": {
                        "properties": {
                          "transactions": {
                            "description": "The transactions in this block",
                            "items": {
                              "allOf": [
                                {
                                  "$ref": {
                                    "#/components/schemas/TXN": {
                                      "description": "The transaction schema, as it appears inside a block",
                                      "oneOf": [
                                        {
                                          "$ref": {
                                            "#/components/schemas/INVOKE_TXN": {
                                              "description": "Initiate a transaction from an account",
                                              "oneOf": [
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/INVOKE_TXN_V0": {
                                                      "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                                      "properties": {
                                                        "calldata": {
                                                          "description": "The parameters passed to the function",
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/FELT": {
                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                "title": "Field element",
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "title": "Calldata",
                                                          "type": "array"
                                                        },
                                                        "contract_address": {
                                                          "$ref": {
                                                            "#/components/schemas/ADDRESS": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Address"
                                                            }
                                                          },
                                                          "title": "Contract address"
                                                        },
                                                        "entry_point_selector": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Entry point selector"
                                                        },
                                                        "max_fee": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "description": "The maximal fee that can be charged for including the transaction",
                                                          "title": "Max fee"
                                                        },
                                                        "signature": {
                                                          "$ref": {
                                                            "#/components/schemas/SIGNATURE": {
                                                              "description": "A transaction signature",
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/FELT": {
                                                                    "description": "A field element. represented by at most 63 hex digits",
                                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                    "title": "Field element",
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Signature",
                                                              "type": "array"
                                                            }
                                                          },
                                                          "title": "Signature"
                                                        },
                                                        "type": {
                                                          "enum": [
                                                            "INVOKE"
                                                          ],
                                                          "title": "Type",
                                                          "type": "string"
                                                        },
                                                        "version": {
                                                          "description": "Version of the transaction scheme",
                                                          "enum": [
                                                            "0x0"
                                                          ],
                                                          "title": "Version",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "contract_address",
                                                        "entry_point_selector",
                                                        "calldata",
                                                        "max_fee",
                                                        "version",
                                                        "signature"
                                                      ],
                                                      "title": "Invoke transaction V0"
                                                    }
                                                  },
                                                  "title": "Invoke transaction V0"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/INVOKE_TXN_V1": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "calldata": {
                                                              "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/FELT": {
                                                                    "description": "A field element. represented by at most 63 hex digits",
                                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                    "title": "Field element",
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "title": "calldata",
                                                              "type": "array"
                                                            },
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "nonce": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Nonce"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "title": "sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "INVOKE"
                                                              ],
                                                              "title": "Type",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x1"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "calldata",
                                                            "max_fee",
                                                            "version",
                                                            "signature",
                                                            "nonce"
                                                          ],
                                                          "type": "object"
                                                        }
                                                      ],
                                                      "description": "initiates a transaction from a given account",
                                                      "title": "Invoke transaction V1"
                                                    }
                                                  },
                                                  "title": "Invoke transaction V1"
                                                }
                                              ],
                                              "title": "Invoke transaction"
                                            }
                                          },
                                          "title": "Invoke transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/L1_HANDLER_TXN": {
                                              "allOf": [
                                                {
                                                  "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                                                  "properties": {
                                                    "nonce": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                                      "title": "Nonce"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "L1_HANDLER"
                                                      ],
                                                      "title": "type",
                                                      "type": "string"
                                                    },
                                                    "version": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "Version of the transaction scheme",
                                                      "title": "Version"
                                                    }
                                                  },
                                                  "required": [
                                                    "version",
                                                    "type",
                                                    "nonce"
                                                  ],
                                                  "title": "L1 handler transaction",
                                                  "type": "object"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/FUNCTION_CALL": {
                                                      "description": "Function call information",
                                                      "properties": {
                                                        "calldata": {
                                                          "description": "The parameters passed to the function",
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/FELT": {
                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                "title": "Field element",
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "title": "Calldata",
                                                          "type": "array"
                                                        },
                                                        "contract_address": {
                                                          "$ref": {
                                                            "#/components/schemas/ADDRESS": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Address"
                                                            }
                                                          },
                                                          "title": "Contract address"
                                                        },
                                                        "entry_point_selector": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Entry point selector"
                                                        }
                                                      },
                                                      "required": [
                                                        "contract_address",
                                                        "entry_point_selector",
                                                        "calldata"
                                                      ],
                                                      "title": "Function call",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "title": "Function call"
                                                }
                                              ],
                                              "title": "L1 Handler transaction"
                                            }
                                          },
                                          "title": "L1 handler transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/DECLARE_TXN": {
                                              "oneOf": [
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/DECLARE_TXN_V0": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "description": "The address of the account contract sending the declaration transaction",
                                                              "title": "Sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "DECLARE"
                                                              ],
                                                              "title": "Declare",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x0"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "max_fee",
                                                            "version",
                                                            "signature"
                                                          ],
                                                          "title": "Declare txn v0",
                                                          "type": "object"
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                              "properties": {
                                                                "contract_class": {
                                                                  "$ref": {
                                                                    "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                                      "description": "The definition of a StarkNet contract class",
                                                                      "properties": {
                                                                        "abi": {
                                                                          "$ref": {
                                                                            "#/components/schemas/CONTRACT_ABI": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                                    "oneOf": [
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "inputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The function name",
                                                                                                "title": "Function name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "outputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "stateMutability": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                                    "enum": [
                                                                                                      "view"
                                                                                                    ],
                                                                                                    "title": "Function state mutability type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function state mutability"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "function",
                                                                                                      "l1_handler",
                                                                                                      "constructor"
                                                                                                    ],
                                                                                                    "title": "Function ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "inputs",
                                                                                              "outputs"
                                                                                            ],
                                                                                            "title": "Function ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Function ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "data": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "keys": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The event name",
                                                                                                "title": "Event name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "event"
                                                                                                    ],
                                                                                                    "title": "Event ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Event ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "keys",
                                                                                              "data"
                                                                                            ],
                                                                                            "title": "Event ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Event ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "members": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/STRUCT_MEMBER": {
                                                                                                      "allOf": [
                                                                                                        {
                                                                                                          "$ref": {
                                                                                                            "#/components/schemas/TYPED_PARAMETER": {
                                                                                                              "properties": {
                                                                                                                "name": {
                                                                                                                  "description": "The parameter's name",
                                                                                                                  "title": "Parameter name",
                                                                                                                  "type": "string"
                                                                                                                },
                                                                                                                "type": {
                                                                                                                  "description": "The parameter's type",
                                                                                                                  "title": "Parameter type",
                                                                                                                  "type": "string"
                                                                                                                }
                                                                                                              },
                                                                                                              "required": [
                                                                                                                "name",
                                                                                                                "type"
                                                                                                              ],
                                                                                                              "title": "Typed parameter",
                                                                                                              "type": "object"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Typed parameter"
                                                                                                        },
                                                                                                        {
                                                                                                          "properties": {
                                                                                                            "offset": {
                                                                                                              "description": "offset of this property within the struct",
                                                                                                              "title": "Offset",
                                                                                                              "type": "integer"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Offset",
                                                                                                          "type": "object"
                                                                                                        }
                                                                                                      ],
                                                                                                      "title": "Struct member"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Members",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The struct name",
                                                                                                "title": "Struct name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "size": {
                                                                                                "minimum": 1,
                                                                                                "title": "Size",
                                                                                                "type": "integer"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "struct"
                                                                                                    ],
                                                                                                    "title": "Struct ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Struct ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "size",
                                                                                              "members"
                                                                                            ],
                                                                                            "title": "Struct ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Struct ABI entry"
                                                                                      }
                                                                                    ],
                                                                                    "title": "Contract ABI entry"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Contract ABI",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Contract ABI"
                                                                        },
                                                                        "entry_points_by_type": {
                                                                          "properties": {
                                                                            "CONSTRUCTOR": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated constructor",
                                                                              "type": "array"
                                                                            },
                                                                            "EXTERNAL": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated external",
                                                                              "type": "array"
                                                                            },
                                                                            "L1_HANDLER": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated L1 handler",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Deprecated entry points by type",
                                                                          "type": "object"
                                                                        },
                                                                        "program": {
                                                                          "description": "A base64 representation of the compressed program code",
                                                                          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                                          "title": "Program",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "program",
                                                                        "entry_points_by_type"
                                                                      ],
                                                                      "title": "Deprecated contract class",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "description": "The class to be declared",
                                                                  "title": "Contract class"
                                                                }
                                                              },
                                                              "required": [
                                                                "contract_class"
                                                              ],
                                                              "title": "ContractClass",
                                                              "type": "object"
                                                            },
                                                            {
                                                              "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                              "properties": {
                                                                "class_hash": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The hash of the declared class",
                                                                  "title": "Class hash"
                                                                }
                                                              },
                                                              "required": [
                                                                "class_hash"
                                                              ],
                                                              "title": "ClassHash",
                                                              "type": "object"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "description": "Declare Contract Transaction V0",
                                                      "title": "Declare Contract Transaction V0"
                                                    }
                                                  },
                                                  "title": "Declare transaction V0"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/DECLARE_TXN_V1": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "nonce": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Nonce"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "description": "The address of the account contract sending the declaration transaction",
                                                              "title": "Sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "DECLARE"
                                                              ],
                                                              "title": "Declare",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x1"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "max_fee",
                                                            "version",
                                                            "signature",
                                                            "nonce"
                                                          ],
                                                          "title": "Declare txn v1",
                                                          "type": "object"
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                              "properties": {
                                                                "contract_class": {
                                                                  "$ref": {
                                                                    "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                                      "description": "The definition of a StarkNet contract class",
                                                                      "properties": {
                                                                        "abi": {
                                                                          "$ref": {
                                                                            "#/components/schemas/CONTRACT_ABI": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                                    "oneOf": [
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "inputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The function name",
                                                                                                "title": "Function name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "outputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "stateMutability": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                                    "enum": [
                                                                                                      "view"
                                                                                                    ],
                                                                                                    "title": "Function state mutability type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function state mutability"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "function",
                                                                                                      "l1_handler",
                                                                                                      "constructor"
                                                                                                    ],
                                                                                                    "title": "Function ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "inputs",
                                                                                              "outputs"
                                                                                            ],
                                                                                            "title": "Function ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Function ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "data": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "keys": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The event name",
                                                                                                "title": "Event name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "event"
                                                                                                    ],
                                                                                                    "title": "Event ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Event ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "keys",
                                                                                              "data"
                                                                                            ],
                                                                                            "title": "Event ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Event ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "members": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/STRUCT_MEMBER": {
                                                                                                      "allOf": [
                                                                                                        {
                                                                                                          "$ref": {
                                                                                                            "#/components/schemas/TYPED_PARAMETER": {
                                                                                                              "properties": {
                                                                                                                "name": {
                                                                                                                  "description": "The parameter's name",
                                                                                                                  "title": "Parameter name",
                                                                                                                  "type": "string"
                                                                                                                },
                                                                                                                "type": {
                                                                                                                  "description": "The parameter's type",
                                                                                                                  "title": "Parameter type",
                                                                                                                  "type": "string"
                                                                                                                }
                                                                                                              },
                                                                                                              "required": [
                                                                                                                "name",
                                                                                                                "type"
                                                                                                              ],
                                                                                                              "title": "Typed parameter",
                                                                                                              "type": "object"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Typed parameter"
                                                                                                        },
                                                                                                        {
                                                                                                          "properties": {
                                                                                                            "offset": {
                                                                                                              "description": "offset of this property within the struct",
                                                                                                              "title": "Offset",
                                                                                                              "type": "integer"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Offset",
                                                                                                          "type": "object"
                                                                                                        }
                                                                                                      ],
                                                                                                      "title": "Struct member"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Members",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The struct name",
                                                                                                "title": "Struct name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "size": {
                                                                                                "minimum": 1,
                                                                                                "title": "Size",
                                                                                                "type": "integer"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "struct"
                                                                                                    ],
                                                                                                    "title": "Struct ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Struct ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "size",
                                                                                              "members"
                                                                                            ],
                                                                                            "title": "Struct ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Struct ABI entry"
                                                                                      }
                                                                                    ],
                                                                                    "title": "Contract ABI entry"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Contract ABI",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Contract ABI"
                                                                        },
                                                                        "entry_points_by_type": {
                                                                          "properties": {
                                                                            "CONSTRUCTOR": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated constructor",
                                                                              "type": "array"
                                                                            },
                                                                            "EXTERNAL": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated external",
                                                                              "type": "array"
                                                                            },
                                                                            "L1_HANDLER": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated L1 handler",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Deprecated entry points by type",
                                                                          "type": "object"
                                                                        },
                                                                        "program": {
                                                                          "description": "A base64 representation of the compressed program code",
                                                                          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                                          "title": "Program",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "program",
                                                                        "entry_points_by_type"
                                                                      ],
                                                                      "title": "Deprecated contract class",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "description": "The class to be declared",
                                                                  "title": "Contract class"
                                                                }
                                                              },
                                                              "required": [
                                                                "contract_class"
                                                              ],
                                                              "title": "ContractClass",
                                                              "type": "object"
                                                            },
                                                            {
                                                              "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                              "properties": {
                                                                "class_hash": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The hash of the declared class",
                                                                  "title": "Class hash"
                                                                }
                                                              },
                                                              "required": [
                                                                "class_hash"
                                                              ],
                                                              "title": "ClassHash",
                                                              "type": "object"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "description": "Declare Contract Transaction V1",
                                                      "title": "Declare Contract Transaction V1"
                                                    }
                                                  },
                                                  "title": "Declare transaction V1"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/DECLARE_TXN_V2": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "compiled_class_hash": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                                              "title": "Compiled class hash"
                                                            },
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "nonce": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Nonce"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "description": "The address of the account contract sending the declaration transaction",
                                                              "title": "Sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "DECLARE"
                                                              ],
                                                              "title": "Declare",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x2"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "compiled_class_hash",
                                                            "max_fee",
                                                            "version",
                                                            "signature",
                                                            "nonce"
                                                          ],
                                                          "title": "Declare txn v2",
                                                          "type": "object"
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                              "properties": {
                                                                "contract_class": {
                                                                  "$ref": {
                                                                    "#/components/schemas/CONTRACT_CLASS": {
                                                                      "properties": {
                                                                        "abi": {
                                                                          "description": "The class ABI, as supplied by the user declaring the class",
                                                                          "title": "ABI",
                                                                          "type": "string"
                                                                        },
                                                                        "contract_class_version": {
                                                                          "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                                          "title": "Contract class version",
                                                                          "type": "string"
                                                                        },
                                                                        "entry_points_by_type": {
                                                                          "properties": {
                                                                            "CONSTRUCTOR": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "function_idx": {
                                                                                        "description": "The index of the function in the program",
                                                                                        "title": "Function index",
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "selector",
                                                                                      "function_idx"
                                                                                    ],
                                                                                    "title": "Sierra entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Constructor",
                                                                              "type": "array"
                                                                            },
                                                                            "EXTERNAL": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "function_idx": {
                                                                                        "description": "The index of the function in the program",
                                                                                        "title": "Function index",
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "selector",
                                                                                      "function_idx"
                                                                                    ],
                                                                                    "title": "Sierra entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "External",
                                                                              "type": "array"
                                                                            },
                                                                            "L1_HANDLER": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "function_idx": {
                                                                                        "description": "The index of the function in the program",
                                                                                        "title": "Function index",
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "selector",
                                                                                      "function_idx"
                                                                                    ],
                                                                                    "title": "Sierra entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "L1 handler",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "required": [
                                                                            "CONSTRUCTOR",
                                                                            "EXTERNAL",
                                                                            "L1_HANDLER"
                                                                          ],
                                                                          "title": "Entry points by type",
                                                                          "type": "object"
                                                                        },
                                                                        "sierra_program": {
                                                                          "description": "The list of Sierra instructions of which the program consists",
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Sierra program",
                                                                          "type": "array"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "sierra_program",
                                                                        "contract_class_version",
                                                                        "entry_points_by_type"
                                                                      ],
                                                                      "title": "Contract class",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "description": "The class to be declared",
                                                                  "title": "Contract class"
                                                                }
                                                              },
                                                              "required": [
                                                                "countract_class"
                                                              ],
                                                              "title": "ContractClass",
                                                              "type": "object"
                                                            },
                                                            {
                                                              "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                              "properties": {
                                                                "class_hash": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The hash of the declared class",
                                                                  "title": "Class hash"
                                                                }
                                                              },
                                                              "required": [
                                                                "class_hash"
                                                              ],
                                                              "title": "ClassHash",
                                                              "type": "object"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "description": "Declare Contract Transaction V2",
                                                      "title": "Declare Transaction V2"
                                                    }
                                                  },
                                                  "title": "Declare transaction V2"
                                                }
                                              ],
                                              "title": "Declare transaction"
                                            }
                                          },
                                          "title": "Declare transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/DEPLOY_TXN": {
                                              "allOf": [
                                                {
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the deployed contract's class",
                                                      "title": "Class hash"
                                                    },
                                                    "constructor_calldata": {
                                                      "description": "The parameters passed to the constructor",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Constructor calldata",
                                                      "type": "array"
                                                    },
                                                    "contract_address_salt": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The salt for the address of the deployed contract",
                                                      "title": "Contract address salt"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "DEPLOY"
                                                      ],
                                                      "title": "Deploy",
                                                      "type": "string"
                                                    },
                                                    "version": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "Version of the transaction scheme",
                                                      "title": "Version"
                                                    }
                                                  },
                                                  "required": [
                                                    "version",
                                                    "type",
                                                    "constructor_calldata",
                                                    "contract_address_salt",
                                                    "class_hash"
                                                  ],
                                                  "title": "Deploy txn",
                                                  "type": "object"
                                                }
                                              ],
                                              "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                                              "title": "Deploy Contract Transaction"
                                            }
                                          },
                                          "title": "Deploy transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                                              "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the deployed contract's class",
                                                  "title": "Class hash"
                                                },
                                                "constructor_calldata": {
                                                  "description": "The parameters passed to the constructor",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Constructor calldata",
                                                  "type": "array"
                                                },
                                                "contract_address_salt": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The salt for the address of the deployed contract",
                                                  "title": "Contract address salt"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DEPLOY_ACCOUNT"
                                                  ],
                                                  "title": "Deploy account",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "Version of the transaction scheme",
                                                  "title": "Version"
                                                }
                                              },
                                              "required": [
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce",
                                                "type",
                                                "contract_address_salt",
                                                "constructor_calldata",
                                                "class_hash"
                                              ],
                                              "title": "Deploy account transaction"
                                            }
                                          },
                                          "title": "Deploy account transaction"
                                        }
                                      ],
                                      "title": "Transaction"
                                    }
                                  },
                                  "title": "transaction"
                                },
                                {
                                  "properties": {
                                    "transaction_hash": {
                                      "$ref": {
                                        "#/components/schemas/TXN_HASH": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The transaction hash, as assigned in StarkNet",
                                          "title": "Transaction hash"
                                        }
                                      },
                                      "title": "transaction hash"
                                    }
                                  },
                                  "required": [
                                    "transaction_hash"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "title": "transactions in block",
                              "type": "object"
                            },
                            "title": "Transactions",
                            "type": "array"
                          }
                        },
                        "required": [
                          "transactions"
                        ],
                        "title": "Block body with transactions",
                        "type": "object"
                      }
                    },
                    "title": "Block body with transactions"
                  }
                ],
                "description": "The block object",
                "title": "Block with transactions"
              }
            },
            "title": "Block with transactions"
          },
          {
            "$ref": {
              "#/components/schemas/PENDING_BLOCK_WITH_TXS": {
                "allOf": [
                  {
                    "$ref": {
                      "#/components/schemas/BLOCK_BODY_WITH_TXS": {
                        "properties": {
                          "transactions": {
                            "description": "The transactions in this block",
                            "items": {
                              "allOf": [
                                {
                                  "$ref": {
                                    "#/components/schemas/TXN": {
                                      "description": "The transaction schema, as it appears inside a block",
                                      "oneOf": [
                                        {
                                          "$ref": {
                                            "#/components/schemas/INVOKE_TXN": {
                                              "description": "Initiate a transaction from an account",
                                              "oneOf": [
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/INVOKE_TXN_V0": {
                                                      "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                                      "properties": {
                                                        "calldata": {
                                                          "description": "The parameters passed to the function",
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/FELT": {
                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                "title": "Field element",
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "title": "Calldata",
                                                          "type": "array"
                                                        },
                                                        "contract_address": {
                                                          "$ref": {
                                                            "#/components/schemas/ADDRESS": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Address"
                                                            }
                                                          },
                                                          "title": "Contract address"
                                                        },
                                                        "entry_point_selector": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Entry point selector"
                                                        },
                                                        "max_fee": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "description": "The maximal fee that can be charged for including the transaction",
                                                          "title": "Max fee"
                                                        },
                                                        "signature": {
                                                          "$ref": {
                                                            "#/components/schemas/SIGNATURE": {
                                                              "description": "A transaction signature",
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/FELT": {
                                                                    "description": "A field element. represented by at most 63 hex digits",
                                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                    "title": "Field element",
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "title": "Signature",
                                                              "type": "array"
                                                            }
                                                          },
                                                          "title": "Signature"
                                                        },
                                                        "type": {
                                                          "enum": [
                                                            "INVOKE"
                                                          ],
                                                          "title": "Type",
                                                          "type": "string"
                                                        },
                                                        "version": {
                                                          "description": "Version of the transaction scheme",
                                                          "enum": [
                                                            "0x0"
                                                          ],
                                                          "title": "Version",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "contract_address",
                                                        "entry_point_selector",
                                                        "calldata",
                                                        "max_fee",
                                                        "version",
                                                        "signature"
                                                      ],
                                                      "title": "Invoke transaction V0"
                                                    }
                                                  },
                                                  "title": "Invoke transaction V0"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/INVOKE_TXN_V1": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "calldata": {
                                                              "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                                              "items": {
                                                                "$ref": {
                                                                  "#/components/schemas/FELT": {
                                                                    "description": "A field element. represented by at most 63 hex digits",
                                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                    "title": "Field element",
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "title": "calldata",
                                                              "type": "array"
                                                            },
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "nonce": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Nonce"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "title": "sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "INVOKE"
                                                              ],
                                                              "title": "Type",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x1"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "calldata",
                                                            "max_fee",
                                                            "version",
                                                            "signature",
                                                            "nonce"
                                                          ],
                                                          "type": "object"
                                                        }
                                                      ],
                                                      "description": "initiates a transaction from a given account",
                                                      "title": "Invoke transaction V1"
                                                    }
                                                  },
                                                  "title": "Invoke transaction V1"
                                                }
                                              ],
                                              "title": "Invoke transaction"
                                            }
                                          },
                                          "title": "Invoke transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/L1_HANDLER_TXN": {
                                              "allOf": [
                                                {
                                                  "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                                                  "properties": {
                                                    "nonce": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                                      "title": "Nonce"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "L1_HANDLER"
                                                      ],
                                                      "title": "type",
                                                      "type": "string"
                                                    },
                                                    "version": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "Version of the transaction scheme",
                                                      "title": "Version"
                                                    }
                                                  },
                                                  "required": [
                                                    "version",
                                                    "type",
                                                    "nonce"
                                                  ],
                                                  "title": "L1 handler transaction",
                                                  "type": "object"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/FUNCTION_CALL": {
                                                      "description": "Function call information",
                                                      "properties": {
                                                        "calldata": {
                                                          "description": "The parameters passed to the function",
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/FELT": {
                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                "title": "Field element",
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "title": "Calldata",
                                                          "type": "array"
                                                        },
                                                        "contract_address": {
                                                          "$ref": {
                                                            "#/components/schemas/ADDRESS": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Address"
                                                            }
                                                          },
                                                          "title": "Contract address"
                                                        },
                                                        "entry_point_selector": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Entry point selector"
                                                        }
                                                      },
                                                      "required": [
                                                        "contract_address",
                                                        "entry_point_selector",
                                                        "calldata"
                                                      ],
                                                      "title": "Function call",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "title": "Function call"
                                                }
                                              ],
                                              "title": "L1 Handler transaction"
                                            }
                                          },
                                          "title": "L1 handler transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/DECLARE_TXN": {
                                              "oneOf": [
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/DECLARE_TXN_V0": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "description": "The address of the account contract sending the declaration transaction",
                                                              "title": "Sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "DECLARE"
                                                              ],
                                                              "title": "Declare",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x0"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "max_fee",
                                                            "version",
                                                            "signature"
                                                          ],
                                                          "title": "Declare txn v0",
                                                          "type": "object"
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                              "properties": {
                                                                "contract_class": {
                                                                  "$ref": {
                                                                    "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                                      "description": "The definition of a StarkNet contract class",
                                                                      "properties": {
                                                                        "abi": {
                                                                          "$ref": {
                                                                            "#/components/schemas/CONTRACT_ABI": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                                    "oneOf": [
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "inputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The function name",
                                                                                                "title": "Function name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "outputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "stateMutability": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                                    "enum": [
                                                                                                      "view"
                                                                                                    ],
                                                                                                    "title": "Function state mutability type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function state mutability"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "function",
                                                                                                      "l1_handler",
                                                                                                      "constructor"
                                                                                                    ],
                                                                                                    "title": "Function ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "inputs",
                                                                                              "outputs"
                                                                                            ],
                                                                                            "title": "Function ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Function ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "data": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "keys": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The event name",
                                                                                                "title": "Event name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "event"
                                                                                                    ],
                                                                                                    "title": "Event ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Event ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "keys",
                                                                                              "data"
                                                                                            ],
                                                                                            "title": "Event ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Event ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "members": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/STRUCT_MEMBER": {
                                                                                                      "allOf": [
                                                                                                        {
                                                                                                          "$ref": {
                                                                                                            "#/components/schemas/TYPED_PARAMETER": {
                                                                                                              "properties": {
                                                                                                                "name": {
                                                                                                                  "description": "The parameter's name",
                                                                                                                  "title": "Parameter name",
                                                                                                                  "type": "string"
                                                                                                                },
                                                                                                                "type": {
                                                                                                                  "description": "The parameter's type",
                                                                                                                  "title": "Parameter type",
                                                                                                                  "type": "string"
                                                                                                                }
                                                                                                              },
                                                                                                              "required": [
                                                                                                                "name",
                                                                                                                "type"
                                                                                                              ],
                                                                                                              "title": "Typed parameter",
                                                                                                              "type": "object"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Typed parameter"
                                                                                                        },
                                                                                                        {
                                                                                                          "properties": {
                                                                                                            "offset": {
                                                                                                              "description": "offset of this property within the struct",
                                                                                                              "title": "Offset",
                                                                                                              "type": "integer"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Offset",
                                                                                                          "type": "object"
                                                                                                        }
                                                                                                      ],
                                                                                                      "title": "Struct member"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Members",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The struct name",
                                                                                                "title": "Struct name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "size": {
                                                                                                "minimum": 1,
                                                                                                "title": "Size",
                                                                                                "type": "integer"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "struct"
                                                                                                    ],
                                                                                                    "title": "Struct ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Struct ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "size",
                                                                                              "members"
                                                                                            ],
                                                                                            "title": "Struct ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Struct ABI entry"
                                                                                      }
                                                                                    ],
                                                                                    "title": "Contract ABI entry"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Contract ABI",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Contract ABI"
                                                                        },
                                                                        "entry_points_by_type": {
                                                                          "properties": {
                                                                            "CONSTRUCTOR": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated constructor",
                                                                              "type": "array"
                                                                            },
                                                                            "EXTERNAL": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated external",
                                                                              "type": "array"
                                                                            },
                                                                            "L1_HANDLER": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated L1 handler",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Deprecated entry points by type",
                                                                          "type": "object"
                                                                        },
                                                                        "program": {
                                                                          "description": "A base64 representation of the compressed program code",
                                                                          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                                          "title": "Program",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "program",
                                                                        "entry_points_by_type"
                                                                      ],
                                                                      "title": "Deprecated contract class",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "description": "The class to be declared",
                                                                  "title": "Contract class"
                                                                }
                                                              },
                                                              "required": [
                                                                "contract_class"
                                                              ],
                                                              "title": "ContractClass",
                                                              "type": "object"
                                                            },
                                                            {
                                                              "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                              "properties": {
                                                                "class_hash": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The hash of the declared class",
                                                                  "title": "Class hash"
                                                                }
                                                              },
                                                              "required": [
                                                                "class_hash"
                                                              ],
                                                              "title": "ClassHash",
                                                              "type": "object"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "description": "Declare Contract Transaction V0",
                                                      "title": "Declare Contract Transaction V0"
                                                    }
                                                  },
                                                  "title": "Declare transaction V0"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/DECLARE_TXN_V1": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "nonce": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Nonce"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "description": "The address of the account contract sending the declaration transaction",
                                                              "title": "Sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "DECLARE"
                                                              ],
                                                              "title": "Declare",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x1"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "max_fee",
                                                            "version",
                                                            "signature",
                                                            "nonce"
                                                          ],
                                                          "title": "Declare txn v1",
                                                          "type": "object"
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                              "properties": {
                                                                "contract_class": {
                                                                  "$ref": {
                                                                    "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                                      "description": "The definition of a StarkNet contract class",
                                                                      "properties": {
                                                                        "abi": {
                                                                          "$ref": {
                                                                            "#/components/schemas/CONTRACT_ABI": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                                    "oneOf": [
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "inputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The function name",
                                                                                                "title": "Function name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "outputs": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "stateMutability": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                                    "enum": [
                                                                                                      "view"
                                                                                                    ],
                                                                                                    "title": "Function state mutability type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function state mutability"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "function",
                                                                                                      "l1_handler",
                                                                                                      "constructor"
                                                                                                    ],
                                                                                                    "title": "Function ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Function ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "inputs",
                                                                                              "outputs"
                                                                                            ],
                                                                                            "title": "Function ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Function ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "data": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "keys": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/TYPED_PARAMETER": {
                                                                                                      "properties": {
                                                                                                        "name": {
                                                                                                          "description": "The parameter's name",
                                                                                                          "title": "Parameter name",
                                                                                                          "type": "string"
                                                                                                        },
                                                                                                        "type": {
                                                                                                          "description": "The parameter's type",
                                                                                                          "title": "Parameter type",
                                                                                                          "type": "string"
                                                                                                        }
                                                                                                      },
                                                                                                      "required": [
                                                                                                        "name",
                                                                                                        "type"
                                                                                                      ],
                                                                                                      "title": "Typed parameter",
                                                                                                      "type": "object"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Typed parameter",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The event name",
                                                                                                "title": "Event name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "event"
                                                                                                    ],
                                                                                                    "title": "Event ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Event ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "keys",
                                                                                              "data"
                                                                                            ],
                                                                                            "title": "Event ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Event ABI entry"
                                                                                      },
                                                                                      {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                                            "properties": {
                                                                                              "members": {
                                                                                                "items": {
                                                                                                  "$ref": {
                                                                                                    "#/components/schemas/STRUCT_MEMBER": {
                                                                                                      "allOf": [
                                                                                                        {
                                                                                                          "$ref": {
                                                                                                            "#/components/schemas/TYPED_PARAMETER": {
                                                                                                              "properties": {
                                                                                                                "name": {
                                                                                                                  "description": "The parameter's name",
                                                                                                                  "title": "Parameter name",
                                                                                                                  "type": "string"
                                                                                                                },
                                                                                                                "type": {
                                                                                                                  "description": "The parameter's type",
                                                                                                                  "title": "Parameter type",
                                                                                                                  "type": "string"
                                                                                                                }
                                                                                                              },
                                                                                                              "required": [
                                                                                                                "name",
                                                                                                                "type"
                                                                                                              ],
                                                                                                              "title": "Typed parameter",
                                                                                                              "type": "object"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Typed parameter"
                                                                                                        },
                                                                                                        {
                                                                                                          "properties": {
                                                                                                            "offset": {
                                                                                                              "description": "offset of this property within the struct",
                                                                                                              "title": "Offset",
                                                                                                              "type": "integer"
                                                                                                            }
                                                                                                          },
                                                                                                          "title": "Offset",
                                                                                                          "type": "object"
                                                                                                        }
                                                                                                      ],
                                                                                                      "title": "Struct member"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "title": "Members",
                                                                                                "type": "array"
                                                                                              },
                                                                                              "name": {
                                                                                                "description": "The struct name",
                                                                                                "title": "Struct name",
                                                                                                "type": "string"
                                                                                              },
                                                                                              "size": {
                                                                                                "minimum": 1,
                                                                                                "title": "Size",
                                                                                                "type": "integer"
                                                                                              },
                                                                                              "type": {
                                                                                                "$ref": {
                                                                                                  "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                                    "enum": [
                                                                                                      "struct"
                                                                                                    ],
                                                                                                    "title": "Struct ABI type",
                                                                                                    "type": "string"
                                                                                                  }
                                                                                                },
                                                                                                "title": "Struct ABI type"
                                                                                              }
                                                                                            },
                                                                                            "required": [
                                                                                              "type",
                                                                                              "name",
                                                                                              "size",
                                                                                              "members"
                                                                                            ],
                                                                                            "title": "Struct ABI entry",
                                                                                            "type": "object"
                                                                                          }
                                                                                        },
                                                                                        "title": "Struct ABI entry"
                                                                                      }
                                                                                    ],
                                                                                    "title": "Contract ABI entry"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Contract ABI",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Contract ABI"
                                                                        },
                                                                        "entry_points_by_type": {
                                                                          "properties": {
                                                                            "CONSTRUCTOR": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated constructor",
                                                                              "type": "array"
                                                                            },
                                                                            "EXTERNAL": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated external",
                                                                              "type": "array"
                                                                            },
                                                                            "L1_HANDLER": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/NUM_AS_HEX": {
                                                                                            "description": "An integer number in hex format (0x...)",
                                                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                                                            "title": "Number as hex",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "The offset of the entry point in the program",
                                                                                        "title": "Offset"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "offset",
                                                                                      "selector"
                                                                                    ],
                                                                                    "title": "Deprecated Cairo entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Deprecated L1 handler",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "title": "Deprecated entry points by type",
                                                                          "type": "object"
                                                                        },
                                                                        "program": {
                                                                          "description": "A base64 representation of the compressed program code",
                                                                          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                                          "title": "Program",
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "program",
                                                                        "entry_points_by_type"
                                                                      ],
                                                                      "title": "Deprecated contract class",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "description": "The class to be declared",
                                                                  "title": "Contract class"
                                                                }
                                                              },
                                                              "required": [
                                                                "contract_class"
                                                              ],
                                                              "title": "ContractClass",
                                                              "type": "object"
                                                            },
                                                            {
                                                              "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                              "properties": {
                                                                "class_hash": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The hash of the declared class",
                                                                  "title": "Class hash"
                                                                }
                                                              },
                                                              "required": [
                                                                "class_hash"
                                                              ],
                                                              "title": "ClassHash",
                                                              "type": "object"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "description": "Declare Contract Transaction V1",
                                                      "title": "Declare Contract Transaction V1"
                                                    }
                                                  },
                                                  "title": "Declare transaction V1"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/DECLARE_TXN_V2": {
                                                      "allOf": [
                                                        {
                                                          "properties": {
                                                            "compiled_class_hash": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                                              "title": "Compiled class hash"
                                                            },
                                                            "max_fee": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "description": "The maximal fee that can be charged for including the transaction",
                                                              "title": "Max fee"
                                                            },
                                                            "nonce": {
                                                              "$ref": {
                                                                "#/components/schemas/FELT": {
                                                                  "description": "A field element. represented by at most 63 hex digits",
                                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                  "title": "Field element",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "title": "Nonce"
                                                            },
                                                            "sender_address": {
                                                              "$ref": {
                                                                "#/components/schemas/ADDRESS": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "title": "Address"
                                                                }
                                                              },
                                                              "description": "The address of the account contract sending the declaration transaction",
                                                              "title": "Sender address"
                                                            },
                                                            "signature": {
                                                              "$ref": {
                                                                "#/components/schemas/SIGNATURE": {
                                                                  "description": "A transaction signature",
                                                                  "items": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "title": "Signature",
                                                                  "type": "array"
                                                                }
                                                              },
                                                              "title": "Signature"
                                                            },
                                                            "type": {
                                                              "enum": [
                                                                "DECLARE"
                                                              ],
                                                              "title": "Declare",
                                                              "type": "string"
                                                            },
                                                            "version": {
                                                              "description": "Version of the transaction scheme",
                                                              "enum": [
                                                                "0x2"
                                                              ],
                                                              "title": "Version",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "sender_address",
                                                            "compiled_class_hash",
                                                            "max_fee",
                                                            "version",
                                                            "signature",
                                                            "nonce"
                                                          ],
                                                          "title": "Declare txn v2",
                                                          "type": "object"
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                                              "properties": {
                                                                "contract_class": {
                                                                  "$ref": {
                                                                    "#/components/schemas/CONTRACT_CLASS": {
                                                                      "properties": {
                                                                        "abi": {
                                                                          "description": "The class ABI, as supplied by the user declaring the class",
                                                                          "title": "ABI",
                                                                          "type": "string"
                                                                        },
                                                                        "contract_class_version": {
                                                                          "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                                          "title": "Contract class version",
                                                                          "type": "string"
                                                                        },
                                                                        "entry_points_by_type": {
                                                                          "properties": {
                                                                            "CONSTRUCTOR": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "function_idx": {
                                                                                        "description": "The index of the function in the program",
                                                                                        "title": "Function index",
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "selector",
                                                                                      "function_idx"
                                                                                    ],
                                                                                    "title": "Sierra entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "Constructor",
                                                                              "type": "array"
                                                                            },
                                                                            "EXTERNAL": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "function_idx": {
                                                                                        "description": "The index of the function in the program",
                                                                                        "title": "Function index",
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "selector",
                                                                                      "function_idx"
                                                                                    ],
                                                                                    "title": "Sierra entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "External",
                                                                              "type": "array"
                                                                            },
                                                                            "L1_HANDLER": {
                                                                              "items": {
                                                                                "$ref": {
                                                                                  "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                                    "properties": {
                                                                                      "function_idx": {
                                                                                        "description": "The index of the function in the program",
                                                                                        "title": "Function index",
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "selector": {
                                                                                        "$ref": {
                                                                                          "#/components/schemas/FELT": {
                                                                                            "description": "A field element. represented by at most 63 hex digits",
                                                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                            "title": "Field element",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "description": "A unique identifier of the entry point (function) in the program",
                                                                                        "title": "Selector"
                                                                                      }
                                                                                    },
                                                                                    "required": [
                                                                                      "selector",
                                                                                      "function_idx"
                                                                                    ],
                                                                                    "title": "Sierra entry point",
                                                                                    "type": "object"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "title": "L1 handler",
                                                                              "type": "array"
                                                                            }
                                                                          },
                                                                          "required": [
                                                                            "CONSTRUCTOR",
                                                                            "EXTERNAL",
                                                                            "L1_HANDLER"
                                                                          ],
                                                                          "title": "Entry points by type",
                                                                          "type": "object"
                                                                        },
                                                                        "sierra_program": {
                                                                          "description": "The list of Sierra instructions of which the program consists",
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FELT": {
                                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                                "title": "Field element",
                                                                                "type": "string"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Sierra program",
                                                                          "type": "array"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "sierra_program",
                                                                        "contract_class_version",
                                                                        "entry_points_by_type"
                                                                      ],
                                                                      "title": "Contract class",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "description": "The class to be declared",
                                                                  "title": "Contract class"
                                                                }
                                                              },
                                                              "required": [
                                                                "countract_class"
                                                              ],
                                                              "title": "ContractClass",
                                                              "type": "object"
                                                            },
                                                            {
                                                              "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                                              "properties": {
                                                                "class_hash": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The hash of the declared class",
                                                                  "title": "Class hash"
                                                                }
                                                              },
                                                              "required": [
                                                                "class_hash"
                                                              ],
                                                              "title": "ClassHash",
                                                              "type": "object"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "description": "Declare Contract Transaction V2",
                                                      "title": "Declare Transaction V2"
                                                    }
                                                  },
                                                  "title": "Declare transaction V2"
                                                }
                                              ],
                                              "title": "Declare transaction"
                                            }
                                          },
                                          "title": "Declare transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/DEPLOY_TXN": {
                                              "allOf": [
                                                {
                                                  "properties": {
                                                    "class_hash": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The hash of the deployed contract's class",
                                                      "title": "Class hash"
                                                    },
                                                    "constructor_calldata": {
                                                      "description": "The parameters passed to the constructor",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Constructor calldata",
                                                      "type": "array"
                                                    },
                                                    "contract_address_salt": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "The salt for the address of the deployed contract",
                                                      "title": "Contract address salt"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "DEPLOY"
                                                      ],
                                                      "title": "Deploy",
                                                      "type": "string"
                                                    },
                                                    "version": {
                                                      "$ref": {
                                                        "#/components/schemas/NUM_AS_HEX": {
                                                          "description": "An integer number in hex format (0x...)",
                                                          "pattern": "^0x[a-fA-F0-9]+$",
                                                          "title": "Number as hex",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "description": "Version of the transaction scheme",
                                                      "title": "Version"
                                                    }
                                                  },
                                                  "required": [
                                                    "version",
                                                    "type",
                                                    "constructor_calldata",
                                                    "contract_address_salt",
                                                    "class_hash"
                                                  ],
                                                  "title": "Deploy txn",
                                                  "type": "object"
                                                }
                                              ],
                                              "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                                              "title": "Deploy Contract Transaction"
                                            }
                                          },
                                          "title": "Deploy transaction"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                                              "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the deployed contract's class",
                                                  "title": "Class hash"
                                                },
                                                "constructor_calldata": {
                                                  "description": "The parameters passed to the constructor",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Constructor calldata",
                                                  "type": "array"
                                                },
                                                "contract_address_salt": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The salt for the address of the deployed contract",
                                                  "title": "Contract address salt"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DEPLOY_ACCOUNT"
                                                  ],
                                                  "title": "Deploy account",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "Version of the transaction scheme",
                                                  "title": "Version"
                                                }
                                              },
                                              "required": [
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce",
                                                "type",
                                                "contract_address_salt",
                                                "constructor_calldata",
                                                "class_hash"
                                              ],
                                              "title": "Deploy account transaction"
                                            }
                                          },
                                          "title": "Deploy account transaction"
                                        }
                                      ],
                                      "title": "Transaction"
                                    }
                                  },
                                  "title": "transaction"
                                },
                                {
                                  "properties": {
                                    "transaction_hash": {
                                      "$ref": {
                                        "#/components/schemas/TXN_HASH": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The transaction hash, as assigned in StarkNet",
                                          "title": "Transaction hash"
                                        }
                                      },
                                      "title": "transaction hash"
                                    }
                                  },
                                  "required": [
                                    "transaction_hash"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "title": "transactions in block",
                              "type": "object"
                            },
                            "title": "Transactions",
                            "type": "array"
                          }
                        },
                        "required": [
                          "transactions"
                        ],
                        "title": "Block body with transactions",
                        "type": "object"
                      }
                    },
                    "title": "Block body with transactions"
                  },
                  {
                    "properties": {
                      "parent_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "description": "The hash of this block's parent",
                        "title": "Parent hash"
                      },
                      "sequencer_address": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The StarkNet identity of the sequencer submitting this block",
                        "title": "Sequencer address"
                      },
                      "timestamp": {
                        "description": "The time in which the block was created, encoded in Unix time",
                        "minimum": 0,
                        "title": "Timestamp",
                        "type": "integer"
                      }
                    },
                    "title": "Block Info",
                    "type": "object"
                  }
                ],
                "description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
                "title": "Pending block with transactions"
              }
            },
            "title": "Pending block with transactions"
          }
        ],
        "title": "Starknet get block with txs result"
      }
    },
    "summary": "Get block information with full transactions given the block id"
  },
  "#/methods/starknet_getClass": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CLASS_HASH_NOT_FOUND": {
            "code": 28,
            "message": "Class hash not found"
          }
        }
      }
    ],
    "name": "starknet_getClass",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      },
      {
        "description": "The hash of the requested contract class",
        "name": "class_hash",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          },
          "title": "Field element"
        }
      }
    ],
    "result": {
      "description": "The contract class, if found",
      "name": "result",
      "schema": {
        "oneOf": [
          {
            "$ref": {
              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                "description": "The definition of a StarkNet contract class",
                "properties": {
                  "abi": {
                    "$ref": {
                      "#/components/schemas/CONTRACT_ABI": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                              "oneOf": [
                                {
                                  "$ref": {
                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                      "properties": {
                                        "inputs": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The function name",
                                          "title": "Function name",
                                          "type": "string"
                                        },
                                        "outputs": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "stateMutability": {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                              "enum": [
                                                "view"
                                              ],
                                              "title": "Function state mutability type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Function state mutability"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                              "enum": [
                                                "function",
                                                "l1_handler",
                                                "constructor"
                                              ],
                                              "title": "Function ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Function ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "inputs",
                                        "outputs"
                                      ],
                                      "title": "Function ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Function ABI entry"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The event name",
                                          "title": "Event name",
                                          "type": "string"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                              "enum": [
                                                "event"
                                              ],
                                              "title": "Event ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Event ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event ABI entry"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                      "properties": {
                                        "members": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/STRUCT_MEMBER": {
                                                "allOf": [
                                                  {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    },
                                                    "title": "Typed parameter"
                                                  },
                                                  {
                                                    "properties": {
                                                      "offset": {
                                                        "description": "offset of this property within the struct",
                                                        "title": "Offset",
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "title": "Offset",
                                                    "type": "object"
                                                  }
                                                ],
                                                "title": "Struct member"
                                              }
                                            }
                                          },
                                          "title": "Members",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The struct name",
                                          "title": "Struct name",
                                          "type": "string"
                                        },
                                        "size": {
                                          "minimum": 1,
                                          "title": "Size",
                                          "type": "integer"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                              "enum": [
                                                "struct"
                                              ],
                                              "title": "Struct ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Struct ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "size",
                                        "members"
                                      ],
                                      "title": "Struct ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Struct ABI entry"
                                }
                              ],
                              "title": "Contract ABI entry"
                            }
                          }
                        },
                        "title": "Contract ABI",
                        "type": "array"
                      }
                    },
                    "title": "Contract ABI"
                  },
                  "entry_points_by_type": {
                    "properties": {
                      "CONSTRUCTOR": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated constructor",
                        "type": "array"
                      },
                      "EXTERNAL": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated external",
                        "type": "array"
                      },
                      "L1_HANDLER": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated L1 handler",
                        "type": "array"
                      }
                    },
                    "title": "Deprecated entry points by type",
                    "type": "object"
                  },
                  "program": {
                    "description": "A base64 representation of the compressed program code",
                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                    "title": "Program",
                    "type": "string"
                  }
                },
                "required": [
                  "program",
                  "entry_points_by_type"
                ],
                "title": "Deprecated contract class",
                "type": "object"
              }
            },
            "title": "Deprecated contract class"
          },
          {
            "$ref": {
              "#/components/schemas/CONTRACT_CLASS": {
                "properties": {
                  "abi": {
                    "description": "The class ABI, as supplied by the user declaring the class",
                    "title": "ABI",
                    "type": "string"
                  },
                  "contract_class_version": {
                    "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                    "title": "Contract class version",
                    "type": "string"
                  },
                  "entry_points_by_type": {
                    "properties": {
                      "CONSTRUCTOR": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Constructor",
                        "type": "array"
                      },
                      "EXTERNAL": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "External",
                        "type": "array"
                      },
                      "L1_HANDLER": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "L1 handler",
                        "type": "array"
                      }
                    },
                    "required": [
                      "CONSTRUCTOR",
                      "EXTERNAL",
                      "L1_HANDLER"
                    ],
                    "title": "Entry points by type",
                    "type": "object"
                  },
                  "sierra_program": {
                    "description": "The list of Sierra instructions of which the program consists",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Sierra program",
                    "type": "array"
                  }
                },
                "required": [
                  "sierra_program",
                  "contract_class_version",
                  "entry_points_by_type"
                ],
                "title": "Contract class",
                "type": "object"
              }
            },
            "title": "Contract class"
          }
        ],
        "title": "Starknet get class result"
      }
    },
    "summary": "Get the contract class definition in the given block associated with the given hash"
  },
  "#/methods/starknet_getClassAt": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      }
    ],
    "name": "starknet_getClassAt",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      },
      {
        "description": "The address of the contract whose class definition will be returned",
        "name": "contract_address",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/ADDRESS": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "title": "Address"
            }
          },
          "title": "Address"
        }
      }
    ],
    "result": {
      "description": "The contract class",
      "name": "result",
      "schema": {
        "oneOf": [
          {
            "$ref": {
              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                "description": "The definition of a StarkNet contract class",
                "properties": {
                  "abi": {
                    "$ref": {
                      "#/components/schemas/CONTRACT_ABI": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                              "oneOf": [
                                {
                                  "$ref": {
                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                      "properties": {
                                        "inputs": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The function name",
                                          "title": "Function name",
                                          "type": "string"
                                        },
                                        "outputs": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "stateMutability": {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                              "enum": [
                                                "view"
                                              ],
                                              "title": "Function state mutability type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Function state mutability"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                              "enum": [
                                                "function",
                                                "l1_handler",
                                                "constructor"
                                              ],
                                              "title": "Function ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Function ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "inputs",
                                        "outputs"
                                      ],
                                      "title": "Function ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Function ABI entry"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The event name",
                                          "title": "Event name",
                                          "type": "string"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                              "enum": [
                                                "event"
                                              ],
                                              "title": "Event ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Event ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event ABI entry"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                      "properties": {
                                        "members": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/STRUCT_MEMBER": {
                                                "allOf": [
                                                  {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    },
                                                    "title": "Typed parameter"
                                                  },
                                                  {
                                                    "properties": {
                                                      "offset": {
                                                        "description": "offset of this property within the struct",
                                                        "title": "Offset",
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "title": "Offset",
                                                    "type": "object"
                                                  }
                                                ],
                                                "title": "Struct member"
                                              }
                                            }
                                          },
                                          "title": "Members",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The struct name",
                                          "title": "Struct name",
                                          "type": "string"
                                        },
                                        "size": {
                                          "minimum": 1,
                                          "title": "Size",
                                          "type": "integer"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                              "enum": [
                                                "struct"
                                              ],
                                              "title": "Struct ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Struct ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "size",
                                        "members"
                                      ],
                                      "title": "Struct ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Struct ABI entry"
                                }
                              ],
                              "title": "Contract ABI entry"
                            }
                          }
                        },
                        "title": "Contract ABI",
                        "type": "array"
                      }
                    },
                    "title": "Contract ABI"
                  },
                  "entry_points_by_type": {
                    "properties": {
                      "CONSTRUCTOR": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated constructor",
                        "type": "array"
                      },
                      "EXTERNAL": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated external",
                        "type": "array"
                      },
                      "L1_HANDLER": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated L1 handler",
                        "type": "array"
                      }
                    },
                    "title": "Deprecated entry points by type",
                    "type": "object"
                  },
                  "program": {
                    "description": "A base64 representation of the compressed program code",
                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                    "title": "Program",
                    "type": "string"
                  }
                },
                "required": [
                  "program",
                  "entry_points_by_type"
                ],
                "title": "Deprecated contract class",
                "type": "object"
              }
            },
            "title": "Deprecated contract class"
          },
          {
            "$ref": {
              "#/components/schemas/CONTRACT_CLASS": {
                "properties": {
                  "abi": {
                    "description": "The class ABI, as supplied by the user declaring the class",
                    "title": "ABI",
                    "type": "string"
                  },
                  "contract_class_version": {
                    "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                    "title": "Contract class version",
                    "type": "string"
                  },
                  "entry_points_by_type": {
                    "properties": {
                      "CONSTRUCTOR": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Constructor",
                        "type": "array"
                      },
                      "EXTERNAL": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "External",
                        "type": "array"
                      },
                      "L1_HANDLER": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "L1 handler",
                        "type": "array"
                      }
                    },
                    "required": [
                      "CONSTRUCTOR",
                      "EXTERNAL",
                      "L1_HANDLER"
                    ],
                    "title": "Entry points by type",
                    "type": "object"
                  },
                  "sierra_program": {
                    "description": "The list of Sierra instructions of which the program consists",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Sierra program",
                    "type": "array"
                  }
                },
                "required": [
                  "sierra_program",
                  "contract_class_version",
                  "entry_points_by_type"
                ],
                "title": "Contract class",
                "type": "object"
              }
            },
            "title": "Contract class"
          }
        ],
        "title": "Starknet get class at result"
      }
    },
    "summary": "Get the contract class definition in the given block at the given address"
  },
  "#/methods/starknet_getClassHashAt": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      }
    ],
    "name": "starknet_getClassHashAt",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      },
      {
        "description": "The address of the contract whose class hash will be returned",
        "name": "contract_address",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/ADDRESS": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "title": "Address"
            }
          },
          "title": "Address"
        }
      }
    ],
    "result": {
      "description": "The class hash of the given contract",
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Field element"
      }
    },
    "summary": "Get the contract class hash in the given block for the contract deployed at the given address"
  },
  "#/methods/starknet_getEvents": {
    "description": "Returns all event objects matching the conditions in the provided filter",
    "errors": [
      {
        "$ref": {
          "#/components/errors/PAGE_SIZE_TOO_BIG": {
            "code": 31,
            "message": "Requested page size is too big"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/INVALID_CONTINUATION_TOKEN": {
            "code": 33,
            "message": "The supplied continuation token is invalid or unknown"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/TOO_MANY_KEYS_IN_FILTER": {
            "code": 34,
            "message": "Too many keys provided in a filter"
          }
        }
      }
    ],
    "name": "starknet_getEvents",
    "params": [
      {
        "name": "filter",
        "required": true,
        "schema": {
          "allOf": [
            {
              "$ref": {
                "#/components/schemas/EVENT_FILTER": {
                  "description": "An event filter/query",
                  "properties": {
                    "address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "title": "from contract"
                    },
                    "from_block": {
                      "$ref": {
                        "#/components/schemas/BLOCK_ID": {
                          "description": "Block hash, number or tag",
                          "oneOf": [
                            {
                              "properties": {
                                "block_hash": {
                                  "$ref": {
                                    "#/components/schemas/BLOCK_HASH": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Block hash"
                                    }
                                  },
                                  "title": "Block hash"
                                }
                              },
                              "required": [
                                "block_hash"
                              ],
                              "title": "Block hash",
                              "type": "object"
                            },
                            {
                              "properties": {
                                "block_number": {
                                  "$ref": {
                                    "#/components/schemas/BLOCK_NUMBER": {
                                      "description": "The block's number (its height)",
                                      "minimum": 0,
                                      "title": "Block number",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "Block number"
                                }
                              },
                              "required": [
                                "block_number"
                              ],
                              "title": "Block number",
                              "type": "object"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/BLOCK_TAG": {
                                  "description": "A tag specifying a dynamic reference to a block",
                                  "enum": [
                                    "latest",
                                    "pending"
                                  ],
                                  "title": "Block tag",
                                  "type": "string"
                                }
                              },
                              "title": "Block tag"
                            }
                          ],
                          "title": "Block id"
                        }
                      },
                      "title": "from block"
                    },
                    "keys": {
                      "description": "The values used to filter the events",
                      "items": {
                        "description": "Per key (by position), designate the possible values to be matched for events to be returned. Empty array designates 'any' value",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Keys",
                        "type": "array"
                      },
                      "title": "Keys",
                      "type": "array"
                    },
                    "to_block": {
                      "$ref": {
                        "#/components/schemas/BLOCK_ID": {
                          "description": "Block hash, number or tag",
                          "oneOf": [
                            {
                              "properties": {
                                "block_hash": {
                                  "$ref": {
                                    "#/components/schemas/BLOCK_HASH": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Block hash"
                                    }
                                  },
                                  "title": "Block hash"
                                }
                              },
                              "required": [
                                "block_hash"
                              ],
                              "title": "Block hash",
                              "type": "object"
                            },
                            {
                              "properties": {
                                "block_number": {
                                  "$ref": {
                                    "#/components/schemas/BLOCK_NUMBER": {
                                      "description": "The block's number (its height)",
                                      "minimum": 0,
                                      "title": "Block number",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "Block number"
                                }
                              },
                              "required": [
                                "block_number"
                              ],
                              "title": "Block number",
                              "type": "object"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/BLOCK_TAG": {
                                  "description": "A tag specifying a dynamic reference to a block",
                                  "enum": [
                                    "latest",
                                    "pending"
                                  ],
                                  "title": "Block tag",
                                  "type": "string"
                                }
                              },
                              "title": "Block tag"
                            }
                          ],
                          "title": "Block id"
                        }
                      },
                      "title": "to block"
                    }
                  },
                  "required": [],
                  "title": "Event filter",
                  "type": "object"
                }
              },
              "title": "Event filter"
            },
            {
              "$ref": {
                "#/components/schemas/RESULT_PAGE_REQUEST": {
                  "properties": {
                    "chunk_size": {
                      "minimum": 1,
                      "title": "Chunk size",
                      "type": "integer"
                    },
                    "continuation_token": {
                      "description": "The token returned from the previous query. If no token is provided the first page is returned.",
                      "title": "Continuation token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "chunk_size"
                  ],
                  "title": "Result page request",
                  "type": "object"
                }
              },
              "title": "Result page request"
            }
          ],
          "title": "Events request"
        },
        "summary": "The conditions used to filter the returned events"
      }
    ],
    "result": {
      "description": "All the event objects matching the filter",
      "name": "events",
      "schema": {
        "$ref": {
          "#/components/schemas/EVENTS_CHUNK": {
            "properties": {
              "continuation_token": {
                "description": "Use this token in a subsequent query to obtain the next page. Should not appear if there are no more pages.",
                "title": "Continuation token",
                "type": "string"
              },
              "events": {
                "items": {
                  "$ref": {
                    "#/components/schemas/EMITTED_EVENT": {
                      "allOf": [
                        {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          },
                          "description": "The event information",
                          "title": "Event"
                        },
                        {
                          "description": "The event emission information",
                          "properties": {
                            "block_hash": {
                              "$ref": {
                                "#/components/schemas/BLOCK_HASH": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Block hash"
                                }
                              },
                              "description": "The hash of the block in which the event was emitted",
                              "title": "Block hash"
                            },
                            "block_number": {
                              "$ref": {
                                "#/components/schemas/BLOCK_NUMBER": {
                                  "description": "The block's number (its height)",
                                  "minimum": 0,
                                  "title": "Block number",
                                  "type": "integer"
                                }
                              },
                              "description": "The number of the block in which the event was emitted",
                              "title": "Block number"
                            },
                            "transaction_hash": {
                              "$ref": {
                                "#/components/schemas/TXN_HASH": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The transaction hash, as assigned in StarkNet",
                                  "title": "Transaction hash"
                                }
                              },
                              "description": "The transaction that emitted the event",
                              "title": "Transaction hash"
                            }
                          },
                          "required": [
                            "block_hash",
                            "block_number",
                            "transaction_hash"
                          ],
                          "title": "Event context",
                          "type": "object"
                        }
                      ],
                      "description": "Event information decorated with metadata on where it was emitted / An event emitted as a result of transaction execution",
                      "title": "Emitted event"
                    }
                  }
                },
                "title": "Matching Events",
                "type": "array"
              }
            },
            "required": [
              "events"
            ],
            "title": "Events chunk",
            "type": "object"
          }
        },
        "title": "Events chunk"
      }
    },
    "summary": "Returns all events matching the given filter"
  },
  "#/methods/starknet_getNonce": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      }
    ],
    "name": "starknet_getNonce",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      },
      {
        "description": "The address of the contract whose nonce we're seeking",
        "name": "contract_address",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/ADDRESS": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "title": "Address"
            }
          },
          "title": "Address"
        }
      }
    ],
    "result": {
      "description": "The contract's nonce at the requested state",
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Field element"
      }
    },
    "summary": "Get the nonce associated with the given address in the given block"
  },
  "#/methods/starknet_getStateUpdate": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_getStateUpdate",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "The information about the state update of the requested block",
      "name": "result",
      "schema": {
        "oneOf": [
          {
            "$ref": {
              "#/components/schemas/STATE_UPDATE": {
                "allOf": [
                  {
                    "properties": {
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "new_root": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The new global state root",
                        "title": "New root"
                      }
                    },
                    "required": [
                      "block_hash",
                      "new_root"
                    ],
                    "title": "Block info",
                    "type": "object"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/PENDING_STATE_UPDATE": {
                        "description": "Pending state update",
                        "properties": {
                          "old_root": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The previous global state root",
                            "title": "Old root"
                          },
                          "state_diff": {
                            "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
                            "properties": {
                              "declared_classes": {
                                "items": {
                                  "description": "The declared class hash and compiled class hash",
                                  "properties": {
                                    "class_hash": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The hash of the declared class",
                                      "title": "Class hash"
                                    },
                                    "compiled_class_hash": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The Cairo assembly hash corresponding to the declared class",
                                      "title": "Compiled class hash"
                                    }
                                  },
                                  "title": "New classes",
                                  "type": "object"
                                },
                                "title": "Declared classes",
                                "type": "array"
                              },
                              "deployed_contracts": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
                                      "properties": {
                                        "address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the contract",
                                          "title": "Address"
                                        },
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the contract code",
                                          "title": "Class hash"
                                        }
                                      },
                                      "required": [
                                        "address",
                                        "class_hash"
                                      ],
                                      "title": "Deployed contract item",
                                      "type": "object"
                                    }
                                  },
                                  "description": "A new contract deployed as part of the state update"
                                },
                                "title": "Deployed contracts",
                                "type": "array"
                              },
                              "deprecated_declared_classes": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The hash of the declared class"
                                },
                                "title": "Deprecated declared classes",
                                "type": "array"
                              },
                              "nonces": {
                                "items": {
                                  "description": "The updated nonce per contract address",
                                  "properties": {
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "description": "The address of the contract",
                                      "title": "Contract address"
                                    },
                                    "nonce": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The nonce for the given address at the end of the block",
                                      "title": "Nonce"
                                    }
                                  },
                                  "title": "Nonce update",
                                  "type": "object"
                                },
                                "title": "Nonces",
                                "type": "array"
                              },
                              "replaced_classes": {
                                "items": {
                                  "description": "The list of contracts whose class was replaced",
                                  "properties": {
                                    "class_hash": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The new class hash",
                                      "title": "Class hash"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "description": "The address of the contract whose class was replaced",
                                      "title": "Contract address"
                                    }
                                  },
                                  "title": "Replaced class",
                                  "type": "object"
                                },
                                "title": "Replaced classes",
                                "type": "array"
                              },
                              "storage_diffs": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
                                      "properties": {
                                        "address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The contract address for which the storage changed",
                                          "title": "Address"
                                        },
                                        "storage_entries": {
                                          "description": "The changes in the storage of the contract",
                                          "items": {
                                            "properties": {
                                              "key": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                },
                                                "description": "The key of the changed value",
                                                "title": "Key"
                                              },
                                              "value": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                },
                                                "description": "The new value applied to the given address",
                                                "title": "Value"
                                              }
                                            },
                                            "title": "Storage diff item",
                                            "type": "object"
                                          },
                                          "title": "Storage entries",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "address",
                                        "storage_entries"
                                      ],
                                      "title": "Contract storage diff item",
                                      "type": "object"
                                    }
                                  },
                                  "description": "The changes in the storage per contract address"
                                },
                                "title": "Storage diffs",
                                "type": "array"
                              }
                            },
                            "required": [
                              "storage_diffs",
                              "deprecated_declared_classes",
                              "declared_classes",
                              "replaced_classes",
                              "deployed_contracts",
                              "nonces"
                            ],
                            "title": "State diff",
                            "type": "object"
                          }
                        },
                        "required": [
                          "old_root",
                          "state_diff"
                        ],
                        "title": "Pending state update",
                        "type": "object"
                      }
                    },
                    "title": "Pending state update"
                  }
                ],
                "title": "State update",
                "type": "object"
              }
            },
            "title": "State update"
          },
          {
            "$ref": {
              "#/components/schemas/PENDING_STATE_UPDATE": {
                "description": "Pending state update",
                "properties": {
                  "old_root": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The previous global state root",
                    "title": "Old root"
                  },
                  "state_diff": {
                    "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
                    "properties": {
                      "declared_classes": {
                        "items": {
                          "description": "The declared class hash and compiled class hash",
                          "properties": {
                            "class_hash": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The hash of the declared class",
                              "title": "Class hash"
                            },
                            "compiled_class_hash": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The Cairo assembly hash corresponding to the declared class",
                              "title": "Compiled class hash"
                            }
                          },
                          "title": "New classes",
                          "type": "object"
                        },
                        "title": "Declared classes",
                        "type": "array"
                      },
                      "deployed_contracts": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
                              "properties": {
                                "address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the contract",
                                  "title": "Address"
                                },
                                "class_hash": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The hash of the contract code",
                                  "title": "Class hash"
                                }
                              },
                              "required": [
                                "address",
                                "class_hash"
                              ],
                              "title": "Deployed contract item",
                              "type": "object"
                            }
                          },
                          "description": "A new contract deployed as part of the state update"
                        },
                        "title": "Deployed contracts",
                        "type": "array"
                      },
                      "deprecated_declared_classes": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The hash of the declared class"
                        },
                        "title": "Deprecated declared classes",
                        "type": "array"
                      },
                      "nonces": {
                        "items": {
                          "description": "The updated nonce per contract address",
                          "properties": {
                            "contract_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "description": "The address of the contract",
                              "title": "Contract address"
                            },
                            "nonce": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The nonce for the given address at the end of the block",
                              "title": "Nonce"
                            }
                          },
                          "title": "Nonce update",
                          "type": "object"
                        },
                        "title": "Nonces",
                        "type": "array"
                      },
                      "replaced_classes": {
                        "items": {
                          "description": "The list of contracts whose class was replaced",
                          "properties": {
                            "class_hash": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The new class hash",
                              "title": "Class hash"
                            },
                            "contract_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "description": "The address of the contract whose class was replaced",
                              "title": "Contract address"
                            }
                          },
                          "title": "Replaced class",
                          "type": "object"
                        },
                        "title": "Replaced classes",
                        "type": "array"
                      },
                      "storage_diffs": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
                              "properties": {
                                "address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The contract address for which the storage changed",
                                  "title": "Address"
                                },
                                "storage_entries": {
                                  "description": "The changes in the storage of the contract",
                                  "items": {
                                    "properties": {
                                      "key": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The key of the changed value",
                                        "title": "Key"
                                      },
                                      "value": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The new value applied to the given address",
                                        "title": "Value"
                                      }
                                    },
                                    "title": "Storage diff item",
                                    "type": "object"
                                  },
                                  "title": "Storage entries",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "address",
                                "storage_entries"
                              ],
                              "title": "Contract storage diff item",
                              "type": "object"
                            }
                          },
                          "description": "The changes in the storage per contract address"
                        },
                        "title": "Storage diffs",
                        "type": "array"
                      }
                    },
                    "required": [
                      "storage_diffs",
                      "deprecated_declared_classes",
                      "declared_classes",
                      "replaced_classes",
                      "deployed_contracts",
                      "nonces"
                    ],
                    "title": "State diff",
                    "type": "object"
                  }
                },
                "required": [
                  "old_root",
                  "state_diff"
                ],
                "title": "Pending state update",
                "type": "object"
              }
            },
            "title": "Pending state update"
          }
        ],
        "title": "Starknet get state update result"
      }
    },
    "summary": "Get the information about the result of executing the requested block"
  },
  "#/methods/starknet_getStorageAt": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/CONTRACT_NOT_FOUND": {
            "code": 20,
            "message": "Contract not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      }
    ],
    "name": "starknet_getStorageAt",
    "params": [
      {
        "description": "The address of the contract to read from",
        "name": "contract_address",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/ADDRESS": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "title": "Address"
            }
          },
          "title": "Address"
        },
        "summary": "The address of the contract to read from"
      },
      {
        "description": "The key to the storage value for the given contract",
        "name": "key",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/STORAGE_KEY": {
              "$comment": "A storage key, represented as a string of hex digits",
              "description": "A storage key. Represented as up to 62 hex digits, 3 bits, and 5 leading zeroes.",
              "pattern": "^0x0[0-7]{1}[a-fA-F0-9]{0,62}$",
              "title": "Storage key",
              "type": "string"
            }
          },
          "title": "Storage key"
        },
        "summary": "The key to the storage value for the given contract"
      },
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      }
    ],
    "result": {
      "description": "The value at the given key for the given contract. 0 if no value is found",
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Field element"
      },
      "summary": "The value at the given key for the given contract."
    },
    "summary": "Get the value of the storage at the given address and key"
  },
  "#/methods/starknet_getTransactionByBlockIdAndIndex": {
    "description": "Get the details of the transaction given by the identified block and index in that block. If no transaction is found, null is returned.",
    "errors": [
      {
        "$ref": {
          "#/components/errors/BLOCK_NOT_FOUND": {
            "code": 24,
            "message": "Block not found"
          }
        }
      },
      {
        "$ref": {
          "#/components/errors/INVALID_TXN_INDEX": {
            "code": 27,
            "message": "Invalid transaction index in a block"
          }
        }
      }
    ],
    "name": "starknet_getTransactionByBlockIdAndIndex",
    "params": [
      {
        "description": "The hash of the requested block, or number (height) of the requested block, or a block tag",
        "name": "block_id",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/BLOCK_ID": {
              "description": "Block hash, number or tag",
              "oneOf": [
                {
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "title": "Block hash"
                    }
                  },
                  "required": [
                    "block_hash"
                  ],
                  "title": "Block hash",
                  "type": "object"
                },
                {
                  "properties": {
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "title": "Block number"
                    }
                  },
                  "required": [
                    "block_number"
                  ],
                  "title": "Block number",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/BLOCK_TAG": {
                      "description": "A tag specifying a dynamic reference to a block",
                      "enum": [
                        "latest",
                        "pending"
                      ],
                      "title": "Block tag",
                      "type": "string"
                    }
                  },
                  "title": "Block tag"
                }
              ],
              "title": "Block id"
            }
          },
          "title": "Block id"
        }
      },
      {
        "name": "index",
        "required": true,
        "schema": {
          "minimum": 0,
          "title": "Index",
          "type": "integer"
        },
        "summary": "The index in the block to search for the transaction"
      }
    ],
    "result": {
      "name": "transactionResult",
      "schema": {
        "allOf": [
          {
            "$ref": {
              "#/components/schemas/TXN": {
                "description": "The transaction schema, as it appears inside a block",
                "oneOf": [
                  {
                    "$ref": {
                      "#/components/schemas/INVOKE_TXN": {
                        "description": "Initiate a transaction from an account",
                        "oneOf": [
                          {
                            "$ref": {
                              "#/components/schemas/INVOKE_TXN_V0": {
                                "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                "properties": {
                                  "calldata": {
                                    "description": "The parameters passed to the function",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "Calldata",
                                    "type": "array"
                                  },
                                  "contract_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "title": "Contract address"
                                  },
                                  "entry_point_selector": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Entry point selector"
                                  },
                                  "max_fee": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The maximal fee that can be charged for including the transaction",
                                    "title": "Max fee"
                                  },
                                  "signature": {
                                    "$ref": {
                                      "#/components/schemas/SIGNATURE": {
                                        "description": "A transaction signature",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Signature",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Signature"
                                  },
                                  "type": {
                                    "enum": [
                                      "INVOKE"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the transaction scheme",
                                    "enum": [
                                      "0x0"
                                    ],
                                    "title": "Version",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "contract_address",
                                  "entry_point_selector",
                                  "calldata",
                                  "max_fee",
                                  "version",
                                  "signature"
                                ],
                                "title": "Invoke transaction V0"
                              }
                            },
                            "title": "Invoke transaction V0"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/INVOKE_TXN_V1": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "calldata": {
                                        "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "calldata",
                                        "type": "array"
                                      },
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "nonce": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Nonce"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "title": "sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "INVOKE"
                                        ],
                                        "title": "Type",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x1"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "calldata",
                                      "max_fee",
                                      "version",
                                      "signature",
                                      "nonce"
                                    ],
                                    "type": "object"
                                  }
                                ],
                                "description": "initiates a transaction from a given account",
                                "title": "Invoke transaction V1"
                              }
                            },
                            "title": "Invoke transaction V1"
                          }
                        ],
                        "title": "Invoke transaction"
                      }
                    },
                    "title": "Invoke transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/L1_HANDLER_TXN": {
                        "allOf": [
                          {
                            "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                            "properties": {
                              "nonce": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                "title": "Nonce"
                              },
                              "type": {
                                "enum": [
                                  "L1_HANDLER"
                                ],
                                "title": "type",
                                "type": "string"
                              },
                              "version": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "Version of the transaction scheme",
                                "title": "Version"
                              }
                            },
                            "required": [
                              "version",
                              "type",
                              "nonce"
                            ],
                            "title": "L1 handler transaction",
                            "type": "object"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/FUNCTION_CALL": {
                                "description": "Function call information",
                                "properties": {
                                  "calldata": {
                                    "description": "The parameters passed to the function",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "Calldata",
                                    "type": "array"
                                  },
                                  "contract_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "title": "Contract address"
                                  },
                                  "entry_point_selector": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Entry point selector"
                                  }
                                },
                                "required": [
                                  "contract_address",
                                  "entry_point_selector",
                                  "calldata"
                                ],
                                "title": "Function call",
                                "type": "object"
                              }
                            },
                            "title": "Function call"
                          }
                        ],
                        "title": "L1 Handler transaction"
                      }
                    },
                    "title": "L1 handler transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/DECLARE_TXN": {
                        "oneOf": [
                          {
                            "$ref": {
                              "#/components/schemas/DECLARE_TXN_V0": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "description": "The address of the account contract sending the declaration transaction",
                                        "title": "Sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "DECLARE"
                                        ],
                                        "title": "Declare",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x0"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "max_fee",
                                      "version",
                                      "signature"
                                    ],
                                    "title": "Declare txn v0",
                                    "type": "object"
                                  },
                                  {
                                    "oneOf": [
                                      {
                                        "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                        "properties": {
                                          "contract_class": {
                                            "$ref": {
                                              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                "description": "The definition of a StarkNet contract class",
                                                "properties": {
                                                  "abi": {
                                                    "$ref": {
                                                      "#/components/schemas/CONTRACT_ABI": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                              "oneOf": [
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "inputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The function name",
                                                                          "title": "Function name",
                                                                          "type": "string"
                                                                        },
                                                                        "outputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "stateMutability": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                              "enum": [
                                                                                "view"
                                                                              ],
                                                                              "title": "Function state mutability type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function state mutability"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                              "enum": [
                                                                                "function",
                                                                                "l1_handler",
                                                                                "constructor"
                                                                              ],
                                                                              "title": "Function ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "inputs",
                                                                        "outputs"
                                                                      ],
                                                                      "title": "Function ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Function ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "data": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "keys": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The event name",
                                                                          "title": "Event name",
                                                                          "type": "string"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "event"
                                                                              ],
                                                                              "title": "Event ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Event ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "keys",
                                                                        "data"
                                                                      ],
                                                                      "title": "Event ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Event ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "members": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_MEMBER": {
                                                                                "allOf": [
                                                                                  {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                                                        "properties": {
                                                                                          "name": {
                                                                                            "description": "The parameter's name",
                                                                                            "title": "Parameter name",
                                                                                            "type": "string"
                                                                                          },
                                                                                          "type": {
                                                                                            "description": "The parameter's type",
                                                                                            "title": "Parameter type",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "required": [
                                                                                          "name",
                                                                                          "type"
                                                                                        ],
                                                                                        "title": "Typed parameter",
                                                                                        "type": "object"
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter"
                                                                                  },
                                                                                  {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "description": "offset of this property within the struct",
                                                                                        "title": "Offset",
                                                                                        "type": "integer"
                                                                                      }
                                                                                    },
                                                                                    "title": "Offset",
                                                                                    "type": "object"
                                                                                  }
                                                                                ],
                                                                                "title": "Struct member"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Members",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The struct name",
                                                                          "title": "Struct name",
                                                                          "type": "string"
                                                                        },
                                                                        "size": {
                                                                          "minimum": 1,
                                                                          "title": "Size",
                                                                          "type": "integer"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "struct"
                                                                              ],
                                                                              "title": "Struct ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Struct ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "size",
                                                                        "members"
                                                                      ],
                                                                      "title": "Struct ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Struct ABI entry"
                                                                }
                                                              ],
                                                              "title": "Contract ABI entry"
                                                            }
                                                          }
                                                        },
                                                        "title": "Contract ABI",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Contract ABI"
                                                  },
                                                  "entry_points_by_type": {
                                                    "properties": {
                                                      "CONSTRUCTOR": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated constructor",
                                                        "type": "array"
                                                      },
                                                      "EXTERNAL": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated external",
                                                        "type": "array"
                                                      },
                                                      "L1_HANDLER": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated L1 handler",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Deprecated entry points by type",
                                                    "type": "object"
                                                  },
                                                  "program": {
                                                    "description": "A base64 representation of the compressed program code",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                    "title": "Program",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "program",
                                                  "entry_points_by_type"
                                                ],
                                                "title": "Deprecated contract class",
                                                "type": "object"
                                              }
                                            },
                                            "description": "The class to be declared",
                                            "title": "Contract class"
                                          }
                                        },
                                        "required": [
                                          "contract_class"
                                        ],
                                        "title": "ContractClass",
                                        "type": "object"
                                      },
                                      {
                                        "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                        "properties": {
                                          "class_hash": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The hash of the declared class",
                                            "title": "Class hash"
                                          }
                                        },
                                        "required": [
                                          "class_hash"
                                        ],
                                        "title": "ClassHash",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                ],
                                "description": "Declare Contract Transaction V0",
                                "title": "Declare Contract Transaction V0"
                              }
                            },
                            "title": "Declare transaction V0"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/DECLARE_TXN_V1": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "nonce": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Nonce"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "description": "The address of the account contract sending the declaration transaction",
                                        "title": "Sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "DECLARE"
                                        ],
                                        "title": "Declare",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x1"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "max_fee",
                                      "version",
                                      "signature",
                                      "nonce"
                                    ],
                                    "title": "Declare txn v1",
                                    "type": "object"
                                  },
                                  {
                                    "oneOf": [
                                      {
                                        "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                        "properties": {
                                          "contract_class": {
                                            "$ref": {
                                              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                "description": "The definition of a StarkNet contract class",
                                                "properties": {
                                                  "abi": {
                                                    "$ref": {
                                                      "#/components/schemas/CONTRACT_ABI": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                              "oneOf": [
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "inputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The function name",
                                                                          "title": "Function name",
                                                                          "type": "string"
                                                                        },
                                                                        "outputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "stateMutability": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                              "enum": [
                                                                                "view"
                                                                              ],
                                                                              "title": "Function state mutability type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function state mutability"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                              "enum": [
                                                                                "function",
                                                                                "l1_handler",
                                                                                "constructor"
                                                                              ],
                                                                              "title": "Function ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "inputs",
                                                                        "outputs"
                                                                      ],
                                                                      "title": "Function ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Function ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "data": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "keys": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The event name",
                                                                          "title": "Event name",
                                                                          "type": "string"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "event"
                                                                              ],
                                                                              "title": "Event ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Event ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "keys",
                                                                        "data"
                                                                      ],
                                                                      "title": "Event ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Event ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "members": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_MEMBER": {
                                                                                "allOf": [
                                                                                  {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                                                        "properties": {
                                                                                          "name": {
                                                                                            "description": "The parameter's name",
                                                                                            "title": "Parameter name",
                                                                                            "type": "string"
                                                                                          },
                                                                                          "type": {
                                                                                            "description": "The parameter's type",
                                                                                            "title": "Parameter type",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "required": [
                                                                                          "name",
                                                                                          "type"
                                                                                        ],
                                                                                        "title": "Typed parameter",
                                                                                        "type": "object"
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter"
                                                                                  },
                                                                                  {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "description": "offset of this property within the struct",
                                                                                        "title": "Offset",
                                                                                        "type": "integer"
                                                                                      }
                                                                                    },
                                                                                    "title": "Offset",
                                                                                    "type": "object"
                                                                                  }
                                                                                ],
                                                                                "title": "Struct member"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Members",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The struct name",
                                                                          "title": "Struct name",
                                                                          "type": "string"
                                                                        },
                                                                        "size": {
                                                                          "minimum": 1,
                                                                          "title": "Size",
                                                                          "type": "integer"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "struct"
                                                                              ],
                                                                              "title": "Struct ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Struct ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "size",
                                                                        "members"
                                                                      ],
                                                                      "title": "Struct ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Struct ABI entry"
                                                                }
                                                              ],
                                                              "title": "Contract ABI entry"
                                                            }
                                                          }
                                                        },
                                                        "title": "Contract ABI",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Contract ABI"
                                                  },
                                                  "entry_points_by_type": {
                                                    "properties": {
                                                      "CONSTRUCTOR": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated constructor",
                                                        "type": "array"
                                                      },
                                                      "EXTERNAL": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated external",
                                                        "type": "array"
                                                      },
                                                      "L1_HANDLER": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated L1 handler",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Deprecated entry points by type",
                                                    "type": "object"
                                                  },
                                                  "program": {
                                                    "description": "A base64 representation of the compressed program code",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                    "title": "Program",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "program",
                                                  "entry_points_by_type"
                                                ],
                                                "title": "Deprecated contract class",
                                                "type": "object"
                                              }
                                            },
                                            "description": "The class to be declared",
                                            "title": "Contract class"
                                          }
                                        },
                                        "required": [
                                          "contract_class"
                                        ],
                                        "title": "ContractClass",
                                        "type": "object"
                                      },
                                      {
                                        "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                        "properties": {
                                          "class_hash": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The hash of the declared class",
                                            "title": "Class hash"
                                          }
                                        },
                                        "required": [
                                          "class_hash"
                                        ],
                                        "title": "ClassHash",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                ],
                                "description": "Declare Contract Transaction V1",
                                "title": "Declare Contract Transaction V1"
                              }
                            },
                            "title": "Declare transaction V1"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/DECLARE_TXN_V2": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "compiled_class_hash": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                        "title": "Compiled class hash"
                                      },
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "nonce": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Nonce"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "description": "The address of the account contract sending the declaration transaction",
                                        "title": "Sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "DECLARE"
                                        ],
                                        "title": "Declare",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x2"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "compiled_class_hash",
                                      "max_fee",
                                      "version",
                                      "signature",
                                      "nonce"
                                    ],
                                    "title": "Declare txn v2",
                                    "type": "object"
                                  },
                                  {
                                    "oneOf": [
                                      {
                                        "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                        "properties": {
                                          "contract_class": {
                                            "$ref": {
                                              "#/components/schemas/CONTRACT_CLASS": {
                                                "properties": {
                                                  "abi": {
                                                    "description": "The class ABI, as supplied by the user declaring the class",
                                                    "title": "ABI",
                                                    "type": "string"
                                                  },
                                                  "contract_class_version": {
                                                    "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                    "title": "Contract class version",
                                                    "type": "string"
                                                  },
                                                  "entry_points_by_type": {
                                                    "properties": {
                                                      "CONSTRUCTOR": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                              "properties": {
                                                                "function_idx": {
                                                                  "description": "The index of the function in the program",
                                                                  "title": "Function index",
                                                                  "type": "integer"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "selector",
                                                                "function_idx"
                                                              ],
                                                              "title": "Sierra entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Constructor",
                                                        "type": "array"
                                                      },
                                                      "EXTERNAL": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                              "properties": {
                                                                "function_idx": {
                                                                  "description": "The index of the function in the program",
                                                                  "title": "Function index",
                                                                  "type": "integer"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "selector",
                                                                "function_idx"
                                                              ],
                                                              "title": "Sierra entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "External",
                                                        "type": "array"
                                                      },
                                                      "L1_HANDLER": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                              "properties": {
                                                                "function_idx": {
                                                                  "description": "The index of the function in the program",
                                                                  "title": "Function index",
                                                                  "type": "integer"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "selector",
                                                                "function_idx"
                                                              ],
                                                              "title": "Sierra entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "L1 handler",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "required": [
                                                      "CONSTRUCTOR",
                                                      "EXTERNAL",
                                                      "L1_HANDLER"
                                                    ],
                                                    "title": "Entry points by type",
                                                    "type": "object"
                                                  },
                                                  "sierra_program": {
                                                    "description": "The list of Sierra instructions of which the program consists",
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "title": "Sierra program",
                                                    "type": "array"
                                                  }
                                                },
                                                "required": [
                                                  "sierra_program",
                                                  "contract_class_version",
                                                  "entry_points_by_type"
                                                ],
                                                "title": "Contract class",
                                                "type": "object"
                                              }
                                            },
                                            "description": "The class to be declared",
                                            "title": "Contract class"
                                          }
                                        },
                                        "required": [
                                          "countract_class"
                                        ],
                                        "title": "ContractClass",
                                        "type": "object"
                                      },
                                      {
                                        "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                        "properties": {
                                          "class_hash": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The hash of the declared class",
                                            "title": "Class hash"
                                          }
                                        },
                                        "required": [
                                          "class_hash"
                                        ],
                                        "title": "ClassHash",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                ],
                                "description": "Declare Contract Transaction V2",
                                "title": "Declare Transaction V2"
                              }
                            },
                            "title": "Declare transaction V2"
                          }
                        ],
                        "title": "Declare transaction"
                      }
                    },
                    "title": "Declare transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/DEPLOY_TXN": {
                        "allOf": [
                          {
                            "properties": {
                              "class_hash": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The hash of the deployed contract's class",
                                "title": "Class hash"
                              },
                              "constructor_calldata": {
                                "description": "The parameters passed to the constructor",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Constructor calldata",
                                "type": "array"
                              },
                              "contract_address_salt": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The salt for the address of the deployed contract",
                                "title": "Contract address salt"
                              },
                              "type": {
                                "enum": [
                                  "DEPLOY"
                                ],
                                "title": "Deploy",
                                "type": "string"
                              },
                              "version": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "Version of the transaction scheme",
                                "title": "Version"
                              }
                            },
                            "required": [
                              "version",
                              "type",
                              "constructor_calldata",
                              "contract_address_salt",
                              "class_hash"
                            ],
                            "title": "Deploy txn",
                            "type": "object"
                          }
                        ],
                        "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                        "title": "Deploy Contract Transaction"
                      }
                    },
                    "title": "Deploy transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                        "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                        "properties": {
                          "class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the deployed contract's class",
                            "title": "Class hash"
                          },
                          "constructor_calldata": {
                            "description": "The parameters passed to the constructor",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Constructor calldata",
                            "type": "array"
                          },
                          "contract_address_salt": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The salt for the address of the deployed contract",
                            "title": "Contract address salt"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DEPLOY_ACCOUNT"
                            ],
                            "title": "Deploy account",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "type",
                          "contract_address_salt",
                          "constructor_calldata",
                          "class_hash"
                        ],
                        "title": "Deploy account transaction"
                      }
                    },
                    "title": "Deploy account transaction"
                  }
                ],
                "title": "Transaction"
              }
            }
          },
          {
            "properties": {
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "title": "transaction hash"
              }
            },
            "required": [
              "transaction_hash"
            ],
            "type": "object"
          }
        ],
        "title": "Transaction"
      }
    },
    "summary": "Get the details of a transaction by a given block id and index"
  },
  "#/methods/starknet_getTransactionByHash": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/TXN_HASH_NOT_FOUND": {
            "code": 29,
            "message": "Transaction hash not found"
          }
        }
      }
    ],
    "name": "starknet_getTransactionByHash",
    "paramStructure": "by-name",
    "params": [
      {
        "name": "transaction_hash",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/TXN_HASH": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The transaction hash, as assigned in StarkNet",
              "title": "Transaction hash"
            }
          },
          "title": "Transaction hash"
        },
        "summary": "The hash of the requested transaction"
      }
    ],
    "result": {
      "name": "result",
      "schema": {
        "allOf": [
          {
            "$ref": {
              "#/components/schemas/TXN": {
                "description": "The transaction schema, as it appears inside a block",
                "oneOf": [
                  {
                    "$ref": {
                      "#/components/schemas/INVOKE_TXN": {
                        "description": "Initiate a transaction from an account",
                        "oneOf": [
                          {
                            "$ref": {
                              "#/components/schemas/INVOKE_TXN_V0": {
                                "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                "properties": {
                                  "calldata": {
                                    "description": "The parameters passed to the function",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "Calldata",
                                    "type": "array"
                                  },
                                  "contract_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "title": "Contract address"
                                  },
                                  "entry_point_selector": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Entry point selector"
                                  },
                                  "max_fee": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The maximal fee that can be charged for including the transaction",
                                    "title": "Max fee"
                                  },
                                  "signature": {
                                    "$ref": {
                                      "#/components/schemas/SIGNATURE": {
                                        "description": "A transaction signature",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "Signature",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Signature"
                                  },
                                  "type": {
                                    "enum": [
                                      "INVOKE"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the transaction scheme",
                                    "enum": [
                                      "0x0"
                                    ],
                                    "title": "Version",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "contract_address",
                                  "entry_point_selector",
                                  "calldata",
                                  "max_fee",
                                  "version",
                                  "signature"
                                ],
                                "title": "Invoke transaction V0"
                              }
                            },
                            "title": "Invoke transaction V0"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/INVOKE_TXN_V1": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "calldata": {
                                        "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "title": "calldata",
                                        "type": "array"
                                      },
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "nonce": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Nonce"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "title": "sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "INVOKE"
                                        ],
                                        "title": "Type",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x1"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "calldata",
                                      "max_fee",
                                      "version",
                                      "signature",
                                      "nonce"
                                    ],
                                    "type": "object"
                                  }
                                ],
                                "description": "initiates a transaction from a given account",
                                "title": "Invoke transaction V1"
                              }
                            },
                            "title": "Invoke transaction V1"
                          }
                        ],
                        "title": "Invoke transaction"
                      }
                    },
                    "title": "Invoke transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/L1_HANDLER_TXN": {
                        "allOf": [
                          {
                            "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                            "properties": {
                              "nonce": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                "title": "Nonce"
                              },
                              "type": {
                                "enum": [
                                  "L1_HANDLER"
                                ],
                                "title": "type",
                                "type": "string"
                              },
                              "version": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "Version of the transaction scheme",
                                "title": "Version"
                              }
                            },
                            "required": [
                              "version",
                              "type",
                              "nonce"
                            ],
                            "title": "L1 handler transaction",
                            "type": "object"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/FUNCTION_CALL": {
                                "description": "Function call information",
                                "properties": {
                                  "calldata": {
                                    "description": "The parameters passed to the function",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "Calldata",
                                    "type": "array"
                                  },
                                  "contract_address": {
                                    "$ref": {
                                      "#/components/schemas/ADDRESS": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Address"
                                      }
                                    },
                                    "title": "Contract address"
                                  },
                                  "entry_point_selector": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Entry point selector"
                                  }
                                },
                                "required": [
                                  "contract_address",
                                  "entry_point_selector",
                                  "calldata"
                                ],
                                "title": "Function call",
                                "type": "object"
                              }
                            },
                            "title": "Function call"
                          }
                        ],
                        "title": "L1 Handler transaction"
                      }
                    },
                    "title": "L1 handler transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/DECLARE_TXN": {
                        "oneOf": [
                          {
                            "$ref": {
                              "#/components/schemas/DECLARE_TXN_V0": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "description": "The address of the account contract sending the declaration transaction",
                                        "title": "Sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "DECLARE"
                                        ],
                                        "title": "Declare",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x0"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "max_fee",
                                      "version",
                                      "signature"
                                    ],
                                    "title": "Declare txn v0",
                                    "type": "object"
                                  },
                                  {
                                    "oneOf": [
                                      {
                                        "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                        "properties": {
                                          "contract_class": {
                                            "$ref": {
                                              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                "description": "The definition of a StarkNet contract class",
                                                "properties": {
                                                  "abi": {
                                                    "$ref": {
                                                      "#/components/schemas/CONTRACT_ABI": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                              "oneOf": [
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "inputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The function name",
                                                                          "title": "Function name",
                                                                          "type": "string"
                                                                        },
                                                                        "outputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "stateMutability": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                              "enum": [
                                                                                "view"
                                                                              ],
                                                                              "title": "Function state mutability type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function state mutability"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                              "enum": [
                                                                                "function",
                                                                                "l1_handler",
                                                                                "constructor"
                                                                              ],
                                                                              "title": "Function ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "inputs",
                                                                        "outputs"
                                                                      ],
                                                                      "title": "Function ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Function ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "data": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "keys": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The event name",
                                                                          "title": "Event name",
                                                                          "type": "string"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "event"
                                                                              ],
                                                                              "title": "Event ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Event ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "keys",
                                                                        "data"
                                                                      ],
                                                                      "title": "Event ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Event ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "members": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_MEMBER": {
                                                                                "allOf": [
                                                                                  {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                                                        "properties": {
                                                                                          "name": {
                                                                                            "description": "The parameter's name",
                                                                                            "title": "Parameter name",
                                                                                            "type": "string"
                                                                                          },
                                                                                          "type": {
                                                                                            "description": "The parameter's type",
                                                                                            "title": "Parameter type",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "required": [
                                                                                          "name",
                                                                                          "type"
                                                                                        ],
                                                                                        "title": "Typed parameter",
                                                                                        "type": "object"
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter"
                                                                                  },
                                                                                  {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "description": "offset of this property within the struct",
                                                                                        "title": "Offset",
                                                                                        "type": "integer"
                                                                                      }
                                                                                    },
                                                                                    "title": "Offset",
                                                                                    "type": "object"
                                                                                  }
                                                                                ],
                                                                                "title": "Struct member"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Members",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The struct name",
                                                                          "title": "Struct name",
                                                                          "type": "string"
                                                                        },
                                                                        "size": {
                                                                          "minimum": 1,
                                                                          "title": "Size",
                                                                          "type": "integer"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "struct"
                                                                              ],
                                                                              "title": "Struct ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Struct ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "size",
                                                                        "members"
                                                                      ],
                                                                      "title": "Struct ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Struct ABI entry"
                                                                }
                                                              ],
                                                              "title": "Contract ABI entry"
                                                            }
                                                          }
                                                        },
                                                        "title": "Contract ABI",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Contract ABI"
                                                  },
                                                  "entry_points_by_type": {
                                                    "properties": {
                                                      "CONSTRUCTOR": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated constructor",
                                                        "type": "array"
                                                      },
                                                      "EXTERNAL": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated external",
                                                        "type": "array"
                                                      },
                                                      "L1_HANDLER": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated L1 handler",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Deprecated entry points by type",
                                                    "type": "object"
                                                  },
                                                  "program": {
                                                    "description": "A base64 representation of the compressed program code",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                    "title": "Program",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "program",
                                                  "entry_points_by_type"
                                                ],
                                                "title": "Deprecated contract class",
                                                "type": "object"
                                              }
                                            },
                                            "description": "The class to be declared",
                                            "title": "Contract class"
                                          }
                                        },
                                        "required": [
                                          "contract_class"
                                        ],
                                        "title": "ContractClass",
                                        "type": "object"
                                      },
                                      {
                                        "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                        "properties": {
                                          "class_hash": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The hash of the declared class",
                                            "title": "Class hash"
                                          }
                                        },
                                        "required": [
                                          "class_hash"
                                        ],
                                        "title": "ClassHash",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                ],
                                "description": "Declare Contract Transaction V0",
                                "title": "Declare Contract Transaction V0"
                              }
                            },
                            "title": "Declare transaction V0"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/DECLARE_TXN_V1": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "nonce": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Nonce"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "description": "The address of the account contract sending the declaration transaction",
                                        "title": "Sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "DECLARE"
                                        ],
                                        "title": "Declare",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x1"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "max_fee",
                                      "version",
                                      "signature",
                                      "nonce"
                                    ],
                                    "title": "Declare txn v1",
                                    "type": "object"
                                  },
                                  {
                                    "oneOf": [
                                      {
                                        "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                        "properties": {
                                          "contract_class": {
                                            "$ref": {
                                              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                "description": "The definition of a StarkNet contract class",
                                                "properties": {
                                                  "abi": {
                                                    "$ref": {
                                                      "#/components/schemas/CONTRACT_ABI": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                              "oneOf": [
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "inputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The function name",
                                                                          "title": "Function name",
                                                                          "type": "string"
                                                                        },
                                                                        "outputs": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "stateMutability": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                              "enum": [
                                                                                "view"
                                                                              ],
                                                                              "title": "Function state mutability type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function state mutability"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                              "enum": [
                                                                                "function",
                                                                                "l1_handler",
                                                                                "constructor"
                                                                              ],
                                                                              "title": "Function ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Function ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "inputs",
                                                                        "outputs"
                                                                      ],
                                                                      "title": "Function ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Function ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "data": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "keys": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                                "properties": {
                                                                                  "name": {
                                                                                    "description": "The parameter's name",
                                                                                    "title": "Parameter name",
                                                                                    "type": "string"
                                                                                  },
                                                                                  "type": {
                                                                                    "description": "The parameter's type",
                                                                                    "title": "Parameter type",
                                                                                    "type": "string"
                                                                                  }
                                                                                },
                                                                                "required": [
                                                                                  "name",
                                                                                  "type"
                                                                                ],
                                                                                "title": "Typed parameter",
                                                                                "type": "object"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Typed parameter",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The event name",
                                                                          "title": "Event name",
                                                                          "type": "string"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "event"
                                                                              ],
                                                                              "title": "Event ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Event ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "keys",
                                                                        "data"
                                                                      ],
                                                                      "title": "Event ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Event ABI entry"
                                                                },
                                                                {
                                                                  "$ref": {
                                                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                      "properties": {
                                                                        "members": {
                                                                          "items": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_MEMBER": {
                                                                                "allOf": [
                                                                                  {
                                                                                    "$ref": {
                                                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                                                        "properties": {
                                                                                          "name": {
                                                                                            "description": "The parameter's name",
                                                                                            "title": "Parameter name",
                                                                                            "type": "string"
                                                                                          },
                                                                                          "type": {
                                                                                            "description": "The parameter's type",
                                                                                            "title": "Parameter type",
                                                                                            "type": "string"
                                                                                          }
                                                                                        },
                                                                                        "required": [
                                                                                          "name",
                                                                                          "type"
                                                                                        ],
                                                                                        "title": "Typed parameter",
                                                                                        "type": "object"
                                                                                      }
                                                                                    },
                                                                                    "title": "Typed parameter"
                                                                                  },
                                                                                  {
                                                                                    "properties": {
                                                                                      "offset": {
                                                                                        "description": "offset of this property within the struct",
                                                                                        "title": "Offset",
                                                                                        "type": "integer"
                                                                                      }
                                                                                    },
                                                                                    "title": "Offset",
                                                                                    "type": "object"
                                                                                  }
                                                                                ],
                                                                                "title": "Struct member"
                                                                              }
                                                                            }
                                                                          },
                                                                          "title": "Members",
                                                                          "type": "array"
                                                                        },
                                                                        "name": {
                                                                          "description": "The struct name",
                                                                          "title": "Struct name",
                                                                          "type": "string"
                                                                        },
                                                                        "size": {
                                                                          "minimum": 1,
                                                                          "title": "Size",
                                                                          "type": "integer"
                                                                        },
                                                                        "type": {
                                                                          "$ref": {
                                                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                              "enum": [
                                                                                "struct"
                                                                              ],
                                                                              "title": "Struct ABI type",
                                                                              "type": "string"
                                                                            }
                                                                          },
                                                                          "title": "Struct ABI type"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "type",
                                                                        "name",
                                                                        "size",
                                                                        "members"
                                                                      ],
                                                                      "title": "Struct ABI entry",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "title": "Struct ABI entry"
                                                                }
                                                              ],
                                                              "title": "Contract ABI entry"
                                                            }
                                                          }
                                                        },
                                                        "title": "Contract ABI",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Contract ABI"
                                                  },
                                                  "entry_points_by_type": {
                                                    "properties": {
                                                      "CONSTRUCTOR": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated constructor",
                                                        "type": "array"
                                                      },
                                                      "EXTERNAL": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated external",
                                                        "type": "array"
                                                      },
                                                      "L1_HANDLER": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                              "properties": {
                                                                "offset": {
                                                                  "$ref": {
                                                                    "#/components/schemas/NUM_AS_HEX": {
                                                                      "description": "An integer number in hex format (0x...)",
                                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                                      "title": "Number as hex",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "The offset of the entry point in the program",
                                                                  "title": "Offset"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "offset",
                                                                "selector"
                                                              ],
                                                              "title": "Deprecated Cairo entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Deprecated L1 handler",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "title": "Deprecated entry points by type",
                                                    "type": "object"
                                                  },
                                                  "program": {
                                                    "description": "A base64 representation of the compressed program code",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                    "title": "Program",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "program",
                                                  "entry_points_by_type"
                                                ],
                                                "title": "Deprecated contract class",
                                                "type": "object"
                                              }
                                            },
                                            "description": "The class to be declared",
                                            "title": "Contract class"
                                          }
                                        },
                                        "required": [
                                          "contract_class"
                                        ],
                                        "title": "ContractClass",
                                        "type": "object"
                                      },
                                      {
                                        "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                        "properties": {
                                          "class_hash": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The hash of the declared class",
                                            "title": "Class hash"
                                          }
                                        },
                                        "required": [
                                          "class_hash"
                                        ],
                                        "title": "ClassHash",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                ],
                                "description": "Declare Contract Transaction V1",
                                "title": "Declare Contract Transaction V1"
                              }
                            },
                            "title": "Declare transaction V1"
                          },
                          {
                            "$ref": {
                              "#/components/schemas/DECLARE_TXN_V2": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "compiled_class_hash": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                        "title": "Compiled class hash"
                                      },
                                      "max_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The maximal fee that can be charged for including the transaction",
                                        "title": "Max fee"
                                      },
                                      "nonce": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Nonce"
                                      },
                                      "sender_address": {
                                        "$ref": {
                                          "#/components/schemas/ADDRESS": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "title": "Address"
                                          }
                                        },
                                        "description": "The address of the account contract sending the declaration transaction",
                                        "title": "Sender address"
                                      },
                                      "signature": {
                                        "$ref": {
                                          "#/components/schemas/SIGNATURE": {
                                            "description": "A transaction signature",
                                            "items": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "title": "Signature",
                                            "type": "array"
                                          }
                                        },
                                        "title": "Signature"
                                      },
                                      "type": {
                                        "enum": [
                                          "DECLARE"
                                        ],
                                        "title": "Declare",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "Version of the transaction scheme",
                                        "enum": [
                                          "0x2"
                                        ],
                                        "title": "Version",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "sender_address",
                                      "compiled_class_hash",
                                      "max_fee",
                                      "version",
                                      "signature",
                                      "nonce"
                                    ],
                                    "title": "Declare txn v2",
                                    "type": "object"
                                  },
                                  {
                                    "oneOf": [
                                      {
                                        "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                        "properties": {
                                          "contract_class": {
                                            "$ref": {
                                              "#/components/schemas/CONTRACT_CLASS": {
                                                "properties": {
                                                  "abi": {
                                                    "description": "The class ABI, as supplied by the user declaring the class",
                                                    "title": "ABI",
                                                    "type": "string"
                                                  },
                                                  "contract_class_version": {
                                                    "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                    "title": "Contract class version",
                                                    "type": "string"
                                                  },
                                                  "entry_points_by_type": {
                                                    "properties": {
                                                      "CONSTRUCTOR": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                              "properties": {
                                                                "function_idx": {
                                                                  "description": "The index of the function in the program",
                                                                  "title": "Function index",
                                                                  "type": "integer"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "selector",
                                                                "function_idx"
                                                              ],
                                                              "title": "Sierra entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "Constructor",
                                                        "type": "array"
                                                      },
                                                      "EXTERNAL": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                              "properties": {
                                                                "function_idx": {
                                                                  "description": "The index of the function in the program",
                                                                  "title": "Function index",
                                                                  "type": "integer"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "selector",
                                                                "function_idx"
                                                              ],
                                                              "title": "Sierra entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "External",
                                                        "type": "array"
                                                      },
                                                      "L1_HANDLER": {
                                                        "items": {
                                                          "$ref": {
                                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                              "properties": {
                                                                "function_idx": {
                                                                  "description": "The index of the function in the program",
                                                                  "title": "Function index",
                                                                  "type": "integer"
                                                                },
                                                                "selector": {
                                                                  "$ref": {
                                                                    "#/components/schemas/FELT": {
                                                                      "description": "A field element. represented by at most 63 hex digits",
                                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                      "title": "Field element",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                                  "title": "Selector"
                                                                }
                                                              },
                                                              "required": [
                                                                "selector",
                                                                "function_idx"
                                                              ],
                                                              "title": "Sierra entry point",
                                                              "type": "object"
                                                            }
                                                          }
                                                        },
                                                        "title": "L1 handler",
                                                        "type": "array"
                                                      }
                                                    },
                                                    "required": [
                                                      "CONSTRUCTOR",
                                                      "EXTERNAL",
                                                      "L1_HANDLER"
                                                    ],
                                                    "title": "Entry points by type",
                                                    "type": "object"
                                                  },
                                                  "sierra_program": {
                                                    "description": "The list of Sierra instructions of which the program consists",
                                                    "items": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "title": "Sierra program",
                                                    "type": "array"
                                                  }
                                                },
                                                "required": [
                                                  "sierra_program",
                                                  "contract_class_version",
                                                  "entry_points_by_type"
                                                ],
                                                "title": "Contract class",
                                                "type": "object"
                                              }
                                            },
                                            "description": "The class to be declared",
                                            "title": "Contract class"
                                          }
                                        },
                                        "required": [
                                          "countract_class"
                                        ],
                                        "title": "ContractClass",
                                        "type": "object"
                                      },
                                      {
                                        "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                        "properties": {
                                          "class_hash": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The hash of the declared class",
                                            "title": "Class hash"
                                          }
                                        },
                                        "required": [
                                          "class_hash"
                                        ],
                                        "title": "ClassHash",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                ],
                                "description": "Declare Contract Transaction V2",
                                "title": "Declare Transaction V2"
                              }
                            },
                            "title": "Declare transaction V2"
                          }
                        ],
                        "title": "Declare transaction"
                      }
                    },
                    "title": "Declare transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/DEPLOY_TXN": {
                        "allOf": [
                          {
                            "properties": {
                              "class_hash": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The hash of the deployed contract's class",
                                "title": "Class hash"
                              },
                              "constructor_calldata": {
                                "description": "The parameters passed to the constructor",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Constructor calldata",
                                "type": "array"
                              },
                              "contract_address_salt": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The salt for the address of the deployed contract",
                                "title": "Contract address salt"
                              },
                              "type": {
                                "enum": [
                                  "DEPLOY"
                                ],
                                "title": "Deploy",
                                "type": "string"
                              },
                              "version": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "Version of the transaction scheme",
                                "title": "Version"
                              }
                            },
                            "required": [
                              "version",
                              "type",
                              "constructor_calldata",
                              "contract_address_salt",
                              "class_hash"
                            ],
                            "title": "Deploy txn",
                            "type": "object"
                          }
                        ],
                        "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                        "title": "Deploy Contract Transaction"
                      }
                    },
                    "title": "Deploy transaction"
                  },
                  {
                    "$ref": {
                      "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                        "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                        "properties": {
                          "class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the deployed contract's class",
                            "title": "Class hash"
                          },
                          "constructor_calldata": {
                            "description": "The parameters passed to the constructor",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Constructor calldata",
                            "type": "array"
                          },
                          "contract_address_salt": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The salt for the address of the deployed contract",
                            "title": "Contract address salt"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DEPLOY_ACCOUNT"
                            ],
                            "title": "Deploy account",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "type",
                          "contract_address_salt",
                          "constructor_calldata",
                          "class_hash"
                        ],
                        "title": "Deploy account transaction"
                      }
                    },
                    "title": "Deploy account transaction"
                  }
                ],
                "title": "Transaction"
              }
            }
          },
          {
            "properties": {
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "title": "transaction hash"
              }
            },
            "required": [
              "transaction_hash"
            ],
            "type": "object"
          }
        ],
        "title": "Transaction"
      }
    },
    "summary": "Get the details and status of a submitted transaction"
  },
  "#/methods/starknet_getTransactionReceipt": {
    "errors": [
      {
        "$ref": {
          "#/components/errors/TXN_HASH_NOT_FOUND": {
            "code": 29,
            "message": "Transaction hash not found"
          }
        }
      }
    ],
    "name": "starknet_getTransactionReceipt",
    "paramStructure": "by-name",
    "params": [
      {
        "name": "transaction_hash",
        "required": true,
        "schema": {
          "$ref": {
            "#/components/schemas/TXN_HASH": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The transaction hash, as assigned in StarkNet",
              "title": "Transaction hash"
            }
          },
          "title": "Transaction hash"
        },
        "summary": "The hash of the requested transaction"
      }
    ],
    "result": {
      "name": "result",
      "schema": {
        "$ref": {
          "#/components/schemas/TXN_RECEIPT": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_RECEIPT": {
                    "allOf": [
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "INVOKE"
                            ],
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Type",
                        "type": "object"
                      },
                      {
                        "$ref": {
                          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "block_hash": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Block hash"
                                  }
                                },
                                "title": "Block hash"
                              },
                              "block_number": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_NUMBER": {
                                    "description": "The block's number (its height)",
                                    "minimum": 0,
                                    "title": "Block number",
                                    "type": "integer"
                                  }
                                },
                                "title": "Block number"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_FINALITY_STATUS": {
                                    "description": "The finality status of the transaction",
                                    "enum": [
                                      "ACCEPTED_ON_L2",
                                      "ACCEPTED_ON_L1"
                                    ],
                                    "title": "Finality status",
                                    "type": "string"
                                  }
                                },
                                "title": "Finality status"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "finality_status",
                              "execution_status",
                              "block_hash",
                              "block_number",
                              "messages_sent",
                              "events"
                            ],
                            "title": "Common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Common receipt properties"
                      }
                    ],
                    "title": "Invoke Transaction Receipt"
                  }
                },
                "title": "Invoke transaction receipt"
              },
              {
                "$ref": {
                  "#/components/schemas/L1_HANDLER_TXN_RECEIPT": {
                    "allOf": [
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "L1_HANDLER"
                            ],
                            "title": "type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Transaction type",
                        "type": "object"
                      },
                      {
                        "$ref": {
                          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "block_hash": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Block hash"
                                  }
                                },
                                "title": "Block hash"
                              },
                              "block_number": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_NUMBER": {
                                    "description": "The block's number (its height)",
                                    "minimum": 0,
                                    "title": "Block number",
                                    "type": "integer"
                                  }
                                },
                                "title": "Block number"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_FINALITY_STATUS": {
                                    "description": "The finality status of the transaction",
                                    "enum": [
                                      "ACCEPTED_ON_L2",
                                      "ACCEPTED_ON_L1"
                                    ],
                                    "title": "Finality status",
                                    "type": "string"
                                  }
                                },
                                "title": "Finality status"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "finality_status",
                              "execution_status",
                              "block_hash",
                              "block_number",
                              "messages_sent",
                              "events"
                            ],
                            "title": "Common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Common receipt properties"
                      }
                    ],
                    "description": "receipt for l1 handler transaction",
                    "title": "L1 Handler Transaction Receipt"
                  }
                },
                "title": "L1 handler transaction receipt"
              },
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_RECEIPT": {
                    "allOf": [
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Declare txn receipt",
                        "type": "object"
                      },
                      {
                        "$ref": {
                          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "block_hash": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Block hash"
                                  }
                                },
                                "title": "Block hash"
                              },
                              "block_number": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_NUMBER": {
                                    "description": "The block's number (its height)",
                                    "minimum": 0,
                                    "title": "Block number",
                                    "type": "integer"
                                  }
                                },
                                "title": "Block number"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_FINALITY_STATUS": {
                                    "description": "The finality status of the transaction",
                                    "enum": [
                                      "ACCEPTED_ON_L2",
                                      "ACCEPTED_ON_L1"
                                    ],
                                    "title": "Finality status",
                                    "type": "string"
                                  }
                                },
                                "title": "Finality status"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "finality_status",
                              "execution_status",
                              "block_hash",
                              "block_number",
                              "messages_sent",
                              "events"
                            ],
                            "title": "Common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Common receipt properties"
                      }
                    ],
                    "title": "Declare Transaction Receipt"
                  }
                },
                "title": "Declare transaction receipt"
              },
              {
                "$ref": {
                  "#/components/schemas/DEPLOY_TXN_RECEIPT": {
                    "allOf": [
                      {
                        "$ref": {
                          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "block_hash": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Block hash"
                                  }
                                },
                                "title": "Block hash"
                              },
                              "block_number": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_NUMBER": {
                                    "description": "The block's number (its height)",
                                    "minimum": 0,
                                    "title": "Block number",
                                    "type": "integer"
                                  }
                                },
                                "title": "Block number"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_FINALITY_STATUS": {
                                    "description": "The finality status of the transaction",
                                    "enum": [
                                      "ACCEPTED_ON_L2",
                                      "ACCEPTED_ON_L1"
                                    ],
                                    "title": "Finality status",
                                    "type": "string"
                                  }
                                },
                                "title": "Finality status"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "finality_status",
                              "execution_status",
                              "block_hash",
                              "block_number",
                              "messages_sent",
                              "events"
                            ],
                            "title": "Common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Common receipt properties"
                      },
                      {
                        "properties": {
                          "contract_address": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The address of the deployed contract",
                            "title": "Contract address"
                          },
                          "type": {
                            "enum": [
                              "DEPLOY"
                            ],
                            "title": "Deploy",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "contract_address"
                        ],
                        "title": "Deploy txn receipt",
                        "type": "object"
                      }
                    ],
                    "title": "Deploy Transaction Receipt"
                  }
                },
                "title": "Deploy transaction receipt"
              },
              {
                "$ref": {
                  "#/components/schemas/DEPLOY_ACCOUNT_TXN_RECEIPT": {
                    "allOf": [
                      {
                        "$ref": {
                          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "block_hash": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Block hash"
                                  }
                                },
                                "title": "Block hash"
                              },
                              "block_number": {
                                "$ref": {
                                  "#/components/schemas/BLOCK_NUMBER": {
                                    "description": "The block's number (its height)",
                                    "minimum": 0,
                                    "title": "Block number",
                                    "type": "integer"
                                  }
                                },
                                "title": "Block number"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_FINALITY_STATUS": {
                                    "description": "The finality status of the transaction",
                                    "enum": [
                                      "ACCEPTED_ON_L2",
                                      "ACCEPTED_ON_L1"
                                    ],
                                    "title": "Finality status",
                                    "type": "string"
                                  }
                                },
                                "title": "Finality status"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "finality_status",
                              "execution_status",
                              "block_hash",
                              "block_number",
                              "messages_sent",
                              "events"
                            ],
                            "title": "Common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Common receipt properties"
                      },
                      {
                        "properties": {
                          "contract_address": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The address of the deployed contract",
                            "title": "Contract address"
                          },
                          "type": {
                            "enum": [
                              "DEPLOY_ACCOUNT"
                            ],
                            "title": "Deploy account",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "contract_address"
                        ],
                        "title": "DeployAccount txn receipt",
                        "type": "object"
                      }
                    ],
                    "title": "Deploy Account Transaction Receipt"
                  }
                },
                "title": "Deploy account transaction receipt"
              },
              {
                "$ref": {
                  "#/components/schemas/PENDING_TXN_RECEIPT": {
                    "oneOf": [
                      {
                        "$ref": {
                          "#/components/schemas/PENDING_DEPLOY_TXN_RECEIPT": {
                            "allOf": [
                              {
                                "$ref": {
                                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                                    "description": "Common properties for a pending transaction receipt",
                                    "properties": {
                                      "actual_fee": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        },
                                        "description": "The fee that was charged by the sequencer",
                                        "title": "Actual fee"
                                      },
                                      "events": {
                                        "description": "The events emitted as part of this transaction",
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/EVENT": {
                                              "allOf": [
                                                {
                                                  "properties": {
                                                    "from_address": {
                                                      "$ref": {
                                                        "#/components/schemas/ADDRESS": {
                                                          "$ref": {
                                                            "#/components/schemas/FELT": {
                                                              "description": "A field element. represented by at most 63 hex digits",
                                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                              "title": "Field element",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Address"
                                                        }
                                                      },
                                                      "title": "From address"
                                                    }
                                                  },
                                                  "required": [
                                                    "from_address"
                                                  ],
                                                  "title": "Event emitter",
                                                  "type": "object"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/EVENT_CONTENT": {
                                                      "description": "The content of an event",
                                                      "properties": {
                                                        "data": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/FELT": {
                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                "title": "Field element",
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "title": "Data",
                                                          "type": "array"
                                                        },
                                                        "keys": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/FELT": {
                                                                "description": "A field element. represented by at most 63 hex digits",
                                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                "title": "Field element",
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "title": "Keys",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "required": [
                                                        "keys",
                                                        "data"
                                                      ],
                                                      "title": "Event content",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "title": "Event content"
                                                }
                                              ],
                                              "description": "A StarkNet event",
                                              "title": "Event"
                                            }
                                          }
                                        },
                                        "title": "Events",
                                        "type": "array"
                                      },
                                      "execution_status": {
                                        "$ref": {
                                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                                            "description": "The execution status of the transaction",
                                            "enum": [
                                              "SUCCEEDED",
                                              "REVERTED"
                                            ],
                                            "title": "Execution status",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Execution status"
                                      },
                                      "finality_status": {
                                        "description": "The finality status of the transaction",
                                        "enum": [
                                          "ACCEPTED_ON_L2"
                                        ],
                                        "title": "Finality status",
                                        "type": "string"
                                      },
                                      "messages_sent": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/MSG_TO_L1": {
                                              "properties": {
                                                "from_address": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The address of the L2 contract sending the message"
                                                },
                                                "payload": {
                                                  "description": "The payload of the message",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Payload",
                                                  "type": "array"
                                                },
                                                "to_address": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The target L1 address the message is sent to",
                                                  "title": "To address"
                                                }
                                              },
                                              "required": [
                                                "from_address",
                                                "to_address",
                                                "payload"
                                              ],
                                              "title": "Message to L1",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "Messages sent",
                                        "type": "array"
                                      },
                                      "revert_reason": {
                                        "description": "the revert reason for the failed execution",
                                        "name": "revert reason",
                                        "title": "Revert reason",
                                        "type": "string"
                                      },
                                      "transaction_hash": {
                                        "$ref": {
                                          "#/components/schemas/TXN_HASH": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            },
                                            "description": "The transaction hash, as assigned in StarkNet",
                                            "title": "Transaction hash"
                                          }
                                        },
                                        "description": "The hash identifying the transaction",
                                        "title": "Transaction hash"
                                      },
                                      "type": {
                                        "$ref": {
                                          "#/components/schemas/TXN_TYPE": {
                                            "description": "The type of the transaction",
                                            "enum": [
                                              "DECLARE",
                                              "DEPLOY",
                                              "DEPLOY_ACCOUNT",
                                              "INVOKE",
                                              "L1_HANDLER"
                                            ],
                                            "title": "Transaction type",
                                            "type": "string"
                                          }
                                        },
                                        "title": "Transaction type"
                                      }
                                    },
                                    "required": [
                                      "transaction_hash",
                                      "actual_fee",
                                      "type",
                                      "messages_sent",
                                      "events",
                                      "finality_status",
                                      "execution_status"
                                    ],
                                    "title": "Pending common receipt properties",
                                    "type": "object"
                                  }
                                },
                                "title": "Common receipt properties"
                              },
                              {
                                "properties": {
                                  "contract_address": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The address of the deployed contract",
                                    "title": "Contract address"
                                  }
                                },
                                "title": "Contract address",
                                "type": "object"
                              }
                            ],
                            "title": "Pending deploy Transaction Receipt"
                          }
                        },
                        "title": "Pending deploy transaction receipt"
                      },
                      {
                        "$comment": "Used for pending invoke and declare transaction receipts",
                        "$ref": {
                          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                            "description": "Common properties for a pending transaction receipt",
                            "properties": {
                              "actual_fee": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The fee that was charged by the sequencer",
                                "title": "Actual fee"
                              },
                              "events": {
                                "description": "The events emitted as part of this transaction",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/EVENT": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "from_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "From address"
                                            }
                                          },
                                          "required": [
                                            "from_address"
                                          ],
                                          "title": "Event emitter",
                                          "type": "object"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_CONTENT": {
                                              "description": "The content of an event",
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Data",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Keys",
                                                  "type": "array"
                                                }
                                              },
                                              "required": [
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event content",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event content"
                                        }
                                      ],
                                      "description": "A StarkNet event",
                                      "title": "Event"
                                    }
                                  }
                                },
                                "title": "Events",
                                "type": "array"
                              },
                              "execution_status": {
                                "$ref": {
                                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                                    "description": "The execution status of the transaction",
                                    "enum": [
                                      "SUCCEEDED",
                                      "REVERTED"
                                    ],
                                    "title": "Execution status",
                                    "type": "string"
                                  }
                                },
                                "title": "Execution status"
                              },
                              "finality_status": {
                                "description": "The finality status of the transaction",
                                "enum": [
                                  "ACCEPTED_ON_L2"
                                ],
                                "title": "Finality status",
                                "type": "string"
                              },
                              "messages_sent": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/MSG_TO_L1": {
                                      "properties": {
                                        "from_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The address of the L2 contract sending the message"
                                        },
                                        "payload": {
                                          "description": "The payload of the message",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Payload",
                                          "type": "array"
                                        },
                                        "to_address": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The target L1 address the message is sent to",
                                          "title": "To address"
                                        }
                                      },
                                      "required": [
                                        "from_address",
                                        "to_address",
                                        "payload"
                                      ],
                                      "title": "Message to L1",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Messages sent",
                                "type": "array"
                              },
                              "revert_reason": {
                                "description": "the revert reason for the failed execution",
                                "name": "revert reason",
                                "title": "Revert reason",
                                "type": "string"
                              },
                              "transaction_hash": {
                                "$ref": {
                                  "#/components/schemas/TXN_HASH": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    },
                                    "description": "The transaction hash, as assigned in StarkNet",
                                    "title": "Transaction hash"
                                  }
                                },
                                "description": "The hash identifying the transaction",
                                "title": "Transaction hash"
                              },
                              "type": {
                                "$ref": {
                                  "#/components/schemas/TXN_TYPE": {
                                    "description": "The type of the transaction",
                                    "enum": [
                                      "DECLARE",
                                      "DEPLOY",
                                      "DEPLOY_ACCOUNT",
                                      "INVOKE",
                                      "L1_HANDLER"
                                    ],
                                    "title": "Transaction type",
                                    "type": "string"
                                  }
                                },
                                "title": "Transaction type"
                              }
                            },
                            "required": [
                              "transaction_hash",
                              "actual_fee",
                              "type",
                              "messages_sent",
                              "events",
                              "finality_status",
                              "execution_status"
                            ],
                            "title": "Pending common receipt properties",
                            "type": "object"
                          }
                        },
                        "title": "Pending common receipt properties"
                      }
                    ],
                    "title": "Pending Transaction Receipt"
                  }
                },
                "title": "Pending transaction receipt"
              }
            ],
            "title": "Transaction Receipt"
          }
        },
        "title": "Transaction receipt"
      }
    },
    "summary": "Get the transaction receipt by the transaction hash"
  },
  "#/methods/starknet_pendingTransactions": {
    "name": "starknet_pendingTransactions",
    "params": [],
    "result": {
      "name": "result",
      "schema": {
        "items": {
          "allOf": [
            {
              "$ref": {
                "#/components/schemas/TXN": {
                  "description": "The transaction schema, as it appears inside a block",
                  "oneOf": [
                    {
                      "$ref": {
                        "#/components/schemas/INVOKE_TXN": {
                          "description": "Initiate a transaction from an account",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN_V0": {
                                  "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                  "properties": {
                                    "calldata": {
                                      "description": "The parameters passed to the function",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Calldata",
                                      "type": "array"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "Contract address"
                                    },
                                    "entry_point_selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Entry point selector"
                                    },
                                    "max_fee": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The maximal fee that can be charged for including the transaction",
                                      "title": "Max fee"
                                    },
                                    "signature": {
                                      "$ref": {
                                        "#/components/schemas/SIGNATURE": {
                                          "description": "A transaction signature",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Signature",
                                          "type": "array"
                                        }
                                      },
                                      "title": "Signature"
                                    },
                                    "type": {
                                      "enum": [
                                        "INVOKE"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    },
                                    "version": {
                                      "description": "Version of the transaction scheme",
                                      "enum": [
                                        "0x0"
                                      ],
                                      "title": "Version",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "contract_address",
                                    "entry_point_selector",
                                    "calldata",
                                    "max_fee",
                                    "version",
                                    "signature"
                                  ],
                                  "title": "Invoke transaction V0"
                                }
                              },
                              "title": "Invoke transaction V0"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN_V1": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "calldata": {
                                          "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "calldata",
                                          "type": "array"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "title": "sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "INVOKE"
                                          ],
                                          "title": "Type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x1"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "calldata",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "type": "object"
                                    }
                                  ],
                                  "description": "initiates a transaction from a given account",
                                  "title": "Invoke transaction V1"
                                }
                              },
                              "title": "Invoke transaction V1"
                            }
                          ],
                          "title": "Invoke transaction"
                        }
                      },
                      "title": "Invoke transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/L1_HANDLER_TXN": {
                          "allOf": [
                            {
                              "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                              "properties": {
                                "nonce": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                  "title": "Nonce"
                                },
                                "type": {
                                  "enum": [
                                    "L1_HANDLER"
                                  ],
                                  "title": "type",
                                  "type": "string"
                                },
                                "version": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "Version of the transaction scheme",
                                  "title": "Version"
                                }
                              },
                              "required": [
                                "version",
                                "type",
                                "nonce"
                              ],
                              "title": "L1 handler transaction",
                              "type": "object"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/FUNCTION_CALL": {
                                  "description": "Function call information",
                                  "properties": {
                                    "calldata": {
                                      "description": "The parameters passed to the function",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Calldata",
                                      "type": "array"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "Contract address"
                                    },
                                    "entry_point_selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Entry point selector"
                                    }
                                  },
                                  "required": [
                                    "contract_address",
                                    "entry_point_selector",
                                    "calldata"
                                  ],
                                  "title": "Function call",
                                  "type": "object"
                                }
                              },
                              "title": "Function call"
                            }
                          ],
                          "title": "L1 Handler transaction"
                        }
                      },
                      "title": "L1 handler transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DECLARE_TXN": {
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V0": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x0"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "max_fee",
                                        "version",
                                        "signature"
                                      ],
                                      "title": "Declare txn v0",
                                      "type": "object"
                                    },
                                    {
                                      "oneOf": [
                                        {
                                          "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                          "properties": {
                                            "contract_class": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                  "description": "The definition of a StarkNet contract class",
                                                  "properties": {
                                                    "abi": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_ABI": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                "oneOf": [
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "inputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The function name",
                                                                            "title": "Function name",
                                                                            "type": "string"
                                                                          },
                                                                          "outputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "stateMutability": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                "enum": [
                                                                                  "view"
                                                                                ],
                                                                                "title": "Function state mutability type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function state mutability"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "function",
                                                                                  "l1_handler",
                                                                                  "constructor"
                                                                                ],
                                                                                "title": "Function ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "inputs",
                                                                          "outputs"
                                                                        ],
                                                                        "title": "Function ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Function ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "data": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "keys": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The event name",
                                                                            "title": "Event name",
                                                                            "type": "string"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "event"
                                                                                ],
                                                                                "title": "Event ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "keys",
                                                                          "data"
                                                                        ],
                                                                        "title": "Event ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Event ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "members": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/STRUCT_MEMBER": {
                                                                                  "allOf": [
                                                                                    {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      },
                                                                                      "title": "Typed parameter"
                                                                                    },
                                                                                    {
                                                                                      "properties": {
                                                                                        "offset": {
                                                                                          "description": "offset of this property within the struct",
                                                                                          "title": "Offset",
                                                                                          "type": "integer"
                                                                                        }
                                                                                      },
                                                                                      "title": "Offset",
                                                                                      "type": "object"
                                                                                    }
                                                                                  ],
                                                                                  "title": "Struct member"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Members",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The struct name",
                                                                            "title": "Struct name",
                                                                            "type": "string"
                                                                          },
                                                                          "size": {
                                                                            "minimum": 1,
                                                                            "title": "Size",
                                                                            "type": "integer"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "struct"
                                                                                ],
                                                                                "title": "Struct ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "size",
                                                                          "members"
                                                                        ],
                                                                        "title": "Struct ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Struct ABI entry"
                                                                  }
                                                                ],
                                                                "title": "Contract ABI entry"
                                                              }
                                                            }
                                                          },
                                                          "title": "Contract ABI",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Contract ABI"
                                                    },
                                                    "entry_points_by_type": {
                                                      "properties": {
                                                        "CONSTRUCTOR": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated constructor",
                                                          "type": "array"
                                                        },
                                                        "EXTERNAL": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated external",
                                                          "type": "array"
                                                        },
                                                        "L1_HANDLER": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated L1 handler",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Deprecated entry points by type",
                                                      "type": "object"
                                                    },
                                                    "program": {
                                                      "description": "A base64 representation of the compressed program code",
                                                      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                      "title": "Program",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "program",
                                                    "entry_points_by_type"
                                                  ],
                                                  "title": "Deprecated contract class",
                                                  "type": "object"
                                                }
                                              },
                                              "description": "The class to be declared",
                                              "title": "Contract class"
                                            }
                                          },
                                          "required": [
                                            "contract_class"
                                          ],
                                          "title": "ContractClass",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the declared class",
                                              "title": "Class hash"
                                            }
                                          },
                                          "required": [
                                            "class_hash"
                                          ],
                                          "title": "ClassHash",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V0",
                                  "title": "Declare Contract Transaction V0"
                                }
                              },
                              "title": "Declare transaction V0"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V1": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x1"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "title": "Declare txn v1",
                                      "type": "object"
                                    },
                                    {
                                      "oneOf": [
                                        {
                                          "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                          "properties": {
                                            "contract_class": {
                                              "$ref": {
                                                "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                                  "description": "The definition of a StarkNet contract class",
                                                  "properties": {
                                                    "abi": {
                                                      "$ref": {
                                                        "#/components/schemas/CONTRACT_ABI": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                                                "oneOf": [
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "inputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The function name",
                                                                            "title": "Function name",
                                                                            "type": "string"
                                                                          },
                                                                          "outputs": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "stateMutability": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                                                "enum": [
                                                                                  "view"
                                                                                ],
                                                                                "title": "Function state mutability type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function state mutability"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "function",
                                                                                  "l1_handler",
                                                                                  "constructor"
                                                                                ],
                                                                                "title": "Function ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Function ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "inputs",
                                                                          "outputs"
                                                                        ],
                                                                        "title": "Function ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Function ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/EVENT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "data": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "keys": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/TYPED_PARAMETER": {
                                                                                  "properties": {
                                                                                    "name": {
                                                                                      "description": "The parameter's name",
                                                                                      "title": "Parameter name",
                                                                                      "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                      "description": "The parameter's type",
                                                                                      "title": "Parameter type",
                                                                                      "type": "string"
                                                                                    }
                                                                                  },
                                                                                  "required": [
                                                                                    "name",
                                                                                    "type"
                                                                                  ],
                                                                                  "title": "Typed parameter",
                                                                                  "type": "object"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Typed parameter",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The event name",
                                                                            "title": "Event name",
                                                                            "type": "string"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/EVENT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "event"
                                                                                ],
                                                                                "title": "Event ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Event ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "keys",
                                                                          "data"
                                                                        ],
                                                                        "title": "Event ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Event ABI entry"
                                                                  },
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                                        "properties": {
                                                                          "members": {
                                                                            "items": {
                                                                              "$ref": {
                                                                                "#/components/schemas/STRUCT_MEMBER": {
                                                                                  "allOf": [
                                                                                    {
                                                                                      "$ref": {
                                                                                        "#/components/schemas/TYPED_PARAMETER": {
                                                                                          "properties": {
                                                                                            "name": {
                                                                                              "description": "The parameter's name",
                                                                                              "title": "Parameter name",
                                                                                              "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                              "description": "The parameter's type",
                                                                                              "title": "Parameter type",
                                                                                              "type": "string"
                                                                                            }
                                                                                          },
                                                                                          "required": [
                                                                                            "name",
                                                                                            "type"
                                                                                          ],
                                                                                          "title": "Typed parameter",
                                                                                          "type": "object"
                                                                                        }
                                                                                      },
                                                                                      "title": "Typed parameter"
                                                                                    },
                                                                                    {
                                                                                      "properties": {
                                                                                        "offset": {
                                                                                          "description": "offset of this property within the struct",
                                                                                          "title": "Offset",
                                                                                          "type": "integer"
                                                                                        }
                                                                                      },
                                                                                      "title": "Offset",
                                                                                      "type": "object"
                                                                                    }
                                                                                  ],
                                                                                  "title": "Struct member"
                                                                                }
                                                                              }
                                                                            },
                                                                            "title": "Members",
                                                                            "type": "array"
                                                                          },
                                                                          "name": {
                                                                            "description": "The struct name",
                                                                            "title": "Struct name",
                                                                            "type": "string"
                                                                          },
                                                                          "size": {
                                                                            "minimum": 1,
                                                                            "title": "Size",
                                                                            "type": "integer"
                                                                          },
                                                                          "type": {
                                                                            "$ref": {
                                                                              "#/components/schemas/STRUCT_ABI_TYPE": {
                                                                                "enum": [
                                                                                  "struct"
                                                                                ],
                                                                                "title": "Struct ABI type",
                                                                                "type": "string"
                                                                              }
                                                                            },
                                                                            "title": "Struct ABI type"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "type",
                                                                          "name",
                                                                          "size",
                                                                          "members"
                                                                        ],
                                                                        "title": "Struct ABI entry",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Struct ABI entry"
                                                                  }
                                                                ],
                                                                "title": "Contract ABI entry"
                                                              }
                                                            }
                                                          },
                                                          "title": "Contract ABI",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Contract ABI"
                                                    },
                                                    "entry_points_by_type": {
                                                      "properties": {
                                                        "CONSTRUCTOR": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated constructor",
                                                          "type": "array"
                                                        },
                                                        "EXTERNAL": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated external",
                                                          "type": "array"
                                                        },
                                                        "L1_HANDLER": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                                                "properties": {
                                                                  "offset": {
                                                                    "$ref": {
                                                                      "#/components/schemas/NUM_AS_HEX": {
                                                                        "description": "An integer number in hex format (0x...)",
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "Number as hex",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "The offset of the entry point in the program",
                                                                    "title": "Offset"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "offset",
                                                                  "selector"
                                                                ],
                                                                "title": "Deprecated Cairo entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Deprecated L1 handler",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "title": "Deprecated entry points by type",
                                                      "type": "object"
                                                    },
                                                    "program": {
                                                      "description": "A base64 representation of the compressed program code",
                                                      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                                      "title": "Program",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "program",
                                                    "entry_points_by_type"
                                                  ],
                                                  "title": "Deprecated contract class",
                                                  "type": "object"
                                                }
                                              },
                                              "description": "The class to be declared",
                                              "title": "Contract class"
                                            }
                                          },
                                          "required": [
                                            "contract_class"
                                          ],
                                          "title": "ContractClass",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the declared class",
                                              "title": "Class hash"
                                            }
                                          },
                                          "required": [
                                            "class_hash"
                                          ],
                                          "title": "ClassHash",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V1",
                                  "title": "Declare Contract Transaction V1"
                                }
                              },
                              "title": "Declare transaction V1"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V2": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "compiled_class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                          "title": "Compiled class hash"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x2"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "compiled_class_hash",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "title": "Declare txn v2",
                                      "type": "object"
                                    },
                                    {
                                      "oneOf": [
                                        {
                                          "description": "The class to be declared. Expected to be included for all methods involving execution (estimateFee, simulateTransactions)",
                                          "properties": {
                                            "contract_class": {
                                              "$ref": {
                                                "#/components/schemas/CONTRACT_CLASS": {
                                                  "properties": {
                                                    "abi": {
                                                      "description": "The class ABI, as supplied by the user declaring the class",
                                                      "title": "ABI",
                                                      "type": "string"
                                                    },
                                                    "contract_class_version": {
                                                      "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                                      "title": "Contract class version",
                                                      "type": "string"
                                                    },
                                                    "entry_points_by_type": {
                                                      "properties": {
                                                        "CONSTRUCTOR": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                "properties": {
                                                                  "function_idx": {
                                                                    "description": "The index of the function in the program",
                                                                    "title": "Function index",
                                                                    "type": "integer"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "selector",
                                                                  "function_idx"
                                                                ],
                                                                "title": "Sierra entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Constructor",
                                                          "type": "array"
                                                        },
                                                        "EXTERNAL": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                "properties": {
                                                                  "function_idx": {
                                                                    "description": "The index of the function in the program",
                                                                    "title": "Function index",
                                                                    "type": "integer"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "selector",
                                                                  "function_idx"
                                                                ],
                                                                "title": "Sierra entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "External",
                                                          "type": "array"
                                                        },
                                                        "L1_HANDLER": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/SIERRA_ENTRY_POINT": {
                                                                "properties": {
                                                                  "function_idx": {
                                                                    "description": "The index of the function in the program",
                                                                    "title": "Function index",
                                                                    "type": "integer"
                                                                  },
                                                                  "selector": {
                                                                    "$ref": {
                                                                      "#/components/schemas/FELT": {
                                                                        "description": "A field element. represented by at most 63 hex digits",
                                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                                        "title": "Field element",
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "description": "A unique identifier of the entry point (function) in the program",
                                                                    "title": "Selector"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "selector",
                                                                  "function_idx"
                                                                ],
                                                                "title": "Sierra entry point",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "L1 handler",
                                                          "type": "array"
                                                        }
                                                      },
                                                      "required": [
                                                        "CONSTRUCTOR",
                                                        "EXTERNAL",
                                                        "L1_HANDLER"
                                                      ],
                                                      "title": "Entry points by type",
                                                      "type": "object"
                                                    },
                                                    "sierra_program": {
                                                      "description": "The list of Sierra instructions of which the program consists",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Sierra program",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "required": [
                                                    "sierra_program",
                                                    "contract_class_version",
                                                    "entry_points_by_type"
                                                  ],
                                                  "title": "Contract class",
                                                  "type": "object"
                                                }
                                              },
                                              "description": "The class to be declared",
                                              "title": "Contract class"
                                            }
                                          },
                                          "required": [
                                            "countract_class"
                                          ],
                                          "title": "ContractClass",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The hash of the declared class. Responses to getBlock and getTransaction are expected to include the hash rather than the full definition",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the declared class",
                                              "title": "Class hash"
                                            }
                                          },
                                          "required": [
                                            "class_hash"
                                          ],
                                          "title": "ClassHash",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V2",
                                  "title": "Declare Transaction V2"
                                }
                              },
                              "title": "Declare transaction V2"
                            }
                          ],
                          "title": "Declare transaction"
                        }
                      },
                      "title": "Declare transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DEPLOY_TXN": {
                          "allOf": [
                            {
                              "properties": {
                                "class_hash": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The hash of the deployed contract's class",
                                  "title": "Class hash"
                                },
                                "constructor_calldata": {
                                  "description": "The parameters passed to the constructor",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Constructor calldata",
                                  "type": "array"
                                },
                                "contract_address_salt": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The salt for the address of the deployed contract",
                                  "title": "Contract address salt"
                                },
                                "type": {
                                  "enum": [
                                    "DEPLOY"
                                  ],
                                  "title": "Deploy",
                                  "type": "string"
                                },
                                "version": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "Version of the transaction scheme",
                                  "title": "Version"
                                }
                              },
                              "required": [
                                "version",
                                "type",
                                "constructor_calldata",
                                "contract_address_salt",
                                "class_hash"
                              ],
                              "title": "Deploy txn",
                              "type": "object"
                            }
                          ],
                          "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                          "title": "Deploy Contract Transaction"
                        }
                      },
                      "title": "Deploy transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                          "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                          "properties": {
                            "class_hash": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The hash of the deployed contract's class",
                              "title": "Class hash"
                            },
                            "constructor_calldata": {
                              "description": "The parameters passed to the constructor",
                              "items": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                }
                              },
                              "title": "Constructor calldata",
                              "type": "array"
                            },
                            "contract_address_salt": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The salt for the address of the deployed contract",
                              "title": "Contract address salt"
                            },
                            "max_fee": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The maximal fee that can be charged for including the transaction",
                              "title": "Max fee"
                            },
                            "nonce": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "title": "Nonce"
                            },
                            "signature": {
                              "$ref": {
                                "#/components/schemas/SIGNATURE": {
                                  "description": "A transaction signature",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Signature",
                                  "type": "array"
                                }
                              },
                              "title": "Signature"
                            },
                            "type": {
                              "enum": [
                                "DEPLOY_ACCOUNT"
                              ],
                              "title": "Deploy account",
                              "type": "string"
                            },
                            "version": {
                              "$ref": {
                                "#/components/schemas/NUM_AS_HEX": {
                                  "description": "An integer number in hex format (0x...)",
                                  "pattern": "^0x[a-fA-F0-9]+$",
                                  "title": "Number as hex",
                                  "type": "string"
                                }
                              },
                              "description": "Version of the transaction scheme",
                              "title": "Version"
                            }
                          },
                          "required": [
                            "max_fee",
                            "version",
                            "signature",
                            "nonce",
                            "type",
                            "contract_address_salt",
                            "constructor_calldata",
                            "class_hash"
                          ],
                          "title": "Deploy account transaction"
                        }
                      },
                      "title": "Deploy account transaction"
                    }
                  ],
                  "title": "Transaction"
                }
              }
            },
            {
              "properties": {
                "transaction_hash": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "title": "transaction hash"
                }
              },
              "required": [
                "transaction_hash"
              ],
              "type": "object"
            }
          ]
        },
        "title": "Pending Transactions",
        "type": "array"
      }
    },
    "summary": "Returns the transactions in the transaction pool, recognized by this sequencer"
  },
  "#/methods/starknet_syncing": {
    "name": "starknet_syncing",
    "params": [],
    "result": {
      "description": "The status of the node, if it is currently synchronizing state. FALSE otherwise",
      "name": "syncing",
      "schema": {
        "oneOf": [
          {
            "description": "only legal value is FALSE here",
            "title": "False",
            "type": "boolean"
          },
          {
            "$ref": {
              "#/components/schemas/SYNC_STATUS": {
                "description": "An object describing the node synchronization status",
                "properties": {
                  "current_block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "description": "The hash of the current block being synchronized",
                    "title": "Current block hash"
                  },
                  "current_block_num": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "description": "The number (height) of the current block being synchronized",
                    "title": "Current block number"
                  },
                  "highest_block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "description": "The hash of the estimated highest block to be synchronized",
                    "title": "Highest block hash"
                  },
                  "highest_block_num": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "description": "The number (height) of the estimated highest block to be synchronized",
                    "title": "Highest block number"
                  },
                  "starting_block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "description": "The hash of the block from which the sync started",
                    "title": "Starting block hash"
                  },
                  "starting_block_num": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "description": "The number (height) of the block from which the sync started",
                    "title": "Starting block number"
                  }
                },
                "required": [
                  "starting_block_hash",
                  "starting_block_num",
                  "current_block_hash",
                  "current_block_num",
                  "highest_block_hash",
                  "highest_block_num"
                ],
                "title": "Sync status",
                "type": "object"
              }
            },
            "title": "Sync status"
          }
        ],
        "title": "SyncingStatus"
      },
      "summary": "The state of the synchronization, or false if the node is not synchronizing"
    },
    "summary": "Returns an object about the sync status, or false if the node is not synching"
  }
}