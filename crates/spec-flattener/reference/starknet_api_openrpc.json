{
  "ADDRESS": {
    "$ref": {
      "#/components/schemas/FELT": {
        "description": "A field element. represented by at most 63 hex digits",
        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
        "title": "Field element",
        "type": "string"
      }
    },
    "title": "Address"
  },
  "BLOCK_BODY_WITH_TXS": {
    "properties": {
      "transactions": {
        "description": "The transactions in this block",
        "items": {
          "allOf": [
            {
              "$ref": {
                "#/components/schemas/TXN": {
                  "description": "The transaction schema, as it appears inside a block",
                  "oneOf": [
                    {
                      "$ref": {
                        "#/components/schemas/INVOKE_TXN": {
                          "description": "Initiate a transaction from an account",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN_V0": {
                                  "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                  "properties": {
                                    "calldata": {
                                      "description": "The parameters passed to the function",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Calldata",
                                      "type": "array"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "Contract address"
                                    },
                                    "entry_point_selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Entry point selector"
                                    },
                                    "max_fee": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The maximal fee that can be charged for including the transaction",
                                      "title": "Max fee"
                                    },
                                    "signature": {
                                      "$ref": {
                                        "#/components/schemas/SIGNATURE": {
                                          "description": "A transaction signature",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Signature",
                                          "type": "array"
                                        }
                                      },
                                      "title": "Signature"
                                    },
                                    "type": {
                                      "enum": [
                                        "INVOKE"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    },
                                    "version": {
                                      "description": "Version of the transaction scheme",
                                      "enum": [
                                        "0x0"
                                      ],
                                      "title": "Version",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "contract_address",
                                    "entry_point_selector",
                                    "calldata",
                                    "max_fee",
                                    "version",
                                    "signature"
                                  ],
                                  "title": "Invoke transaction V0"
                                }
                              },
                              "title": "Invoke transaction V0"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN_V1": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "calldata": {
                                          "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "calldata",
                                          "type": "array"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "title": "sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "INVOKE"
                                          ],
                                          "title": "Type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "calldata",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce"
                                      ],
                                      "type": "object"
                                    }
                                  ],
                                  "description": "initiates a transaction from a given account",
                                  "title": "Invoke transaction V1"
                                }
                              },
                              "title": "Invoke transaction V1"
                            }
                          ],
                          "title": "Invoke transaction"
                        }
                      },
                      "title": "Invoke transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/L1_HANDLER_TXN": {
                          "allOf": [
                            {
                              "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                              "properties": {
                                "nonce": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                  "title": "Nonce"
                                },
                                "type": {
                                  "enum": [
                                    "L1_HANDLER"
                                  ],
                                  "title": "type",
                                  "type": "string"
                                },
                                "version": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "Version of the transaction scheme",
                                  "title": "Version"
                                }
                              },
                              "required": [
                                "version",
                                "type",
                                "nonce"
                              ],
                              "title": "L1 handler transaction",
                              "type": "object"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/FUNCTION_CALL": {
                                  "description": "Function call information",
                                  "properties": {
                                    "calldata": {
                                      "description": "The parameters passed to the function",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Calldata",
                                      "type": "array"
                                    },
                                    "contract_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "Contract address"
                                    },
                                    "entry_point_selector": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Entry point selector"
                                    }
                                  },
                                  "required": [
                                    "contract_address",
                                    "entry_point_selector",
                                    "calldata"
                                  ],
                                  "title": "Function call",
                                  "type": "object"
                                }
                              },
                              "title": "Function call"
                            }
                          ],
                          "title": "L1 Handler transaction"
                        }
                      },
                      "title": "L1 handler transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DECLARE_TXN": {
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V0": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the declared class",
                                          "title": "Class hash"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x0"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "class_hash"
                                      ],
                                      "title": "Declare txn v0",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V0",
                                  "title": "Declare Contract Transaction V0"
                                }
                              },
                              "title": "Declare transaction V0"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V1": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the declared class",
                                          "title": "Class hash"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x1"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce",
                                        "class_hash"
                                      ],
                                      "title": "Declare txn v1",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V1",
                                  "title": "Declare Contract Transaction V1"
                                }
                              },
                              "title": "Declare transaction V1"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN_V2": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the declared class",
                                          "title": "Class hash"
                                        },
                                        "compiled_class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                          "title": "Compiled class hash"
                                        },
                                        "max_fee": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The maximal fee that can be charged for including the transaction",
                                          "title": "Max fee"
                                        },
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Nonce"
                                        },
                                        "sender_address": {
                                          "$ref": {
                                            "#/components/schemas/ADDRESS": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Address"
                                            }
                                          },
                                          "description": "The address of the account contract sending the declaration transaction",
                                          "title": "Sender address"
                                        },
                                        "signature": {
                                          "$ref": {
                                            "#/components/schemas/SIGNATURE": {
                                              "description": "A transaction signature",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Signature",
                                              "type": "array"
                                            }
                                          },
                                          "title": "Signature"
                                        },
                                        "type": {
                                          "enum": [
                                            "DECLARE"
                                          ],
                                          "title": "Declare",
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the transaction scheme",
                                          "enum": [
                                            "0x2"
                                          ],
                                          "title": "Version",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "sender_address",
                                        "compiled_class_hash",
                                        "max_fee",
                                        "version",
                                        "signature",
                                        "nonce",
                                        "class_hash"
                                      ],
                                      "title": "Declare txn v2",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "Declare Contract Transaction V2",
                                  "title": "Declare Transaction V2"
                                }
                              },
                              "title": "Declare transaction V2"
                            }
                          ],
                          "title": "Declare transaction"
                        }
                      },
                      "title": "Declare transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DEPLOY_TXN": {
                          "allOf": [
                            {
                              "properties": {
                                "class_hash": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The hash of the deployed contract's class",
                                  "title": "Class hash"
                                },
                                "constructor_calldata": {
                                  "description": "The parameters passed to the constructor",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Constructor calldata",
                                  "type": "array"
                                },
                                "contract_address_salt": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The salt for the address of the deployed contract",
                                  "title": "Contract address salt"
                                },
                                "type": {
                                  "enum": [
                                    "DEPLOY"
                                  ],
                                  "title": "Deploy",
                                  "type": "string"
                                },
                                "version": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "Version of the transaction scheme",
                                  "title": "Version"
                                }
                              },
                              "required": [
                                "version",
                                "type",
                                "constructor_calldata",
                                "contract_address_salt",
                                "class_hash"
                              ],
                              "title": "Deploy txn",
                              "type": "object"
                            }
                          ],
                          "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                          "title": "Deploy Contract Transaction"
                        }
                      },
                      "title": "Deploy transaction"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                          "description": "deploys a new account contract",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
                                  "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                  "properties": {
                                    "class_hash": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The hash of the deployed contract's class",
                                      "title": "Class hash"
                                    },
                                    "constructor_calldata": {
                                      "description": "The parameters passed to the constructor",
                                      "items": {
                                        "$ref": {
                                          "#/components/schemas/FELT": {
                                            "description": "A field element. represented by at most 63 hex digits",
                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                            "title": "Field element",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "title": "Constructor calldata",
                                      "type": "array"
                                    },
                                    "contract_address_salt": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The salt for the address of the deployed contract",
                                      "title": "Contract address salt"
                                    },
                                    "max_fee": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "description": "The maximal fee that can be charged for including the transaction",
                                      "title": "Max fee"
                                    },
                                    "nonce": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      },
                                      "title": "Nonce"
                                    },
                                    "signature": {
                                      "$ref": {
                                        "#/components/schemas/SIGNATURE": {
                                          "description": "A transaction signature",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Signature",
                                          "type": "array"
                                        }
                                      },
                                      "title": "Signature"
                                    },
                                    "type": {
                                      "enum": [
                                        "DEPLOY_ACCOUNT"
                                      ],
                                      "title": "Deploy account",
                                      "type": "string"
                                    },
                                    "version": {
                                      "$ref": {
                                        "#/components/schemas/NUM_AS_HEX": {
                                          "description": "An integer number in hex format (0x...)",
                                          "pattern": "^0x[a-fA-F0-9]+$",
                                          "title": "Number as hex",
                                          "type": "string"
                                        }
                                      },
                                      "description": "Version of the transaction scheme",
                                      "title": "Version"
                                    }
                                  },
                                  "required": [
                                    "max_fee",
                                    "version",
                                    "signature",
                                    "nonce",
                                    "type",
                                    "contract_address_salt",
                                    "constructor_calldata",
                                    "class_hash"
                                  ],
                                  "title": "Deploy account transaction"
                                }
                              },
                              "title": "Deploy account V1"
                            }
                          ],
                          "title": "Deploy account transaction"
                        }
                      },
                      "title": "Deploy account transaction"
                    }
                  ],
                  "title": "Transaction"
                }
              },
              "title": "transaction"
            },
            {
              "properties": {
                "transaction_hash": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "title": "transaction hash"
                }
              },
              "required": [
                "transaction_hash"
              ],
              "type": "object"
            }
          ],
          "title": "transactions in block",
          "type": "object"
        },
        "title": "Transactions",
        "type": "array"
      }
    },
    "required": [
      "transactions"
    ],
    "title": "Block body with transactions",
    "type": "object"
  },
  "BLOCK_BODY_WITH_TX_HASHES": {
    "properties": {
      "transactions": {
        "description": "The hashes of the transactions included in this block",
        "items": {
          "$ref": {
            "#/components/schemas/TXN_HASH": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The transaction hash, as assigned in StarkNet",
              "title": "Transaction hash"
            }
          },
          "description": "The hash of a single transaction"
        },
        "title": "Transaction hashes",
        "type": "array"
      }
    },
    "required": [
      "transactions"
    ],
    "title": "Block body with transaction hashes",
    "type": "object"
  },
  "BLOCK_HASH": {
    "$ref": {
      "#/components/schemas/FELT": {
        "description": "A field element. represented by at most 63 hex digits",
        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
        "title": "Field element",
        "type": "string"
      }
    },
    "title": "Block hash"
  },
  "BLOCK_HEADER": {
    "properties": {
      "block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "title": "Block hash"
      },
      "block_number": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The block number (its height)",
        "title": "Block number"
      },
      "l1_gas_price": {
        "$ref": {
          "#/components/schemas/RESOURCE_PRICE": {
            "properties": {
              "price_in_strk": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the price of one unit of the given resource, denominated in strk",
                "title": "price in strk"
              },
              "price_in_wei": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the price of one unit of the given resource, denominated in wei",
                "title": "price in wei"
              }
            },
            "required": [
              "price_in_wei"
            ],
            "type": "object"
          }
        },
        "descritpion": "The price of l1 gas in the block",
        "title": "L1 gas price"
      },
      "new_root": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The new global state root",
        "title": "New root"
      },
      "parent_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of this block's parent",
        "title": "Parent hash"
      },
      "sequencer_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The StarkNet identity of the sequencer submitting this block",
        "title": "Sequencer address"
      },
      "starknet_version": {
        "description": "Semver of the current Starknet protocol",
        "title": "Starknet version",
        "type": "string"
      },
      "timestamp": {
        "description": "The time in which the block was created, encoded in Unix time",
        "minimum": 0,
        "title": "Timestamp",
        "type": "integer"
      }
    },
    "required": [
      "block_hash",
      "parent_hash",
      "block_number",
      "new_root",
      "timestamp",
      "sequencer_address",
      "l1_gas_price",
      "starknet_version"
    ],
    "title": "Block header",
    "type": "object"
  },
  "BLOCK_ID": {
    "description": "Block hash, number or tag",
    "oneOf": [
      {
        "properties": {
          "block_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "title": "Block hash"
          }
        },
        "required": [
          "block_hash"
        ],
        "title": "Block hash",
        "type": "object"
      },
      {
        "properties": {
          "block_number": {
            "$ref": {
              "#/components/schemas/BLOCK_NUMBER": {
                "description": "The block's number (its height)",
                "minimum": 0,
                "title": "Block number",
                "type": "integer"
              }
            },
            "title": "Block number"
          }
        },
        "required": [
          "block_number"
        ],
        "title": "Block number",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_TAG": {
            "description": "A tag specifying a dynamic reference to a block",
            "enum": [
              "latest",
              "pending"
            ],
            "title": "Block tag",
            "type": "string"
          }
        },
        "title": "Block tag"
      }
    ],
    "title": "Block id"
  },
  "BLOCK_NUMBER": {
    "description": "The block's number (its height)",
    "minimum": 0,
    "title": "Block number",
    "type": "integer"
  },
  "BLOCK_STATUS": {
    "description": "The status of the block",
    "enum": [
      "PENDING",
      "ACCEPTED_ON_L2",
      "ACCEPTED_ON_L1",
      "REJECTED"
    ],
    "title": "Block status",
    "type": "string"
  },
  "BLOCK_TAG": {
    "description": "A tag specifying a dynamic reference to a block",
    "enum": [
      "latest",
      "pending"
    ],
    "title": "Block tag",
    "type": "string"
  },
  "BLOCK_WITH_TXS": {
    "allOf": [
      {
        "properties": {
          "status": {
            "$ref": {
              "#/components/schemas/BLOCK_STATUS": {
                "description": "The status of the block",
                "enum": [
                  "PENDING",
                  "ACCEPTED_ON_L2",
                  "ACCEPTED_ON_L1",
                  "REJECTED"
                ],
                "title": "Block status",
                "type": "string"
              }
            },
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "block with txs",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_HEADER": {
            "properties": {
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "description": "The block number (its height)",
                "title": "Block number"
              },
              "l1_gas_price": {
                "$ref": {
                  "#/components/schemas/RESOURCE_PRICE": {
                    "properties": {
                      "price_in_strk": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in strk",
                        "title": "price in strk"
                      },
                      "price_in_wei": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in wei",
                        "title": "price in wei"
                      }
                    },
                    "required": [
                      "price_in_wei"
                    ],
                    "type": "object"
                  }
                },
                "descritpion": "The price of l1 gas in the block",
                "title": "L1 gas price"
              },
              "new_root": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The new global state root",
                "title": "New root"
              },
              "parent_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "description": "The hash of this block's parent",
                "title": "Parent hash"
              },
              "sequencer_address": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The StarkNet identity of the sequencer submitting this block",
                "title": "Sequencer address"
              },
              "starknet_version": {
                "description": "Semver of the current Starknet protocol",
                "title": "Starknet version",
                "type": "string"
              },
              "timestamp": {
                "description": "The time in which the block was created, encoded in Unix time",
                "minimum": 0,
                "title": "Timestamp",
                "type": "integer"
              }
            },
            "required": [
              "block_hash",
              "parent_hash",
              "block_number",
              "new_root",
              "timestamp",
              "sequencer_address",
              "l1_gas_price",
              "starknet_version"
            ],
            "title": "Block header",
            "type": "object"
          }
        },
        "title": "Block header"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TXS": {
            "properties": {
              "transactions": {
                "description": "The transactions in this block",
                "items": {
                  "allOf": [
                    {
                      "$ref": {
                        "#/components/schemas/TXN": {
                          "description": "The transaction schema, as it appears inside a block",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN": {
                                  "description": "Initiate a transaction from an account",
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V0": {
                                          "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            },
                                            "max_fee": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The maximal fee that can be charged for including the transaction",
                                              "title": "Max fee"
                                            },
                                            "signature": {
                                              "$ref": {
                                                "#/components/schemas/SIGNATURE": {
                                                  "description": "A transaction signature",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Signature",
                                                  "type": "array"
                                                }
                                              },
                                              "title": "Signature"
                                            },
                                            "type": {
                                              "enum": [
                                                "INVOKE"
                                              ],
                                              "title": "Type",
                                              "type": "string"
                                            },
                                            "version": {
                                              "description": "Version of the transaction scheme",
                                              "enum": [
                                                "0x0"
                                              ],
                                              "title": "Version",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata",
                                            "max_fee",
                                            "version",
                                            "signature"
                                          ],
                                          "title": "Invoke transaction V0"
                                        }
                                      },
                                      "title": "Invoke transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "calldata": {
                                                  "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "calldata",
                                                  "type": "array"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "title": "sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "INVOKE"
                                                  ],
                                                  "title": "Type",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "Version of the transaction scheme",
                                                  "title": "Version"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "calldata",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "type": "object"
                                            }
                                          ],
                                          "description": "initiates a transaction from a given account",
                                          "title": "Invoke transaction V1"
                                        }
                                      },
                                      "title": "Invoke transaction V1"
                                    }
                                  ],
                                  "title": "Invoke transaction"
                                }
                              },
                              "title": "Invoke transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/L1_HANDLER_TXN": {
                                  "allOf": [
                                    {
                                      "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                                      "properties": {
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                          "title": "Nonce"
                                        },
                                        "type": {
                                          "enum": [
                                            "L1_HANDLER"
                                          ],
                                          "title": "type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "nonce"
                                      ],
                                      "title": "L1 handler transaction",
                                      "type": "object"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/FUNCTION_CALL": {
                                          "description": "Function call information",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            }
                                          },
                                          "required": [
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata"
                                          ],
                                          "title": "Function call",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Function call"
                                    }
                                  ],
                                  "title": "L1 Handler transaction"
                                }
                              },
                              "title": "L1 handler transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN": {
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V0": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the declared class",
                                                  "title": "Class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x0"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "class_hash"
                                              ],
                                              "title": "Declare txn v0",
                                              "type": "object"
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V0",
                                          "title": "Declare Contract Transaction V0"
                                        }
                                      },
                                      "title": "Declare transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the declared class",
                                                  "title": "Class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x1"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce",
                                                "class_hash"
                                              ],
                                              "title": "Declare txn v1",
                                              "type": "object"
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V1",
                                          "title": "Declare Contract Transaction V1"
                                        }
                                      },
                                      "title": "Declare transaction V1"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V2": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the declared class",
                                                  "title": "Class hash"
                                                },
                                                "compiled_class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                                  "title": "Compiled class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x2"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "compiled_class_hash",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce",
                                                "class_hash"
                                              ],
                                              "title": "Declare txn v2",
                                              "type": "object"
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V2",
                                          "title": "Declare Transaction V2"
                                        }
                                      },
                                      "title": "Declare transaction V2"
                                    }
                                  ],
                                  "title": "Declare transaction"
                                }
                              },
                              "title": "Declare transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_TXN": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the deployed contract's class",
                                          "title": "Class hash"
                                        },
                                        "constructor_calldata": {
                                          "description": "The parameters passed to the constructor",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Constructor calldata",
                                          "type": "array"
                                        },
                                        "contract_address_salt": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The salt for the address of the deployed contract",
                                          "title": "Contract address salt"
                                        },
                                        "type": {
                                          "enum": [
                                            "DEPLOY"
                                          ],
                                          "title": "Deploy",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "constructor_calldata",
                                        "contract_address_salt",
                                        "class_hash"
                                      ],
                                      "title": "Deploy txn",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                                  "title": "Deploy Contract Transaction"
                                }
                              },
                              "title": "Deploy transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                                  "description": "deploys a new account contract",
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
                                          "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the deployed contract's class",
                                              "title": "Class hash"
                                            },
                                            "constructor_calldata": {
                                              "description": "The parameters passed to the constructor",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Constructor calldata",
                                              "type": "array"
                                            },
                                            "contract_address_salt": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The salt for the address of the deployed contract",
                                              "title": "Contract address salt"
                                            },
                                            "max_fee": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The maximal fee that can be charged for including the transaction",
                                              "title": "Max fee"
                                            },
                                            "nonce": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Nonce"
                                            },
                                            "signature": {
                                              "$ref": {
                                                "#/components/schemas/SIGNATURE": {
                                                  "description": "A transaction signature",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Signature",
                                                  "type": "array"
                                                }
                                              },
                                              "title": "Signature"
                                            },
                                            "type": {
                                              "enum": [
                                                "DEPLOY_ACCOUNT"
                                              ],
                                              "title": "Deploy account",
                                              "type": "string"
                                            },
                                            "version": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "Version of the transaction scheme",
                                              "title": "Version"
                                            }
                                          },
                                          "required": [
                                            "max_fee",
                                            "version",
                                            "signature",
                                            "nonce",
                                            "type",
                                            "contract_address_salt",
                                            "constructor_calldata",
                                            "class_hash"
                                          ],
                                          "title": "Deploy account transaction"
                                        }
                                      },
                                      "title": "Deploy account V1"
                                    }
                                  ],
                                  "title": "Deploy account transaction"
                                }
                              },
                              "title": "Deploy account transaction"
                            }
                          ],
                          "title": "Transaction"
                        }
                      },
                      "title": "transaction"
                    },
                    {
                      "properties": {
                        "transaction_hash": {
                          "$ref": {
                            "#/components/schemas/TXN_HASH": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The transaction hash, as assigned in StarkNet",
                              "title": "Transaction hash"
                            }
                          },
                          "title": "transaction hash"
                        }
                      },
                      "required": [
                        "transaction_hash"
                      ],
                      "type": "object"
                    }
                  ],
                  "title": "transactions in block",
                  "type": "object"
                },
                "title": "Transactions",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transactions",
            "type": "object"
          }
        },
        "title": "Block body with transactions"
      }
    ],
    "description": "The block object",
    "title": "Block with transactions"
  },
  "BLOCK_WITH_TX_HASHES": {
    "allOf": [
      {
        "properties": {
          "status": {
            "$ref": {
              "#/components/schemas/BLOCK_STATUS": {
                "description": "The status of the block",
                "enum": [
                  "PENDING",
                  "ACCEPTED_ON_L2",
                  "ACCEPTED_ON_L1",
                  "REJECTED"
                ],
                "title": "Block status",
                "type": "string"
              }
            },
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "Block status",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_HEADER": {
            "properties": {
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "description": "The block number (its height)",
                "title": "Block number"
              },
              "l1_gas_price": {
                "$ref": {
                  "#/components/schemas/RESOURCE_PRICE": {
                    "properties": {
                      "price_in_strk": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in strk",
                        "title": "price in strk"
                      },
                      "price_in_wei": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in wei",
                        "title": "price in wei"
                      }
                    },
                    "required": [
                      "price_in_wei"
                    ],
                    "type": "object"
                  }
                },
                "descritpion": "The price of l1 gas in the block",
                "title": "L1 gas price"
              },
              "new_root": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The new global state root",
                "title": "New root"
              },
              "parent_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "description": "The hash of this block's parent",
                "title": "Parent hash"
              },
              "sequencer_address": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The StarkNet identity of the sequencer submitting this block",
                "title": "Sequencer address"
              },
              "starknet_version": {
                "description": "Semver of the current Starknet protocol",
                "title": "Starknet version",
                "type": "string"
              },
              "timestamp": {
                "description": "The time in which the block was created, encoded in Unix time",
                "minimum": 0,
                "title": "Timestamp",
                "type": "integer"
              }
            },
            "required": [
              "block_hash",
              "parent_hash",
              "block_number",
              "new_root",
              "timestamp",
              "sequencer_address",
              "l1_gas_price",
              "starknet_version"
            ],
            "title": "Block header",
            "type": "object"
          }
        },
        "title": "Block header"
      },
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
            "properties": {
              "transactions": {
                "description": "The hashes of the transactions included in this block",
                "items": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "description": "The hash of a single transaction"
                },
                "title": "Transaction hashes",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transaction hashes",
            "type": "object"
          }
        },
        "title": "Block body with transaction hashes"
      }
    ],
    "description": "The block object",
    "title": "Block with transaction hashes"
  },
  "BROADCASTED_DECLARE_TXN": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/BROADCASTED_DECLARE_TXN_V1": {
            "allOf": [
              {
                "properties": {
                  "contract_class": {
                    "$ref": {
                      "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                        "description": "The definition of a StarkNet contract class",
                        "properties": {
                          "abi": {
                            "$ref": {
                              "#/components/schemas/CONTRACT_ABI": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                      "oneOf": [
                                        {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                              "properties": {
                                                "inputs": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "title": "Typed parameter",
                                                  "type": "array"
                                                },
                                                "name": {
                                                  "description": "The function name",
                                                  "title": "Function name",
                                                  "type": "string"
                                                },
                                                "outputs": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "title": "Typed parameter",
                                                  "type": "array"
                                                },
                                                "stateMutability": {
                                                  "$ref": {
                                                    "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                      "enum": [
                                                        "view"
                                                      ],
                                                      "title": "Function state mutability type",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Function state mutability"
                                                },
                                                "type": {
                                                  "$ref": {
                                                    "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                      "enum": [
                                                        "function",
                                                        "l1_handler",
                                                        "constructor"
                                                      ],
                                                      "title": "Function ABI type",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Function ABI type"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "name",
                                                "inputs",
                                                "outputs"
                                              ],
                                              "title": "Function ABI entry",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Function ABI entry"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/EVENT_ABI_ENTRY": {
                                              "properties": {
                                                "data": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "title": "Typed parameter",
                                                  "type": "array"
                                                },
                                                "keys": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "title": "Typed parameter",
                                                  "type": "array"
                                                },
                                                "name": {
                                                  "description": "The event name",
                                                  "title": "Event name",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "$ref": {
                                                    "#/components/schemas/EVENT_ABI_TYPE": {
                                                      "enum": [
                                                        "event"
                                                      ],
                                                      "title": "Event ABI type",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Event ABI type"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "name",
                                                "keys",
                                                "data"
                                              ],
                                              "title": "Event ABI entry",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Event ABI entry"
                                        },
                                        {
                                          "$ref": {
                                            "#/components/schemas/STRUCT_ABI_ENTRY": {
                                              "properties": {
                                                "members": {
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/STRUCT_MEMBER": {
                                                        "allOf": [
                                                          {
                                                            "$ref": {
                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                "properties": {
                                                                  "name": {
                                                                    "description": "The parameter's name",
                                                                    "title": "Parameter name",
                                                                    "type": "string"
                                                                  },
                                                                  "type": {
                                                                    "description": "The parameter's type",
                                                                    "title": "Parameter type",
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "name",
                                                                  "type"
                                                                ],
                                                                "title": "Typed parameter",
                                                                "type": "object"
                                                              }
                                                            },
                                                            "title": "Typed parameter"
                                                          },
                                                          {
                                                            "properties": {
                                                              "offset": {
                                                                "description": "offset of this property within the struct",
                                                                "title": "Offset",
                                                                "type": "integer"
                                                              }
                                                            },
                                                            "title": "Offset",
                                                            "type": "object"
                                                          }
                                                        ],
                                                        "title": "Struct member"
                                                      }
                                                    }
                                                  },
                                                  "title": "Members",
                                                  "type": "array"
                                                },
                                                "name": {
                                                  "description": "The struct name",
                                                  "title": "Struct name",
                                                  "type": "string"
                                                },
                                                "size": {
                                                  "minimum": 1,
                                                  "title": "Size",
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "$ref": {
                                                    "#/components/schemas/STRUCT_ABI_TYPE": {
                                                      "enum": [
                                                        "struct"
                                                      ],
                                                      "title": "Struct ABI type",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Struct ABI type"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "name",
                                                "size",
                                                "members"
                                              ],
                                              "title": "Struct ABI entry",
                                              "type": "object"
                                            }
                                          },
                                          "title": "Struct ABI entry"
                                        }
                                      ],
                                      "title": "Contract ABI entry"
                                    }
                                  }
                                },
                                "title": "Contract ABI",
                                "type": "array"
                              }
                            },
                            "title": "Contract ABI"
                          },
                          "entry_points_by_type": {
                            "properties": {
                              "CONSTRUCTOR": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                      "properties": {
                                        "offset": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The offset of the entry point in the program",
                                          "title": "Offset"
                                        },
                                        "selector": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "A unique identifier of the entry point (function) in the program",
                                          "title": "Selector"
                                        }
                                      },
                                      "required": [
                                        "offset",
                                        "selector"
                                      ],
                                      "title": "Deprecated Cairo entry point",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Deprecated constructor",
                                "type": "array"
                              },
                              "EXTERNAL": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                      "properties": {
                                        "offset": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The offset of the entry point in the program",
                                          "title": "Offset"
                                        },
                                        "selector": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "A unique identifier of the entry point (function) in the program",
                                          "title": "Selector"
                                        }
                                      },
                                      "required": [
                                        "offset",
                                        "selector"
                                      ],
                                      "title": "Deprecated Cairo entry point",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Deprecated external",
                                "type": "array"
                              },
                              "L1_HANDLER": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                      "properties": {
                                        "offset": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The offset of the entry point in the program",
                                          "title": "Offset"
                                        },
                                        "selector": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "A unique identifier of the entry point (function) in the program",
                                          "title": "Selector"
                                        }
                                      },
                                      "required": [
                                        "offset",
                                        "selector"
                                      ],
                                      "title": "Deprecated Cairo entry point",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Deprecated L1 handler",
                                "type": "array"
                              }
                            },
                            "title": "Deprecated entry points by type",
                            "type": "object"
                          },
                          "program": {
                            "description": "A base64 representation of the compressed program code",
                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                            "title": "Program",
                            "type": "string"
                          }
                        },
                        "required": [
                          "program",
                          "entry_points_by_type"
                        ],
                        "title": "Deprecated contract class",
                        "type": "object"
                      }
                    },
                    "description": "The class to be declared",
                    "title": "Contract class"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce",
                  "contract_class"
                ],
                "title": "Declare txn v1",
                "type": "object"
              }
            ],
            "title": "Broadcasted declare contract transaction V1"
          }
        },
        "title": "Broadcasted declare transaction V1"
      },
      {
        "$ref": {
          "#/components/schemas/BROADCASTED_DECLARE_TXN_V2": {
            "allOf": [
              {
                "properties": {
                  "compiled_class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                    "title": "Compiled class hash"
                  },
                  "contract_class": {
                    "$ref": {
                      "#/components/schemas/CONTRACT_CLASS": {
                        "properties": {
                          "abi": {
                            "description": "The class ABI, as supplied by the user declaring the class",
                            "title": "ABI",
                            "type": "string"
                          },
                          "contract_class_version": {
                            "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                            "title": "Contract class version",
                            "type": "string"
                          },
                          "entry_points_by_type": {
                            "properties": {
                              "CONSTRUCTOR": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/SIERRA_ENTRY_POINT": {
                                      "properties": {
                                        "function_idx": {
                                          "description": "The index of the function in the program",
                                          "title": "Function index",
                                          "type": "integer"
                                        },
                                        "selector": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "A unique identifier of the entry point (function) in the program",
                                          "title": "Selector"
                                        }
                                      },
                                      "required": [
                                        "selector",
                                        "function_idx"
                                      ],
                                      "title": "Sierra entry point",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "Constructor",
                                "type": "array"
                              },
                              "EXTERNAL": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/SIERRA_ENTRY_POINT": {
                                      "properties": {
                                        "function_idx": {
                                          "description": "The index of the function in the program",
                                          "title": "Function index",
                                          "type": "integer"
                                        },
                                        "selector": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "A unique identifier of the entry point (function) in the program",
                                          "title": "Selector"
                                        }
                                      },
                                      "required": [
                                        "selector",
                                        "function_idx"
                                      ],
                                      "title": "Sierra entry point",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "External",
                                "type": "array"
                              },
                              "L1_HANDLER": {
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/SIERRA_ENTRY_POINT": {
                                      "properties": {
                                        "function_idx": {
                                          "description": "The index of the function in the program",
                                          "title": "Function index",
                                          "type": "integer"
                                        },
                                        "selector": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "A unique identifier of the entry point (function) in the program",
                                          "title": "Selector"
                                        }
                                      },
                                      "required": [
                                        "selector",
                                        "function_idx"
                                      ],
                                      "title": "Sierra entry point",
                                      "type": "object"
                                    }
                                  }
                                },
                                "title": "L1 handler",
                                "type": "array"
                              }
                            },
                            "required": [
                              "CONSTRUCTOR",
                              "EXTERNAL",
                              "L1_HANDLER"
                            ],
                            "title": "Entry points by type",
                            "type": "object"
                          },
                          "sierra_program": {
                            "description": "The list of Sierra instructions of which the program consists",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Sierra program",
                            "type": "array"
                          }
                        },
                        "required": [
                          "sierra_program",
                          "contract_class_version",
                          "entry_points_by_type"
                        ],
                        "title": "Contract class",
                        "type": "object"
                      }
                    },
                    "description": "The class to be declared",
                    "title": "Contract class"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "compiled_class_hash",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce",
                  "contract_class"
                ],
                "title": "Declare txn v2",
                "type": "object"
              }
            ],
            "description": "Broadcasted declare Contract Transaction V2",
            "title": "Broadcasted declare Transaction V2"
          }
        },
        "title": "Broadcasted declare transaction V2"
      }
    ],
    "title": "Broadcasted declare transaction"
  },
  "BROADCASTED_DECLARE_TXN_V1": {
    "allOf": [
      {
        "properties": {
          "contract_class": {
            "$ref": {
              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                "description": "The definition of a StarkNet contract class",
                "properties": {
                  "abi": {
                    "$ref": {
                      "#/components/schemas/CONTRACT_ABI": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                              "oneOf": [
                                {
                                  "$ref": {
                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                      "properties": {
                                        "inputs": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The function name",
                                          "title": "Function name",
                                          "type": "string"
                                        },
                                        "outputs": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "stateMutability": {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                              "enum": [
                                                "view"
                                              ],
                                              "title": "Function state mutability type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Function state mutability"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                              "enum": [
                                                "function",
                                                "l1_handler",
                                                "constructor"
                                              ],
                                              "title": "Function ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Function ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "inputs",
                                        "outputs"
                                      ],
                                      "title": "Function ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Function ABI entry"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/TYPED_PARAMETER": {
                                                "properties": {
                                                  "name": {
                                                    "description": "The parameter's name",
                                                    "title": "Parameter name",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "The parameter's type",
                                                    "title": "Parameter type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "type"
                                                ],
                                                "title": "Typed parameter",
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "title": "Typed parameter",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The event name",
                                          "title": "Event name",
                                          "type": "string"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                              "enum": [
                                                "event"
                                              ],
                                              "title": "Event ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Event ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event ABI entry"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                      "properties": {
                                        "members": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/STRUCT_MEMBER": {
                                                "allOf": [
                                                  {
                                                    "$ref": {
                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                        "properties": {
                                                          "name": {
                                                            "description": "The parameter's name",
                                                            "title": "Parameter name",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "The parameter's type",
                                                            "title": "Parameter type",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "type"
                                                        ],
                                                        "title": "Typed parameter",
                                                        "type": "object"
                                                      }
                                                    },
                                                    "title": "Typed parameter"
                                                  },
                                                  {
                                                    "properties": {
                                                      "offset": {
                                                        "description": "offset of this property within the struct",
                                                        "title": "Offset",
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "title": "Offset",
                                                    "type": "object"
                                                  }
                                                ],
                                                "title": "Struct member"
                                              }
                                            }
                                          },
                                          "title": "Members",
                                          "type": "array"
                                        },
                                        "name": {
                                          "description": "The struct name",
                                          "title": "Struct name",
                                          "type": "string"
                                        },
                                        "size": {
                                          "minimum": 1,
                                          "title": "Size",
                                          "type": "integer"
                                        },
                                        "type": {
                                          "$ref": {
                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                              "enum": [
                                                "struct"
                                              ],
                                              "title": "Struct ABI type",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Struct ABI type"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "name",
                                        "size",
                                        "members"
                                      ],
                                      "title": "Struct ABI entry",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Struct ABI entry"
                                }
                              ],
                              "title": "Contract ABI entry"
                            }
                          }
                        },
                        "title": "Contract ABI",
                        "type": "array"
                      }
                    },
                    "title": "Contract ABI"
                  },
                  "entry_points_by_type": {
                    "properties": {
                      "CONSTRUCTOR": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated constructor",
                        "type": "array"
                      },
                      "EXTERNAL": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated external",
                        "type": "array"
                      },
                      "L1_HANDLER": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                              "properties": {
                                "offset": {
                                  "$ref": {
                                    "#/components/schemas/NUM_AS_HEX": {
                                      "description": "An integer number in hex format (0x...)",
                                      "pattern": "^0x[a-fA-F0-9]+$",
                                      "title": "Number as hex",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The offset of the entry point in the program",
                                  "title": "Offset"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "offset",
                                "selector"
                              ],
                              "title": "Deprecated Cairo entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Deprecated L1 handler",
                        "type": "array"
                      }
                    },
                    "title": "Deprecated entry points by type",
                    "type": "object"
                  },
                  "program": {
                    "description": "A base64 representation of the compressed program code",
                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                    "title": "Program",
                    "type": "string"
                  }
                },
                "required": [
                  "program",
                  "entry_points_by_type"
                ],
                "title": "Deprecated contract class",
                "type": "object"
              }
            },
            "description": "The class to be declared",
            "title": "Contract class"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "type",
          "sender_address",
          "max_fee",
          "version",
          "signature",
          "nonce",
          "contract_class"
        ],
        "title": "Declare txn v1",
        "type": "object"
      }
    ],
    "title": "Broadcasted declare contract transaction V1"
  },
  "BROADCASTED_DECLARE_TXN_V2": {
    "allOf": [
      {
        "properties": {
          "compiled_class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
            "title": "Compiled class hash"
          },
          "contract_class": {
            "$ref": {
              "#/components/schemas/CONTRACT_CLASS": {
                "properties": {
                  "abi": {
                    "description": "The class ABI, as supplied by the user declaring the class",
                    "title": "ABI",
                    "type": "string"
                  },
                  "contract_class_version": {
                    "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                    "title": "Contract class version",
                    "type": "string"
                  },
                  "entry_points_by_type": {
                    "properties": {
                      "CONSTRUCTOR": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Constructor",
                        "type": "array"
                      },
                      "EXTERNAL": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "External",
                        "type": "array"
                      },
                      "L1_HANDLER": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                              "properties": {
                                "function_idx": {
                                  "description": "The index of the function in the program",
                                  "title": "Function index",
                                  "type": "integer"
                                },
                                "selector": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "A unique identifier of the entry point (function) in the program",
                                  "title": "Selector"
                                }
                              },
                              "required": [
                                "selector",
                                "function_idx"
                              ],
                              "title": "Sierra entry point",
                              "type": "object"
                            }
                          }
                        },
                        "title": "L1 handler",
                        "type": "array"
                      }
                    },
                    "required": [
                      "CONSTRUCTOR",
                      "EXTERNAL",
                      "L1_HANDLER"
                    ],
                    "title": "Entry points by type",
                    "type": "object"
                  },
                  "sierra_program": {
                    "description": "The list of Sierra instructions of which the program consists",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Sierra program",
                    "type": "array"
                  }
                },
                "required": [
                  "sierra_program",
                  "contract_class_version",
                  "entry_points_by_type"
                ],
                "title": "Contract class",
                "type": "object"
              }
            },
            "description": "The class to be declared",
            "title": "Contract class"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "type",
          "sender_address",
          "compiled_class_hash",
          "max_fee",
          "version",
          "signature",
          "nonce",
          "contract_class"
        ],
        "title": "Declare txn v2",
        "type": "object"
      }
    ],
    "description": "Broadcasted declare Contract Transaction V2",
    "title": "Broadcasted declare Transaction V2"
  },
  "BROADCASTED_DEPLOY_ACCOUNT_TXN": {
    "$ref": {
      "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
        "description": "deploys a new account contract",
        "oneOf": [
          {
            "$ref": {
              "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
                "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                "properties": {
                  "class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the deployed contract's class",
                    "title": "Class hash"
                  },
                  "constructor_calldata": {
                    "description": "The parameters passed to the constructor",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Constructor calldata",
                    "type": "array"
                  },
                  "contract_address_salt": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The salt for the address of the deployed contract",
                    "title": "Contract address salt"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY_ACCOUNT"
                    ],
                    "title": "Deploy account",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "max_fee",
                  "version",
                  "signature",
                  "nonce",
                  "type",
                  "contract_address_salt",
                  "constructor_calldata",
                  "class_hash"
                ],
                "title": "Deploy account transaction"
              }
            },
            "title": "Deploy account V1"
          }
        ],
        "title": "Deploy account transaction"
      }
    },
    "title": "Broadcasted deploy account transaction"
  },
  "BROADCASTED_INVOKE_TXN": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_V0": {
            "description": "invokes a specific function in the desired contract (not necessarily an account)",
            "properties": {
              "calldata": {
                "description": "The parameters passed to the function",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Calldata",
                "type": "array"
              },
              "contract_address": {
                "$ref": {
                  "#/components/schemas/ADDRESS": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Address"
                  }
                },
                "title": "Contract address"
              },
              "entry_point_selector": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Entry point selector"
              },
              "max_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The maximal fee that can be charged for including the transaction",
                "title": "Max fee"
              },
              "signature": {
                "$ref": {
                  "#/components/schemas/SIGNATURE": {
                    "description": "A transaction signature",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Signature",
                    "type": "array"
                  }
                },
                "title": "Signature"
              },
              "type": {
                "enum": [
                  "INVOKE"
                ],
                "title": "Type",
                "type": "string"
              },
              "version": {
                "description": "Version of the transaction scheme",
                "enum": [
                  "0x0"
                ],
                "title": "Version",
                "type": "string"
              }
            },
            "required": [
              "type",
              "contract_address",
              "entry_point_selector",
              "calldata",
              "max_fee",
              "version",
              "signature"
            ],
            "title": "Invoke transaction V0"
          }
        },
        "title": "Broadcasted invoke transaction V0"
      },
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_V1": {
            "allOf": [
              {
                "properties": {
                  "calldata": {
                    "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "calldata",
                    "type": "array"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "title": "sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "INVOKE"
                    ],
                    "title": "Type",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "calldata",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce"
                ],
                "type": "object"
              }
            ],
            "description": "initiates a transaction from a given account",
            "title": "Invoke transaction V1"
          }
        },
        "title": "Broadcasted invoke transaction V1"
      }
    ],
    "title": "Broadcasted invoke transaction"
  },
  "BROADCASTED_TXN": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/BROADCASTED_INVOKE_TXN": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_V0": {
                    "description": "invokes a specific function in the desired contract (not necessarily an account)",
                    "properties": {
                      "calldata": {
                        "description": "The parameters passed to the function",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Calldata",
                        "type": "array"
                      },
                      "contract_address": {
                        "$ref": {
                          "#/components/schemas/ADDRESS": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Address"
                          }
                        },
                        "title": "Contract address"
                      },
                      "entry_point_selector": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Entry point selector"
                      },
                      "max_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The maximal fee that can be charged for including the transaction",
                        "title": "Max fee"
                      },
                      "signature": {
                        "$ref": {
                          "#/components/schemas/SIGNATURE": {
                            "description": "A transaction signature",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Signature",
                            "type": "array"
                          }
                        },
                        "title": "Signature"
                      },
                      "type": {
                        "enum": [
                          "INVOKE"
                        ],
                        "title": "Type",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the transaction scheme",
                        "enum": [
                          "0x0"
                        ],
                        "title": "Version",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "contract_address",
                      "entry_point_selector",
                      "calldata",
                      "max_fee",
                      "version",
                      "signature"
                    ],
                    "title": "Invoke transaction V0"
                  }
                },
                "title": "Broadcasted invoke transaction V0"
              },
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_V1": {
                    "allOf": [
                      {
                        "properties": {
                          "calldata": {
                            "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "calldata",
                            "type": "array"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "title": "sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "INVOKE"
                            ],
                            "title": "Type",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "calldata",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "initiates a transaction from a given account",
                    "title": "Invoke transaction V1"
                  }
                },
                "title": "Broadcasted invoke transaction V1"
              }
            ],
            "title": "Broadcasted invoke transaction"
          }
        }
      },
      {
        "$ref": {
          "#/components/schemas/BROADCASTED_DECLARE_TXN": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/BROADCASTED_DECLARE_TXN_V1": {
                    "allOf": [
                      {
                        "properties": {
                          "contract_class": {
                            "$ref": {
                              "#/components/schemas/DEPRECATED_CONTRACT_CLASS": {
                                "description": "The definition of a StarkNet contract class",
                                "properties": {
                                  "abi": {
                                    "$ref": {
                                      "#/components/schemas/CONTRACT_ABI": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/CONTRACT_ABI_ENTRY": {
                                              "oneOf": [
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/FUNCTION_ABI_ENTRY": {
                                                      "properties": {
                                                        "inputs": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                "properties": {
                                                                  "name": {
                                                                    "description": "The parameter's name",
                                                                    "title": "Parameter name",
                                                                    "type": "string"
                                                                  },
                                                                  "type": {
                                                                    "description": "The parameter's type",
                                                                    "title": "Parameter type",
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "name",
                                                                  "type"
                                                                ],
                                                                "title": "Typed parameter",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Typed parameter",
                                                          "type": "array"
                                                        },
                                                        "name": {
                                                          "description": "The function name",
                                                          "title": "Function name",
                                                          "type": "string"
                                                        },
                                                        "outputs": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                "properties": {
                                                                  "name": {
                                                                    "description": "The parameter's name",
                                                                    "title": "Parameter name",
                                                                    "type": "string"
                                                                  },
                                                                  "type": {
                                                                    "description": "The parameter's type",
                                                                    "title": "Parameter type",
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "name",
                                                                  "type"
                                                                ],
                                                                "title": "Typed parameter",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Typed parameter",
                                                          "type": "array"
                                                        },
                                                        "stateMutability": {
                                                          "$ref": {
                                                            "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                                              "enum": [
                                                                "view"
                                                              ],
                                                              "title": "Function state mutability type",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Function state mutability"
                                                        },
                                                        "type": {
                                                          "$ref": {
                                                            "#/components/schemas/FUNCTION_ABI_TYPE": {
                                                              "enum": [
                                                                "function",
                                                                "l1_handler",
                                                                "constructor"
                                                              ],
                                                              "title": "Function ABI type",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Function ABI type"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "name",
                                                        "inputs",
                                                        "outputs"
                                                      ],
                                                      "title": "Function ABI entry",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "title": "Function ABI entry"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/EVENT_ABI_ENTRY": {
                                                      "properties": {
                                                        "data": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                "properties": {
                                                                  "name": {
                                                                    "description": "The parameter's name",
                                                                    "title": "Parameter name",
                                                                    "type": "string"
                                                                  },
                                                                  "type": {
                                                                    "description": "The parameter's type",
                                                                    "title": "Parameter type",
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "name",
                                                                  "type"
                                                                ],
                                                                "title": "Typed parameter",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Typed parameter",
                                                          "type": "array"
                                                        },
                                                        "keys": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/TYPED_PARAMETER": {
                                                                "properties": {
                                                                  "name": {
                                                                    "description": "The parameter's name",
                                                                    "title": "Parameter name",
                                                                    "type": "string"
                                                                  },
                                                                  "type": {
                                                                    "description": "The parameter's type",
                                                                    "title": "Parameter type",
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "name",
                                                                  "type"
                                                                ],
                                                                "title": "Typed parameter",
                                                                "type": "object"
                                                              }
                                                            }
                                                          },
                                                          "title": "Typed parameter",
                                                          "type": "array"
                                                        },
                                                        "name": {
                                                          "description": "The event name",
                                                          "title": "Event name",
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "$ref": {
                                                            "#/components/schemas/EVENT_ABI_TYPE": {
                                                              "enum": [
                                                                "event"
                                                              ],
                                                              "title": "Event ABI type",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Event ABI type"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "name",
                                                        "keys",
                                                        "data"
                                                      ],
                                                      "title": "Event ABI entry",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "title": "Event ABI entry"
                                                },
                                                {
                                                  "$ref": {
                                                    "#/components/schemas/STRUCT_ABI_ENTRY": {
                                                      "properties": {
                                                        "members": {
                                                          "items": {
                                                            "$ref": {
                                                              "#/components/schemas/STRUCT_MEMBER": {
                                                                "allOf": [
                                                                  {
                                                                    "$ref": {
                                                                      "#/components/schemas/TYPED_PARAMETER": {
                                                                        "properties": {
                                                                          "name": {
                                                                            "description": "The parameter's name",
                                                                            "title": "Parameter name",
                                                                            "type": "string"
                                                                          },
                                                                          "type": {
                                                                            "description": "The parameter's type",
                                                                            "title": "Parameter type",
                                                                            "type": "string"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "name",
                                                                          "type"
                                                                        ],
                                                                        "title": "Typed parameter",
                                                                        "type": "object"
                                                                      }
                                                                    },
                                                                    "title": "Typed parameter"
                                                                  },
                                                                  {
                                                                    "properties": {
                                                                      "offset": {
                                                                        "description": "offset of this property within the struct",
                                                                        "title": "Offset",
                                                                        "type": "integer"
                                                                      }
                                                                    },
                                                                    "title": "Offset",
                                                                    "type": "object"
                                                                  }
                                                                ],
                                                                "title": "Struct member"
                                                              }
                                                            }
                                                          },
                                                          "title": "Members",
                                                          "type": "array"
                                                        },
                                                        "name": {
                                                          "description": "The struct name",
                                                          "title": "Struct name",
                                                          "type": "string"
                                                        },
                                                        "size": {
                                                          "minimum": 1,
                                                          "title": "Size",
                                                          "type": "integer"
                                                        },
                                                        "type": {
                                                          "$ref": {
                                                            "#/components/schemas/STRUCT_ABI_TYPE": {
                                                              "enum": [
                                                                "struct"
                                                              ],
                                                              "title": "Struct ABI type",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "title": "Struct ABI type"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "name",
                                                        "size",
                                                        "members"
                                                      ],
                                                      "title": "Struct ABI entry",
                                                      "type": "object"
                                                    }
                                                  },
                                                  "title": "Struct ABI entry"
                                                }
                                              ],
                                              "title": "Contract ABI entry"
                                            }
                                          }
                                        },
                                        "title": "Contract ABI",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Contract ABI"
                                  },
                                  "entry_points_by_type": {
                                    "properties": {
                                      "CONSTRUCTOR": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                              "properties": {
                                                "offset": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The offset of the entry point in the program",
                                                  "title": "Offset"
                                                },
                                                "selector": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                  "title": "Selector"
                                                }
                                              },
                                              "required": [
                                                "offset",
                                                "selector"
                                              ],
                                              "title": "Deprecated Cairo entry point",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "Deprecated constructor",
                                        "type": "array"
                                      },
                                      "EXTERNAL": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                              "properties": {
                                                "offset": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The offset of the entry point in the program",
                                                  "title": "Offset"
                                                },
                                                "selector": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                  "title": "Selector"
                                                }
                                              },
                                              "required": [
                                                "offset",
                                                "selector"
                                              ],
                                              "title": "Deprecated Cairo entry point",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "Deprecated external",
                                        "type": "array"
                                      },
                                      "L1_HANDLER": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                                              "properties": {
                                                "offset": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The offset of the entry point in the program",
                                                  "title": "Offset"
                                                },
                                                "selector": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                  "title": "Selector"
                                                }
                                              },
                                              "required": [
                                                "offset",
                                                "selector"
                                              ],
                                              "title": "Deprecated Cairo entry point",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "Deprecated L1 handler",
                                        "type": "array"
                                      }
                                    },
                                    "title": "Deprecated entry points by type",
                                    "type": "object"
                                  },
                                  "program": {
                                    "description": "A base64 representation of the compressed program code",
                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
                                    "title": "Program",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "program",
                                  "entry_points_by_type"
                                ],
                                "title": "Deprecated contract class",
                                "type": "object"
                              }
                            },
                            "description": "The class to be declared",
                            "title": "Contract class"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "contract_class"
                        ],
                        "title": "Declare txn v1",
                        "type": "object"
                      }
                    ],
                    "title": "Broadcasted declare contract transaction V1"
                  }
                },
                "title": "Broadcasted declare transaction V1"
              },
              {
                "$ref": {
                  "#/components/schemas/BROADCASTED_DECLARE_TXN_V2": {
                    "allOf": [
                      {
                        "properties": {
                          "compiled_class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                            "title": "Compiled class hash"
                          },
                          "contract_class": {
                            "$ref": {
                              "#/components/schemas/CONTRACT_CLASS": {
                                "properties": {
                                  "abi": {
                                    "description": "The class ABI, as supplied by the user declaring the class",
                                    "title": "ABI",
                                    "type": "string"
                                  },
                                  "contract_class_version": {
                                    "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
                                    "title": "Contract class version",
                                    "type": "string"
                                  },
                                  "entry_points_by_type": {
                                    "properties": {
                                      "CONSTRUCTOR": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                              "properties": {
                                                "function_idx": {
                                                  "description": "The index of the function in the program",
                                                  "title": "Function index",
                                                  "type": "integer"
                                                },
                                                "selector": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                  "title": "Selector"
                                                }
                                              },
                                              "required": [
                                                "selector",
                                                "function_idx"
                                              ],
                                              "title": "Sierra entry point",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "Constructor",
                                        "type": "array"
                                      },
                                      "EXTERNAL": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                              "properties": {
                                                "function_idx": {
                                                  "description": "The index of the function in the program",
                                                  "title": "Function index",
                                                  "type": "integer"
                                                },
                                                "selector": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                  "title": "Selector"
                                                }
                                              },
                                              "required": [
                                                "selector",
                                                "function_idx"
                                              ],
                                              "title": "Sierra entry point",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "External",
                                        "type": "array"
                                      },
                                      "L1_HANDLER": {
                                        "items": {
                                          "$ref": {
                                            "#/components/schemas/SIERRA_ENTRY_POINT": {
                                              "properties": {
                                                "function_idx": {
                                                  "description": "The index of the function in the program",
                                                  "title": "Function index",
                                                  "type": "integer"
                                                },
                                                "selector": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "A unique identifier of the entry point (function) in the program",
                                                  "title": "Selector"
                                                }
                                              },
                                              "required": [
                                                "selector",
                                                "function_idx"
                                              ],
                                              "title": "Sierra entry point",
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "title": "L1 handler",
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "CONSTRUCTOR",
                                      "EXTERNAL",
                                      "L1_HANDLER"
                                    ],
                                    "title": "Entry points by type",
                                    "type": "object"
                                  },
                                  "sierra_program": {
                                    "description": "The list of Sierra instructions of which the program consists",
                                    "items": {
                                      "$ref": {
                                        "#/components/schemas/FELT": {
                                          "description": "A field element. represented by at most 63 hex digits",
                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                          "title": "Field element",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "title": "Sierra program",
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "sierra_program",
                                  "contract_class_version",
                                  "entry_points_by_type"
                                ],
                                "title": "Contract class",
                                "type": "object"
                              }
                            },
                            "description": "The class to be declared",
                            "title": "Contract class"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "compiled_class_hash",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "contract_class"
                        ],
                        "title": "Declare txn v2",
                        "type": "object"
                      }
                    ],
                    "description": "Broadcasted declare Contract Transaction V2",
                    "title": "Broadcasted declare Transaction V2"
                  }
                },
                "title": "Broadcasted declare transaction V2"
              }
            ],
            "title": "Broadcasted declare transaction"
          }
        }
      },
      {
        "$ref": {
          "#/components/schemas/BROADCASTED_DEPLOY_ACCOUNT_TXN": {
            "$ref": {
              "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                "description": "deploys a new account contract",
                "oneOf": [
                  {
                    "$ref": {
                      "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
                        "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                        "properties": {
                          "class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the deployed contract's class",
                            "title": "Class hash"
                          },
                          "constructor_calldata": {
                            "description": "The parameters passed to the constructor",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Constructor calldata",
                            "type": "array"
                          },
                          "contract_address_salt": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The salt for the address of the deployed contract",
                            "title": "Contract address salt"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DEPLOY_ACCOUNT"
                            ],
                            "title": "Deploy account",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "type",
                          "contract_address_salt",
                          "constructor_calldata",
                          "class_hash"
                        ],
                        "title": "Deploy account transaction"
                      }
                    },
                    "title": "Deploy account V1"
                  }
                ],
                "title": "Deploy account transaction"
              }
            },
            "title": "Broadcasted deploy account transaction"
          }
        }
      }
    ]
  },
  "CHAIN_ID": {
    "description": "StarkNet chain id, given in hex representation.",
    "pattern": "^0x[a-fA-F0-9]+$",
    "title": "Chain id",
    "type": "string"
  },
  "COMMON_RECEIPT_PROPERTIES": {
    "description": "Common properties for a transaction receipt",
    "properties": {
      "actual_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The fee that was charged by the sequencer",
        "title": "Actual fee"
      },
      "block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "title": "Block hash"
      },
      "block_number": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "title": "Block number"
      },
      "events": {
        "description": "The events emitted as part of this transaction",
        "items": {
          "$ref": {
            "#/components/schemas/EVENT": {
              "allOf": [
                {
                  "properties": {
                    "from_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "title": "From address"
                    }
                  },
                  "required": [
                    "from_address"
                  ],
                  "title": "Event emitter",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/EVENT_CONTENT": {
                      "description": "The content of an event",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Data",
                          "type": "array"
                        },
                        "keys": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Keys",
                          "type": "array"
                        }
                      },
                      "required": [
                        "keys",
                        "data"
                      ],
                      "title": "Event content",
                      "type": "object"
                    }
                  },
                  "title": "Event content"
                }
              ],
              "description": "A StarkNet event",
              "title": "Event"
            }
          }
        },
        "title": "Events",
        "type": "array"
      },
      "execution_resources": {
        "$ref": {
          "#/components/schemas/EXECUTION_RESOURCES": {
            "description": "The resources consumed by the transaction",
            "properties": {
              "bitwise_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the number of BITWISE builtin instances",
                "title": "BITWISE applications"
              },
              "ec_op_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the number of EC_OP builtin instances",
                "title": "EC_OP applications"
              },
              "ecdsa_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the number of ECDSA builtin instances",
                "title": "ECDSA applications"
              },
              "keccak_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of KECCAK builtin instances",
                "title": "Keccak applications"
              },
              "memory_holes": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                "title": "Memory holes"
              },
              "pedersen_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of Pedersen builtin instances",
                "title": "Pedersen applications"
              },
              "poseidon_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of Poseidon builtin instances",
                "title": "Poseidon applications"
              },
              "range_check_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of RANGE_CHECK builtin instances",
                "title": "Range check applications"
              },
              "steps": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of Cairo steps used",
                "title": "Steps"
              }
            },
            "required": [
              "steps",
              "range_check_builtin_applications",
              "pedersen_builtin_applications",
              "poseidon_builtin_applications",
              "ec_op_builtin_applications",
              "ecdsa_builtin_applications",
              "bitwise_builtin_applications",
              "keccak_builtin_applications"
            ],
            "title": "Execution resources",
            "type": "object"
          }
        },
        "description": "The resources consumed by the transaction",
        "title": "Execution resources"
      },
      "execution_status": {
        "$ref": {
          "#/components/schemas/TXN_EXECUTION_STATUS": {
            "description": "The execution status of the transaction",
            "enum": [
              "SUCCEEDED",
              "REVERTED"
            ],
            "title": "Execution status",
            "type": "string"
          }
        },
        "title": "Execution status"
      },
      "finality_status": {
        "$ref": {
          "#/components/schemas/TXN_FINALITY_STATUS": {
            "description": "The finality status of the transaction",
            "enum": [
              "ACCEPTED_ON_L2",
              "ACCEPTED_ON_L1"
            ],
            "title": "Finality status",
            "type": "string"
          }
        },
        "title": "Finality status"
      },
      "messages_sent": {
        "items": {
          "$ref": {
            "#/components/schemas/MSG_TO_L1": {
              "properties": {
                "from_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The address of the L2 contract sending the message"
                },
                "payload": {
                  "description": "The payload of the message",
                  "items": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    }
                  },
                  "title": "Payload",
                  "type": "array"
                },
                "to_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The target L1 address the message is sent to",
                  "title": "To address"
                }
              },
              "required": [
                "from_address",
                "to_address",
                "payload"
              ],
              "title": "Message to L1",
              "type": "object"
            }
          }
        },
        "title": "Messages sent",
        "type": "array"
      },
      "revert_reason": {
        "description": "the revert reason for the failed execution",
        "name": "revert reason",
        "title": "Revert reason",
        "type": "string"
      },
      "transaction_hash": {
        "$ref": {
          "#/components/schemas/TXN_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The transaction hash, as assigned in StarkNet",
            "title": "Transaction hash"
          }
        },
        "description": "The hash identifying the transaction",
        "title": "Transaction hash"
      }
    },
    "required": [
      "transaction_hash",
      "actual_fee",
      "finality_status",
      "execution_status",
      "block_hash",
      "block_number",
      "messages_sent",
      "events",
      "execution_resources"
    ],
    "title": "Common receipt properties",
    "type": "object"
  },
  "CONTRACT_ABI": {
    "items": {
      "$ref": {
        "#/components/schemas/CONTRACT_ABI_ENTRY": {
          "oneOf": [
            {
              "$ref": {
                "#/components/schemas/FUNCTION_ABI_ENTRY": {
                  "properties": {
                    "inputs": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "name": {
                      "description": "The function name",
                      "title": "Function name",
                      "type": "string"
                    },
                    "outputs": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "stateMutability": {
                      "$ref": {
                        "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                          "enum": [
                            "view"
                          ],
                          "title": "Function state mutability type",
                          "type": "string"
                        }
                      },
                      "title": "Function state mutability"
                    },
                    "type": {
                      "$ref": {
                        "#/components/schemas/FUNCTION_ABI_TYPE": {
                          "enum": [
                            "function",
                            "l1_handler",
                            "constructor"
                          ],
                          "title": "Function ABI type",
                          "type": "string"
                        }
                      },
                      "title": "Function ABI type"
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "inputs",
                    "outputs"
                  ],
                  "title": "Function ABI entry",
                  "type": "object"
                }
              },
              "title": "Function ABI entry"
            },
            {
              "$ref": {
                "#/components/schemas/EVENT_ABI_ENTRY": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "keys": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/TYPED_PARAMETER": {
                            "properties": {
                              "name": {
                                "description": "The parameter's name",
                                "title": "Parameter name",
                                "type": "string"
                              },
                              "type": {
                                "description": "The parameter's type",
                                "title": "Parameter type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Typed parameter",
                            "type": "object"
                          }
                        }
                      },
                      "title": "Typed parameter",
                      "type": "array"
                    },
                    "name": {
                      "description": "The event name",
                      "title": "Event name",
                      "type": "string"
                    },
                    "type": {
                      "$ref": {
                        "#/components/schemas/EVENT_ABI_TYPE": {
                          "enum": [
                            "event"
                          ],
                          "title": "Event ABI type",
                          "type": "string"
                        }
                      },
                      "title": "Event ABI type"
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "keys",
                    "data"
                  ],
                  "title": "Event ABI entry",
                  "type": "object"
                }
              },
              "title": "Event ABI entry"
            },
            {
              "$ref": {
                "#/components/schemas/STRUCT_ABI_ENTRY": {
                  "properties": {
                    "members": {
                      "items": {
                        "$ref": {
                          "#/components/schemas/STRUCT_MEMBER": {
                            "allOf": [
                              {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                },
                                "title": "Typed parameter"
                              },
                              {
                                "properties": {
                                  "offset": {
                                    "description": "offset of this property within the struct",
                                    "title": "Offset",
                                    "type": "integer"
                                  }
                                },
                                "title": "Offset",
                                "type": "object"
                              }
                            ],
                            "title": "Struct member"
                          }
                        }
                      },
                      "title": "Members",
                      "type": "array"
                    },
                    "name": {
                      "description": "The struct name",
                      "title": "Struct name",
                      "type": "string"
                    },
                    "size": {
                      "minimum": 1,
                      "title": "Size",
                      "type": "integer"
                    },
                    "type": {
                      "$ref": {
                        "#/components/schemas/STRUCT_ABI_TYPE": {
                          "enum": [
                            "struct"
                          ],
                          "title": "Struct ABI type",
                          "type": "string"
                        }
                      },
                      "title": "Struct ABI type"
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "size",
                    "members"
                  ],
                  "title": "Struct ABI entry",
                  "type": "object"
                }
              },
              "title": "Struct ABI entry"
            }
          ],
          "title": "Contract ABI entry"
        }
      }
    },
    "title": "Contract ABI",
    "type": "array"
  },
  "CONTRACT_ABI_ENTRY": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/FUNCTION_ABI_ENTRY": {
            "properties": {
              "inputs": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "name": {
                "description": "The function name",
                "title": "Function name",
                "type": "string"
              },
              "outputs": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "stateMutability": {
                "$ref": {
                  "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                    "enum": [
                      "view"
                    ],
                    "title": "Function state mutability type",
                    "type": "string"
                  }
                },
                "title": "Function state mutability"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/FUNCTION_ABI_TYPE": {
                    "enum": [
                      "function",
                      "l1_handler",
                      "constructor"
                    ],
                    "title": "Function ABI type",
                    "type": "string"
                  }
                },
                "title": "Function ABI type"
              }
            },
            "required": [
              "type",
              "name",
              "inputs",
              "outputs"
            ],
            "title": "Function ABI entry",
            "type": "object"
          }
        },
        "title": "Function ABI entry"
      },
      {
        "$ref": {
          "#/components/schemas/EVENT_ABI_ENTRY": {
            "properties": {
              "data": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "keys": {
                "items": {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  }
                },
                "title": "Typed parameter",
                "type": "array"
              },
              "name": {
                "description": "The event name",
                "title": "Event name",
                "type": "string"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/EVENT_ABI_TYPE": {
                    "enum": [
                      "event"
                    ],
                    "title": "Event ABI type",
                    "type": "string"
                  }
                },
                "title": "Event ABI type"
              }
            },
            "required": [
              "type",
              "name",
              "keys",
              "data"
            ],
            "title": "Event ABI entry",
            "type": "object"
          }
        },
        "title": "Event ABI entry"
      },
      {
        "$ref": {
          "#/components/schemas/STRUCT_ABI_ENTRY": {
            "properties": {
              "members": {
                "items": {
                  "$ref": {
                    "#/components/schemas/STRUCT_MEMBER": {
                      "allOf": [
                        {
                          "$ref": {
                            "#/components/schemas/TYPED_PARAMETER": {
                              "properties": {
                                "name": {
                                  "description": "The parameter's name",
                                  "title": "Parameter name",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The parameter's type",
                                  "title": "Parameter type",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ],
                              "title": "Typed parameter",
                              "type": "object"
                            }
                          },
                          "title": "Typed parameter"
                        },
                        {
                          "properties": {
                            "offset": {
                              "description": "offset of this property within the struct",
                              "title": "Offset",
                              "type": "integer"
                            }
                          },
                          "title": "Offset",
                          "type": "object"
                        }
                      ],
                      "title": "Struct member"
                    }
                  }
                },
                "title": "Members",
                "type": "array"
              },
              "name": {
                "description": "The struct name",
                "title": "Struct name",
                "type": "string"
              },
              "size": {
                "minimum": 1,
                "title": "Size",
                "type": "integer"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/STRUCT_ABI_TYPE": {
                    "enum": [
                      "struct"
                    ],
                    "title": "Struct ABI type",
                    "type": "string"
                  }
                },
                "title": "Struct ABI type"
              }
            },
            "required": [
              "type",
              "name",
              "size",
              "members"
            ],
            "title": "Struct ABI entry",
            "type": "object"
          }
        },
        "title": "Struct ABI entry"
      }
    ],
    "title": "Contract ABI entry"
  },
  "CONTRACT_CLASS": {
    "properties": {
      "abi": {
        "description": "The class ABI, as supplied by the user declaring the class",
        "title": "ABI",
        "type": "string"
      },
      "contract_class_version": {
        "description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0",
        "title": "Contract class version",
        "type": "string"
      },
      "entry_points_by_type": {
        "properties": {
          "CONSTRUCTOR": {
            "items": {
              "$ref": {
                "#/components/schemas/SIERRA_ENTRY_POINT": {
                  "properties": {
                    "function_idx": {
                      "description": "The index of the function in the program",
                      "title": "Function index",
                      "type": "integer"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "selector",
                    "function_idx"
                  ],
                  "title": "Sierra entry point",
                  "type": "object"
                }
              }
            },
            "title": "Constructor",
            "type": "array"
          },
          "EXTERNAL": {
            "items": {
              "$ref": {
                "#/components/schemas/SIERRA_ENTRY_POINT": {
                  "properties": {
                    "function_idx": {
                      "description": "The index of the function in the program",
                      "title": "Function index",
                      "type": "integer"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "selector",
                    "function_idx"
                  ],
                  "title": "Sierra entry point",
                  "type": "object"
                }
              }
            },
            "title": "External",
            "type": "array"
          },
          "L1_HANDLER": {
            "items": {
              "$ref": {
                "#/components/schemas/SIERRA_ENTRY_POINT": {
                  "properties": {
                    "function_idx": {
                      "description": "The index of the function in the program",
                      "title": "Function index",
                      "type": "integer"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "selector",
                    "function_idx"
                  ],
                  "title": "Sierra entry point",
                  "type": "object"
                }
              }
            },
            "title": "L1 handler",
            "type": "array"
          }
        },
        "required": [
          "CONSTRUCTOR",
          "EXTERNAL",
          "L1_HANDLER"
        ],
        "title": "Entry points by type",
        "type": "object"
      },
      "sierra_program": {
        "description": "The list of Sierra instructions of which the program consists",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Sierra program",
        "type": "array"
      }
    },
    "required": [
      "sierra_program",
      "contract_class_version",
      "entry_points_by_type"
    ],
    "title": "Contract class",
    "type": "object"
  },
  "CONTRACT_STORAGE_DIFF_ITEM": {
    "properties": {
      "address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The contract address for which the storage changed",
        "title": "Address"
      },
      "storage_entries": {
        "description": "The changes in the storage of the contract",
        "items": {
          "properties": {
            "key": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The key of the changed value",
              "title": "Key"
            },
            "value": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The new value applied to the given address",
              "title": "Value"
            }
          },
          "title": "Storage diff item",
          "type": "object"
        },
        "title": "Storage entries",
        "type": "array"
      }
    },
    "required": [
      "address",
      "storage_entries"
    ],
    "title": "Contract storage diff item",
    "type": "object"
  },
  "DA_MODE": {
    "description": "Specifies a storage domain in Starknet. Each domain has different gurantess regarding availability",
    "enum": [
      "L1",
      "L2"
    ],
    "title": "DA mode",
    "type": "string"
  },
  "DECLARE_TXN": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_V0": {
            "allOf": [
              {
                "properties": {
                  "class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the declared class",
                    "title": "Class hash"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x0"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "max_fee",
                  "version",
                  "signature",
                  "class_hash"
                ],
                "title": "Declare txn v0",
                "type": "object"
              }
            ],
            "description": "Declare Contract Transaction V0",
            "title": "Declare Contract Transaction V0"
          }
        },
        "title": "Declare transaction V0"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_V1": {
            "allOf": [
              {
                "properties": {
                  "class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the declared class",
                    "title": "Class hash"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x1"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce",
                  "class_hash"
                ],
                "title": "Declare txn v1",
                "type": "object"
              }
            ],
            "description": "Declare Contract Transaction V1",
            "title": "Declare Contract Transaction V1"
          }
        },
        "title": "Declare transaction V1"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_V2": {
            "allOf": [
              {
                "properties": {
                  "class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the declared class",
                    "title": "Class hash"
                  },
                  "compiled_class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                    "title": "Compiled class hash"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "description": "The address of the account contract sending the declaration transaction",
                    "title": "Sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the transaction scheme",
                    "enum": [
                      "0x2"
                    ],
                    "title": "Version",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "compiled_class_hash",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce",
                  "class_hash"
                ],
                "title": "Declare txn v2",
                "type": "object"
              }
            ],
            "description": "Declare Contract Transaction V2",
            "title": "Declare Transaction V2"
          }
        },
        "title": "Declare transaction V2"
      }
    ],
    "title": "Declare transaction"
  },
  "DECLARE_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Declare txn receipt",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events",
              "execution_resources"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "title": "Declare Transaction Receipt"
  },
  "DECLARE_TXN_V0": {
    "allOf": [
      {
        "properties": {
          "class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the declared class",
            "title": "Class hash"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x0"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "max_fee",
          "version",
          "signature",
          "class_hash"
        ],
        "title": "Declare txn v0",
        "type": "object"
      }
    ],
    "description": "Declare Contract Transaction V0",
    "title": "Declare Contract Transaction V0"
  },
  "DECLARE_TXN_V1": {
    "allOf": [
      {
        "properties": {
          "class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the declared class",
            "title": "Class hash"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x1"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "max_fee",
          "version",
          "signature",
          "nonce",
          "class_hash"
        ],
        "title": "Declare txn v1",
        "type": "object"
      }
    ],
    "description": "Declare Contract Transaction V1",
    "title": "Declare Contract Transaction V1"
  },
  "DECLARE_TXN_V2": {
    "allOf": [
      {
        "properties": {
          "class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the declared class",
            "title": "Class hash"
          },
          "compiled_class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
            "title": "Compiled class hash"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "description": "The address of the account contract sending the declaration transaction",
            "title": "Sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          },
          "version": {
            "description": "Version of the transaction scheme",
            "enum": [
              "0x2"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "sender_address",
          "compiled_class_hash",
          "max_fee",
          "version",
          "signature",
          "nonce",
          "class_hash"
        ],
        "title": "Declare txn v2",
        "type": "object"
      }
    ],
    "description": "Declare Contract Transaction V2",
    "title": "Declare Transaction V2"
  },
  "DEPLOYED_CONTRACT_ITEM": {
    "properties": {
      "address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The address of the contract",
        "title": "Address"
      },
      "class_hash": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The hash of the contract code",
        "title": "Class hash"
      }
    },
    "required": [
      "address",
      "class_hash"
    ],
    "title": "Deployed contract item",
    "type": "object"
  },
  "DEPLOY_ACCOUNT_TXN": {
    "description": "deploys a new account contract",
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
            "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
            "properties": {
              "class_hash": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The hash of the deployed contract's class",
                "title": "Class hash"
              },
              "constructor_calldata": {
                "description": "The parameters passed to the constructor",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Constructor calldata",
                "type": "array"
              },
              "contract_address_salt": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The salt for the address of the deployed contract",
                "title": "Contract address salt"
              },
              "max_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The maximal fee that can be charged for including the transaction",
                "title": "Max fee"
              },
              "nonce": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Nonce"
              },
              "signature": {
                "$ref": {
                  "#/components/schemas/SIGNATURE": {
                    "description": "A transaction signature",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Signature",
                    "type": "array"
                  }
                },
                "title": "Signature"
              },
              "type": {
                "enum": [
                  "DEPLOY_ACCOUNT"
                ],
                "title": "Deploy account",
                "type": "string"
              },
              "version": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "Version of the transaction scheme",
                "title": "Version"
              }
            },
            "required": [
              "max_fee",
              "version",
              "signature",
              "nonce",
              "type",
              "contract_address_salt",
              "constructor_calldata",
              "class_hash"
            ],
            "title": "Deploy account transaction"
          }
        },
        "title": "Deploy account V1"
      }
    ],
    "title": "Deploy account transaction"
  },
  "DEPLOY_ACCOUNT_TXN_RECEIPT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events",
              "execution_resources"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      },
      {
        "properties": {
          "contract_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The address of the deployed contract",
            "title": "Contract address"
          },
          "type": {
            "enum": [
              "DEPLOY_ACCOUNT"
            ],
            "title": "Deploy account",
            "type": "string"
          }
        },
        "required": [
          "type",
          "contract_address"
        ],
        "title": "DeployAccount txn receipt",
        "type": "object"
      }
    ],
    "title": "Deploy Account Transaction Receipt"
  },
  "DEPLOY_ACCOUNT_TXN_V1": {
    "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
    "properties": {
      "class_hash": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The hash of the deployed contract's class",
        "title": "Class hash"
      },
      "constructor_calldata": {
        "description": "The parameters passed to the constructor",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Constructor calldata",
        "type": "array"
      },
      "contract_address_salt": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The salt for the address of the deployed contract",
        "title": "Contract address salt"
      },
      "max_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The maximal fee that can be charged for including the transaction",
        "title": "Max fee"
      },
      "nonce": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Nonce"
      },
      "signature": {
        "$ref": {
          "#/components/schemas/SIGNATURE": {
            "description": "A transaction signature",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "Signature",
            "type": "array"
          }
        },
        "title": "Signature"
      },
      "type": {
        "enum": [
          "DEPLOY_ACCOUNT"
        ],
        "title": "Deploy account",
        "type": "string"
      },
      "version": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "Version of the transaction scheme",
        "title": "Version"
      }
    },
    "required": [
      "max_fee",
      "version",
      "signature",
      "nonce",
      "type",
      "contract_address_salt",
      "constructor_calldata",
      "class_hash"
    ],
    "title": "Deploy account transaction"
  },
  "DEPLOY_TXN": {
    "allOf": [
      {
        "properties": {
          "class_hash": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The hash of the deployed contract's class",
            "title": "Class hash"
          },
          "constructor_calldata": {
            "description": "The parameters passed to the constructor",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "Constructor calldata",
            "type": "array"
          },
          "contract_address_salt": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The salt for the address of the deployed contract",
            "title": "Contract address salt"
          },
          "type": {
            "enum": [
              "DEPLOY"
            ],
            "title": "Deploy",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "version",
          "type",
          "constructor_calldata",
          "contract_address_salt",
          "class_hash"
        ],
        "title": "Deploy txn",
        "type": "object"
      }
    ],
    "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
    "title": "Deploy Contract Transaction"
  },
  "DEPLOY_TXN_RECEIPT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events",
              "execution_resources"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      },
      {
        "properties": {
          "contract_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The address of the deployed contract",
            "title": "Contract address"
          },
          "type": {
            "enum": [
              "DEPLOY"
            ],
            "title": "Deploy",
            "type": "string"
          }
        },
        "required": [
          "type",
          "contract_address"
        ],
        "title": "Deploy txn receipt",
        "type": "object"
      }
    ],
    "title": "Deploy Transaction Receipt"
  },
  "DEPRECATED_CAIRO_ENTRY_POINT": {
    "properties": {
      "offset": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The offset of the entry point in the program",
        "title": "Offset"
      },
      "selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "A unique identifier of the entry point (function) in the program",
        "title": "Selector"
      }
    },
    "required": [
      "offset",
      "selector"
    ],
    "title": "Deprecated Cairo entry point",
    "type": "object"
  },
  "DEPRECATED_CONTRACT_CLASS": {
    "description": "The definition of a StarkNet contract class",
    "properties": {
      "abi": {
        "$ref": {
          "#/components/schemas/CONTRACT_ABI": {
            "items": {
              "$ref": {
                "#/components/schemas/CONTRACT_ABI_ENTRY": {
                  "oneOf": [
                    {
                      "$ref": {
                        "#/components/schemas/FUNCTION_ABI_ENTRY": {
                          "properties": {
                            "inputs": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "name": {
                              "description": "The function name",
                              "title": "Function name",
                              "type": "string"
                            },
                            "outputs": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "stateMutability": {
                              "$ref": {
                                "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
                                  "enum": [
                                    "view"
                                  ],
                                  "title": "Function state mutability type",
                                  "type": "string"
                                }
                              },
                              "title": "Function state mutability"
                            },
                            "type": {
                              "$ref": {
                                "#/components/schemas/FUNCTION_ABI_TYPE": {
                                  "enum": [
                                    "function",
                                    "l1_handler",
                                    "constructor"
                                  ],
                                  "title": "Function ABI type",
                                  "type": "string"
                                }
                              },
                              "title": "Function ABI type"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "inputs",
                            "outputs"
                          ],
                          "title": "Function ABI entry",
                          "type": "object"
                        }
                      },
                      "title": "Function ABI entry"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/EVENT_ABI_ENTRY": {
                          "properties": {
                            "data": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "keys": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/TYPED_PARAMETER": {
                                    "properties": {
                                      "name": {
                                        "description": "The parameter's name",
                                        "title": "Parameter name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The parameter's type",
                                        "title": "Parameter type",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Typed parameter",
                                    "type": "object"
                                  }
                                }
                              },
                              "title": "Typed parameter",
                              "type": "array"
                            },
                            "name": {
                              "description": "The event name",
                              "title": "Event name",
                              "type": "string"
                            },
                            "type": {
                              "$ref": {
                                "#/components/schemas/EVENT_ABI_TYPE": {
                                  "enum": [
                                    "event"
                                  ],
                                  "title": "Event ABI type",
                                  "type": "string"
                                }
                              },
                              "title": "Event ABI type"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "keys",
                            "data"
                          ],
                          "title": "Event ABI entry",
                          "type": "object"
                        }
                      },
                      "title": "Event ABI entry"
                    },
                    {
                      "$ref": {
                        "#/components/schemas/STRUCT_ABI_ENTRY": {
                          "properties": {
                            "members": {
                              "items": {
                                "$ref": {
                                  "#/components/schemas/STRUCT_MEMBER": {
                                    "allOf": [
                                      {
                                        "$ref": {
                                          "#/components/schemas/TYPED_PARAMETER": {
                                            "properties": {
                                              "name": {
                                                "description": "The parameter's name",
                                                "title": "Parameter name",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "The parameter's type",
                                                "title": "Parameter type",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Typed parameter",
                                            "type": "object"
                                          }
                                        },
                                        "title": "Typed parameter"
                                      },
                                      {
                                        "properties": {
                                          "offset": {
                                            "description": "offset of this property within the struct",
                                            "title": "Offset",
                                            "type": "integer"
                                          }
                                        },
                                        "title": "Offset",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Struct member"
                                  }
                                }
                              },
                              "title": "Members",
                              "type": "array"
                            },
                            "name": {
                              "description": "The struct name",
                              "title": "Struct name",
                              "type": "string"
                            },
                            "size": {
                              "minimum": 1,
                              "title": "Size",
                              "type": "integer"
                            },
                            "type": {
                              "$ref": {
                                "#/components/schemas/STRUCT_ABI_TYPE": {
                                  "enum": [
                                    "struct"
                                  ],
                                  "title": "Struct ABI type",
                                  "type": "string"
                                }
                              },
                              "title": "Struct ABI type"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "size",
                            "members"
                          ],
                          "title": "Struct ABI entry",
                          "type": "object"
                        }
                      },
                      "title": "Struct ABI entry"
                    }
                  ],
                  "title": "Contract ABI entry"
                }
              }
            },
            "title": "Contract ABI",
            "type": "array"
          }
        },
        "title": "Contract ABI"
      },
      "entry_points_by_type": {
        "properties": {
          "CONSTRUCTOR": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                  "properties": {
                    "offset": {
                      "$ref": {
                        "#/components/schemas/NUM_AS_HEX": {
                          "description": "An integer number in hex format (0x...)",
                          "pattern": "^0x[a-fA-F0-9]+$",
                          "title": "Number as hex",
                          "type": "string"
                        }
                      },
                      "description": "The offset of the entry point in the program",
                      "title": "Offset"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "offset",
                    "selector"
                  ],
                  "title": "Deprecated Cairo entry point",
                  "type": "object"
                }
              }
            },
            "title": "Deprecated constructor",
            "type": "array"
          },
          "EXTERNAL": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                  "properties": {
                    "offset": {
                      "$ref": {
                        "#/components/schemas/NUM_AS_HEX": {
                          "description": "An integer number in hex format (0x...)",
                          "pattern": "^0x[a-fA-F0-9]+$",
                          "title": "Number as hex",
                          "type": "string"
                        }
                      },
                      "description": "The offset of the entry point in the program",
                      "title": "Offset"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "offset",
                    "selector"
                  ],
                  "title": "Deprecated Cairo entry point",
                  "type": "object"
                }
              }
            },
            "title": "Deprecated external",
            "type": "array"
          },
          "L1_HANDLER": {
            "items": {
              "$ref": {
                "#/components/schemas/DEPRECATED_CAIRO_ENTRY_POINT": {
                  "properties": {
                    "offset": {
                      "$ref": {
                        "#/components/schemas/NUM_AS_HEX": {
                          "description": "An integer number in hex format (0x...)",
                          "pattern": "^0x[a-fA-F0-9]+$",
                          "title": "Number as hex",
                          "type": "string"
                        }
                      },
                      "description": "The offset of the entry point in the program",
                      "title": "Offset"
                    },
                    "selector": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "A unique identifier of the entry point (function) in the program",
                      "title": "Selector"
                    }
                  },
                  "required": [
                    "offset",
                    "selector"
                  ],
                  "title": "Deprecated Cairo entry point",
                  "type": "object"
                }
              }
            },
            "title": "Deprecated L1 handler",
            "type": "array"
          }
        },
        "title": "Deprecated entry points by type",
        "type": "object"
      },
      "program": {
        "description": "A base64 representation of the compressed program code",
        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
        "title": "Program",
        "type": "string"
      }
    },
    "required": [
      "program",
      "entry_points_by_type"
    ],
    "title": "Deprecated contract class",
    "type": "object"
  },
  "EMITTED_EVENT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/EVENT": {
            "allOf": [
              {
                "properties": {
                  "from_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "title": "From address"
                  }
                },
                "required": [
                  "from_address"
                ],
                "title": "Event emitter",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/EVENT_CONTENT": {
                    "description": "The content of an event",
                    "properties": {
                      "data": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Data",
                        "type": "array"
                      },
                      "keys": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Keys",
                        "type": "array"
                      }
                    },
                    "required": [
                      "keys",
                      "data"
                    ],
                    "title": "Event content",
                    "type": "object"
                  }
                },
                "title": "Event content"
              }
            ],
            "description": "A StarkNet event",
            "title": "Event"
          }
        },
        "description": "The event information",
        "title": "Event"
      },
      {
        "description": "The event emission information",
        "properties": {
          "block_hash": {
            "$ref": {
              "#/components/schemas/BLOCK_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Block hash"
              }
            },
            "description": "The hash of the block in which the event was emitted",
            "title": "Block hash"
          },
          "block_number": {
            "$ref": {
              "#/components/schemas/BLOCK_NUMBER": {
                "description": "The block's number (its height)",
                "minimum": 0,
                "title": "Block number",
                "type": "integer"
              }
            },
            "description": "The number of the block in which the event was emitted",
            "title": "Block number"
          },
          "transaction_hash": {
            "$ref": {
              "#/components/schemas/TXN_HASH": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The transaction hash, as assigned in StarkNet",
                "title": "Transaction hash"
              }
            },
            "description": "The transaction that emitted the event",
            "title": "Transaction hash"
          }
        },
        "required": [
          "block_hash",
          "block_number",
          "transaction_hash"
        ],
        "title": "Event context",
        "type": "object"
      }
    ],
    "description": "Event information decorated with metadata on where it was emitted / An event emitted as a result of transaction execution",
    "title": "Emitted event"
  },
  "ETH_ADDRESS": {
    "$comment": "An ethereum address",
    "description": "an ethereum address represented as 40 hex digits",
    "pattern": "^0x[a-fA-F0-9]{40}$",
    "title": "Ethereum address",
    "type": "string"
  },
  "EVENT": {
    "allOf": [
      {
        "properties": {
          "from_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "title": "From address"
          }
        },
        "required": [
          "from_address"
        ],
        "title": "Event emitter",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/EVENT_CONTENT": {
            "description": "The content of an event",
            "properties": {
              "data": {
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Data",
                "type": "array"
              },
              "keys": {
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Keys",
                "type": "array"
              }
            },
            "required": [
              "keys",
              "data"
            ],
            "title": "Event content",
            "type": "object"
          }
        },
        "title": "Event content"
      }
    ],
    "description": "A StarkNet event",
    "title": "Event"
  },
  "EVENTS_CHUNK": {
    "properties": {
      "continuation_token": {
        "description": "Use this token in a subsequent query to obtain the next page. Should not appear if there are no more pages.",
        "title": "Continuation token",
        "type": "string"
      },
      "events": {
        "items": {
          "$ref": {
            "#/components/schemas/EMITTED_EVENT": {
              "allOf": [
                {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  },
                  "description": "The event information",
                  "title": "Event"
                },
                {
                  "description": "The event emission information",
                  "properties": {
                    "block_hash": {
                      "$ref": {
                        "#/components/schemas/BLOCK_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Block hash"
                        }
                      },
                      "description": "The hash of the block in which the event was emitted",
                      "title": "Block hash"
                    },
                    "block_number": {
                      "$ref": {
                        "#/components/schemas/BLOCK_NUMBER": {
                          "description": "The block's number (its height)",
                          "minimum": 0,
                          "title": "Block number",
                          "type": "integer"
                        }
                      },
                      "description": "The number of the block in which the event was emitted",
                      "title": "Block number"
                    },
                    "transaction_hash": {
                      "$ref": {
                        "#/components/schemas/TXN_HASH": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The transaction hash, as assigned in StarkNet",
                          "title": "Transaction hash"
                        }
                      },
                      "description": "The transaction that emitted the event",
                      "title": "Transaction hash"
                    }
                  },
                  "required": [
                    "block_hash",
                    "block_number",
                    "transaction_hash"
                  ],
                  "title": "Event context",
                  "type": "object"
                }
              ],
              "description": "Event information decorated with metadata on where it was emitted / An event emitted as a result of transaction execution",
              "title": "Emitted event"
            }
          }
        },
        "title": "Matching Events",
        "type": "array"
      }
    },
    "required": [
      "events"
    ],
    "title": "Events chunk",
    "type": "object"
  },
  "EVENT_ABI_ENTRY": {
    "properties": {
      "data": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "keys": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "name": {
        "description": "The event name",
        "title": "Event name",
        "type": "string"
      },
      "type": {
        "$ref": {
          "#/components/schemas/EVENT_ABI_TYPE": {
            "enum": [
              "event"
            ],
            "title": "Event ABI type",
            "type": "string"
          }
        },
        "title": "Event ABI type"
      }
    },
    "required": [
      "type",
      "name",
      "keys",
      "data"
    ],
    "title": "Event ABI entry",
    "type": "object"
  },
  "EVENT_ABI_TYPE": {
    "enum": [
      "event"
    ],
    "title": "Event ABI type",
    "type": "string"
  },
  "EVENT_CONTENT": {
    "description": "The content of an event",
    "properties": {
      "data": {
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Data",
        "type": "array"
      },
      "keys": {
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Keys",
        "type": "array"
      }
    },
    "required": [
      "keys",
      "data"
    ],
    "title": "Event content",
    "type": "object"
  },
  "EVENT_FILTER": {
    "description": "An event filter/query",
    "properties": {
      "address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "title": "from contract"
      },
      "from_block": {
        "$ref": {
          "#/components/schemas/BLOCK_ID": {
            "description": "Block hash, number or tag",
            "oneOf": [
              {
                "properties": {
                  "block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "required": [
                  "block_hash"
                ],
                "title": "Block hash",
                "type": "object"
              },
              {
                "properties": {
                  "block_number": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "title": "Block number"
                  }
                },
                "required": [
                  "block_number"
                ],
                "title": "Block number",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/BLOCK_TAG": {
                    "description": "A tag specifying a dynamic reference to a block",
                    "enum": [
                      "latest",
                      "pending"
                    ],
                    "title": "Block tag",
                    "type": "string"
                  }
                },
                "title": "Block tag"
              }
            ],
            "title": "Block id"
          }
        },
        "title": "from block"
      },
      "keys": {
        "description": "The values used to filter the events",
        "items": {
          "description": "Per key (by position), designate the possible values to be matched for events to be returned. Empty array designates 'any' value",
          "items": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            }
          },
          "title": "Keys",
          "type": "array"
        },
        "title": "Keys",
        "type": "array"
      },
      "to_block": {
        "$ref": {
          "#/components/schemas/BLOCK_ID": {
            "description": "Block hash, number or tag",
            "oneOf": [
              {
                "properties": {
                  "block_hash": {
                    "$ref": {
                      "#/components/schemas/BLOCK_HASH": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Block hash"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "required": [
                  "block_hash"
                ],
                "title": "Block hash",
                "type": "object"
              },
              {
                "properties": {
                  "block_number": {
                    "$ref": {
                      "#/components/schemas/BLOCK_NUMBER": {
                        "description": "The block's number (its height)",
                        "minimum": 0,
                        "title": "Block number",
                        "type": "integer"
                      }
                    },
                    "title": "Block number"
                  }
                },
                "required": [
                  "block_number"
                ],
                "title": "Block number",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/BLOCK_TAG": {
                    "description": "A tag specifying a dynamic reference to a block",
                    "enum": [
                      "latest",
                      "pending"
                    ],
                    "title": "Block tag",
                    "type": "string"
                  }
                },
                "title": "Block tag"
              }
            ],
            "title": "Block id"
          }
        },
        "title": "to block"
      }
    },
    "required": [],
    "title": "Event filter",
    "type": "object"
  },
  "EXECUTION_RESOURCES": {
    "description": "The resources consumed by the transaction",
    "properties": {
      "bitwise_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the number of BITWISE builtin instances",
        "title": "BITWISE applications"
      },
      "ec_op_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the number of EC_OP builtin instances",
        "title": "EC_OP applications"
      },
      "ecdsa_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the number of ECDSA builtin instances",
        "title": "ECDSA applications"
      },
      "keccak_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The number of KECCAK builtin instances",
        "title": "Keccak applications"
      },
      "memory_holes": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
        "title": "Memory holes"
      },
      "pedersen_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The number of Pedersen builtin instances",
        "title": "Pedersen applications"
      },
      "poseidon_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The number of Poseidon builtin instances",
        "title": "Poseidon applications"
      },
      "range_check_builtin_applications": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The number of RANGE_CHECK builtin instances",
        "title": "Range check applications"
      },
      "steps": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The number of Cairo steps used",
        "title": "Steps"
      }
    },
    "required": [
      "steps",
      "range_check_builtin_applications",
      "pedersen_builtin_applications",
      "poseidon_builtin_applications",
      "ec_op_builtin_applications",
      "ecdsa_builtin_applications",
      "bitwise_builtin_applications",
      "keccak_builtin_applications"
    ],
    "title": "Execution resources",
    "type": "object"
  },
  "FEE_ESTIMATE": {
    "properties": {
      "gas_consumed": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The Ethereum gas cost of the transaction (see https://docs.starknet.io/docs/Fees/fee-mechanism for more info)",
        "title": "Gas consumed"
      },
      "gas_price": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The gas price (in gwei) that was used in the cost estimation",
        "title": "Gas price"
      },
      "overall_fee": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "The estimated fee for the transaction (in gwei), product of gas_consumed and gas_price",
        "title": "Overall fee"
      }
    },
    "required": [
      "gas_consumed",
      "gas_price",
      "overall_fee"
    ],
    "title": "Fee estimation",
    "type": "object"
  },
  "FELT": {
    "description": "A field element. represented by at most 63 hex digits",
    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
    "title": "Field element",
    "type": "string"
  },
  "FUNCTION_ABI_ENTRY": {
    "properties": {
      "inputs": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "name": {
        "description": "The function name",
        "title": "Function name",
        "type": "string"
      },
      "outputs": {
        "items": {
          "$ref": {
            "#/components/schemas/TYPED_PARAMETER": {
              "properties": {
                "name": {
                  "description": "The parameter's name",
                  "title": "Parameter name",
                  "type": "string"
                },
                "type": {
                  "description": "The parameter's type",
                  "title": "Parameter type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ],
              "title": "Typed parameter",
              "type": "object"
            }
          }
        },
        "title": "Typed parameter",
        "type": "array"
      },
      "stateMutability": {
        "$ref": {
          "#/components/schemas/FUNCTION_STATE_MUTABILITY": {
            "enum": [
              "view"
            ],
            "title": "Function state mutability type",
            "type": "string"
          }
        },
        "title": "Function state mutability"
      },
      "type": {
        "$ref": {
          "#/components/schemas/FUNCTION_ABI_TYPE": {
            "enum": [
              "function",
              "l1_handler",
              "constructor"
            ],
            "title": "Function ABI type",
            "type": "string"
          }
        },
        "title": "Function ABI type"
      }
    },
    "required": [
      "type",
      "name",
      "inputs",
      "outputs"
    ],
    "title": "Function ABI entry",
    "type": "object"
  },
  "FUNCTION_ABI_TYPE": {
    "enum": [
      "function",
      "l1_handler",
      "constructor"
    ],
    "title": "Function ABI type",
    "type": "string"
  },
  "FUNCTION_CALL": {
    "description": "Function call information",
    "properties": {
      "calldata": {
        "description": "The parameters passed to the function",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Calldata",
        "type": "array"
      },
      "contract_address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "title": "Contract address"
      },
      "entry_point_selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Entry point selector"
      }
    },
    "required": [
      "contract_address",
      "entry_point_selector",
      "calldata"
    ],
    "title": "Function call",
    "type": "object"
  },
  "FUNCTION_STATE_MUTABILITY": {
    "enum": [
      "view"
    ],
    "title": "Function state mutability type",
    "type": "string"
  },
  "INVOKE_TXN": {
    "description": "Initiate a transaction from an account",
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_V0": {
            "description": "invokes a specific function in the desired contract (not necessarily an account)",
            "properties": {
              "calldata": {
                "description": "The parameters passed to the function",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Calldata",
                "type": "array"
              },
              "contract_address": {
                "$ref": {
                  "#/components/schemas/ADDRESS": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Address"
                  }
                },
                "title": "Contract address"
              },
              "entry_point_selector": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Entry point selector"
              },
              "max_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The maximal fee that can be charged for including the transaction",
                "title": "Max fee"
              },
              "signature": {
                "$ref": {
                  "#/components/schemas/SIGNATURE": {
                    "description": "A transaction signature",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Signature",
                    "type": "array"
                  }
                },
                "title": "Signature"
              },
              "type": {
                "enum": [
                  "INVOKE"
                ],
                "title": "Type",
                "type": "string"
              },
              "version": {
                "description": "Version of the transaction scheme",
                "enum": [
                  "0x0"
                ],
                "title": "Version",
                "type": "string"
              }
            },
            "required": [
              "type",
              "contract_address",
              "entry_point_selector",
              "calldata",
              "max_fee",
              "version",
              "signature"
            ],
            "title": "Invoke transaction V0"
          }
        },
        "title": "Invoke transaction V0"
      },
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_V1": {
            "allOf": [
              {
                "properties": {
                  "calldata": {
                    "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "calldata",
                    "type": "array"
                  },
                  "max_fee": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The maximal fee that can be charged for including the transaction",
                    "title": "Max fee"
                  },
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Nonce"
                  },
                  "sender_address": {
                    "$ref": {
                      "#/components/schemas/ADDRESS": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Address"
                      }
                    },
                    "title": "sender address"
                  },
                  "signature": {
                    "$ref": {
                      "#/components/schemas/SIGNATURE": {
                        "description": "A transaction signature",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Signature",
                        "type": "array"
                      }
                    },
                    "title": "Signature"
                  },
                  "type": {
                    "enum": [
                      "INVOKE"
                    ],
                    "title": "Type",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "type",
                  "sender_address",
                  "calldata",
                  "max_fee",
                  "version",
                  "signature",
                  "nonce"
                ],
                "type": "object"
              }
            ],
            "description": "initiates a transaction from a given account",
            "title": "Invoke transaction V1"
          }
        },
        "title": "Invoke transaction V1"
      }
    ],
    "title": "Invoke transaction"
  },
  "INVOKE_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "INVOKE"
            ],
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Type",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events",
              "execution_resources"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "title": "Invoke Transaction Receipt"
  },
  "INVOKE_TXN_V0": {
    "description": "invokes a specific function in the desired contract (not necessarily an account)",
    "properties": {
      "calldata": {
        "description": "The parameters passed to the function",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Calldata",
        "type": "array"
      },
      "contract_address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "title": "Contract address"
      },
      "entry_point_selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "title": "Entry point selector"
      },
      "max_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The maximal fee that can be charged for including the transaction",
        "title": "Max fee"
      },
      "signature": {
        "$ref": {
          "#/components/schemas/SIGNATURE": {
            "description": "A transaction signature",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "Signature",
            "type": "array"
          }
        },
        "title": "Signature"
      },
      "type": {
        "enum": [
          "INVOKE"
        ],
        "title": "Type",
        "type": "string"
      },
      "version": {
        "description": "Version of the transaction scheme",
        "enum": [
          "0x0"
        ],
        "title": "Version",
        "type": "string"
      }
    },
    "required": [
      "type",
      "contract_address",
      "entry_point_selector",
      "calldata",
      "max_fee",
      "version",
      "signature"
    ],
    "title": "Invoke transaction V0"
  },
  "INVOKE_TXN_V1": {
    "allOf": [
      {
        "properties": {
          "calldata": {
            "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
            "items": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              }
            },
            "title": "calldata",
            "type": "array"
          },
          "max_fee": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The maximal fee that can be charged for including the transaction",
            "title": "Max fee"
          },
          "nonce": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Nonce"
          },
          "sender_address": {
            "$ref": {
              "#/components/schemas/ADDRESS": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Address"
              }
            },
            "title": "sender address"
          },
          "signature": {
            "$ref": {
              "#/components/schemas/SIGNATURE": {
                "description": "A transaction signature",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Signature",
                "type": "array"
              }
            },
            "title": "Signature"
          },
          "type": {
            "enum": [
              "INVOKE"
            ],
            "title": "Type",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "type",
          "sender_address",
          "calldata",
          "max_fee",
          "version",
          "signature",
          "nonce"
        ],
        "type": "object"
      }
    ],
    "description": "initiates a transaction from a given account",
    "title": "Invoke transaction V1"
  },
  "L1_HANDLER_TXN": {
    "allOf": [
      {
        "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
        "properties": {
          "nonce": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
            "title": "Nonce"
          },
          "type": {
            "enum": [
              "L1_HANDLER"
            ],
            "title": "type",
            "type": "string"
          },
          "version": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "Version of the transaction scheme",
            "title": "Version"
          }
        },
        "required": [
          "version",
          "type",
          "nonce"
        ],
        "title": "L1 handler transaction",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/FUNCTION_CALL": {
            "description": "Function call information",
            "properties": {
              "calldata": {
                "description": "The parameters passed to the function",
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  }
                },
                "title": "Calldata",
                "type": "array"
              },
              "contract_address": {
                "$ref": {
                  "#/components/schemas/ADDRESS": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Address"
                  }
                },
                "title": "Contract address"
              },
              "entry_point_selector": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "title": "Entry point selector"
              }
            },
            "required": [
              "contract_address",
              "entry_point_selector",
              "calldata"
            ],
            "title": "Function call",
            "type": "object"
          }
        },
        "title": "Function call"
      }
    ],
    "title": "L1 Handler transaction"
  },
  "L1_HANDLER_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "message_hash": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "The message hash as it appears on the L1 core contract",
            "title": "Message hash"
          },
          "type": {
            "enum": [
              "L1_HANDLER"
            ],
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message_hash"
        ],
        "title": "Transaction type",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "block_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "title": "Block hash"
              },
              "block_number": {
                "$ref": {
                  "#/components/schemas/BLOCK_NUMBER": {
                    "description": "The block's number (its height)",
                    "minimum": 0,
                    "title": "Block number",
                    "type": "integer"
                  }
                },
                "title": "Block number"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "$ref": {
                  "#/components/schemas/TXN_FINALITY_STATUS": {
                    "description": "The finality status of the transaction",
                    "enum": [
                      "ACCEPTED_ON_L2",
                      "ACCEPTED_ON_L1"
                    ],
                    "title": "Finality status",
                    "type": "string"
                  }
                },
                "title": "Finality status"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "finality_status",
              "execution_status",
              "block_hash",
              "block_number",
              "messages_sent",
              "events",
              "execution_resources"
            ],
            "title": "Common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "description": "receipt for l1 handler transaction",
    "title": "L1 Handler Transaction Receipt"
  },
  "MSG_FROM_L1": {
    "properties": {
      "entry_point_selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The selector of the l1_handler in invoke in the target contract",
        "title": "Selector"
      },
      "from_address": {
        "$ref": {
          "#/components/schemas/ETH_ADDRESS": {
            "$comment": "An ethereum address",
            "description": "an ethereum address represented as 40 hex digits",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "title": "Ethereum address",
            "type": "string"
          }
        },
        "description": "The address of the L1 contract sending the message"
      },
      "payload": {
        "description": "The payload of the message",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Payload",
        "type": "array"
      },
      "to_address": {
        "$ref": {
          "#/components/schemas/ADDRESS": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Address"
          }
        },
        "description": "The target L2 address the message is sent to",
        "title": "To address"
      }
    },
    "required": [
      "from_address",
      "to_address",
      "payload",
      "entry_point_selector"
    ],
    "title": "Message from L1",
    "type": "object"
  },
  "MSG_TO_L1": {
    "properties": {
      "from_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The address of the L2 contract sending the message"
      },
      "payload": {
        "description": "The payload of the message",
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          }
        },
        "title": "Payload",
        "type": "array"
      },
      "to_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The target L1 address the message is sent to",
        "title": "To address"
      }
    },
    "required": [
      "from_address",
      "to_address",
      "payload"
    ],
    "title": "Message to L1",
    "type": "object"
  },
  "NUM_AS_HEX": {
    "description": "An integer number in hex format (0x...)",
    "pattern": "^0x[a-fA-F0-9]+$",
    "title": "Number as hex",
    "type": "string"
  },
  "PENDING_BLOCK_HEADER": {
    "additionalProperties": false,
    "properties": {
      "l1_gas_price": {
        "$ref": {
          "#/components/schemas/RESOURCE_PRICE": {
            "properties": {
              "price_in_strk": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the price of one unit of the given resource, denominated in strk",
                "title": "price in strk"
              },
              "price_in_wei": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the price of one unit of the given resource, denominated in wei",
                "title": "price in wei"
              }
            },
            "required": [
              "price_in_wei"
            ],
            "type": "object"
          }
        },
        "descritpion": "The price of l1 gas in the block",
        "title": "L1 gas price"
      },
      "parent_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of this block's parent",
        "title": "Parent hash"
      },
      "sequencer_address": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The StarkNet identity of the sequencer submitting this block",
        "title": "Sequencer address"
      },
      "starknet_version": {
        "description": "Semver of the current Starknet protocol",
        "title": "Starknet version",
        "type": "string"
      },
      "timestamp": {
        "description": "The time in which the block was created, encoded in Unix time",
        "minimum": 0,
        "title": "Timestamp",
        "type": "integer"
      }
    },
    "required": [
      "parent_hash",
      "timestamp",
      "sequencer_address",
      "l1_gas_price",
      "starknet_version"
    ],
    "title": "Pending block header",
    "type": "object"
  },
  "PENDING_BLOCK_WITH_TXS": {
    "additionalProperties": false,
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TXS": {
            "properties": {
              "transactions": {
                "description": "The transactions in this block",
                "items": {
                  "allOf": [
                    {
                      "$ref": {
                        "#/components/schemas/TXN": {
                          "description": "The transaction schema, as it appears inside a block",
                          "oneOf": [
                            {
                              "$ref": {
                                "#/components/schemas/INVOKE_TXN": {
                                  "description": "Initiate a transaction from an account",
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V0": {
                                          "description": "invokes a specific function in the desired contract (not necessarily an account)",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            },
                                            "max_fee": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The maximal fee that can be charged for including the transaction",
                                              "title": "Max fee"
                                            },
                                            "signature": {
                                              "$ref": {
                                                "#/components/schemas/SIGNATURE": {
                                                  "description": "A transaction signature",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Signature",
                                                  "type": "array"
                                                }
                                              },
                                              "title": "Signature"
                                            },
                                            "type": {
                                              "enum": [
                                                "INVOKE"
                                              ],
                                              "title": "Type",
                                              "type": "string"
                                            },
                                            "version": {
                                              "description": "Version of the transaction scheme",
                                              "enum": [
                                                "0x0"
                                              ],
                                              "title": "Version",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata",
                                            "max_fee",
                                            "version",
                                            "signature"
                                          ],
                                          "title": "Invoke transaction V0"
                                        }
                                      },
                                      "title": "Invoke transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/INVOKE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "calldata": {
                                                  "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "calldata",
                                                  "type": "array"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "title": "sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "INVOKE"
                                                  ],
                                                  "title": "Type",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "$ref": {
                                                    "#/components/schemas/NUM_AS_HEX": {
                                                      "description": "An integer number in hex format (0x...)",
                                                      "pattern": "^0x[a-fA-F0-9]+$",
                                                      "title": "Number as hex",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "Version of the transaction scheme",
                                                  "title": "Version"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "calldata",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce"
                                              ],
                                              "type": "object"
                                            }
                                          ],
                                          "description": "initiates a transaction from a given account",
                                          "title": "Invoke transaction V1"
                                        }
                                      },
                                      "title": "Invoke transaction V1"
                                    }
                                  ],
                                  "title": "Invoke transaction"
                                }
                              },
                              "title": "Invoke transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/L1_HANDLER_TXN": {
                                  "allOf": [
                                    {
                                      "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                                      "properties": {
                                        "nonce": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                                          "title": "Nonce"
                                        },
                                        "type": {
                                          "enum": [
                                            "L1_HANDLER"
                                          ],
                                          "title": "type",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "nonce"
                                      ],
                                      "title": "L1 handler transaction",
                                      "type": "object"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/FUNCTION_CALL": {
                                          "description": "Function call information",
                                          "properties": {
                                            "calldata": {
                                              "description": "The parameters passed to the function",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Calldata",
                                              "type": "array"
                                            },
                                            "contract_address": {
                                              "$ref": {
                                                "#/components/schemas/ADDRESS": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Address"
                                                }
                                              },
                                              "title": "Contract address"
                                            },
                                            "entry_point_selector": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Entry point selector"
                                            }
                                          },
                                          "required": [
                                            "contract_address",
                                            "entry_point_selector",
                                            "calldata"
                                          ],
                                          "title": "Function call",
                                          "type": "object"
                                        }
                                      },
                                      "title": "Function call"
                                    }
                                  ],
                                  "title": "L1 Handler transaction"
                                }
                              },
                              "title": "L1 handler transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DECLARE_TXN": {
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V0": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the declared class",
                                                  "title": "Class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x0"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "class_hash"
                                              ],
                                              "title": "Declare txn v0",
                                              "type": "object"
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V0",
                                          "title": "Declare Contract Transaction V0"
                                        }
                                      },
                                      "title": "Declare transaction V0"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V1": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the declared class",
                                                  "title": "Class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x1"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce",
                                                "class_hash"
                                              ],
                                              "title": "Declare txn v1",
                                              "type": "object"
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V1",
                                          "title": "Declare Contract Transaction V1"
                                        }
                                      },
                                      "title": "Declare transaction V1"
                                    },
                                    {
                                      "$ref": {
                                        "#/components/schemas/DECLARE_TXN_V2": {
                                          "allOf": [
                                            {
                                              "properties": {
                                                "class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the declared class",
                                                  "title": "Class hash"
                                                },
                                                "compiled_class_hash": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                                                  "title": "Compiled class hash"
                                                },
                                                "max_fee": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "description": "The maximal fee that can be charged for including the transaction",
                                                  "title": "Max fee"
                                                },
                                                "nonce": {
                                                  "$ref": {
                                                    "#/components/schemas/FELT": {
                                                      "description": "A field element. represented by at most 63 hex digits",
                                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                      "title": "Field element",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "title": "Nonce"
                                                },
                                                "sender_address": {
                                                  "$ref": {
                                                    "#/components/schemas/ADDRESS": {
                                                      "$ref": {
                                                        "#/components/schemas/FELT": {
                                                          "description": "A field element. represented by at most 63 hex digits",
                                                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                          "title": "Field element",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "title": "Address"
                                                    }
                                                  },
                                                  "description": "The address of the account contract sending the declaration transaction",
                                                  "title": "Sender address"
                                                },
                                                "signature": {
                                                  "$ref": {
                                                    "#/components/schemas/SIGNATURE": {
                                                      "description": "A transaction signature",
                                                      "items": {
                                                        "$ref": {
                                                          "#/components/schemas/FELT": {
                                                            "description": "A field element. represented by at most 63 hex digits",
                                                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                            "title": "Field element",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "title": "Signature",
                                                      "type": "array"
                                                    }
                                                  },
                                                  "title": "Signature"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "DECLARE"
                                                  ],
                                                  "title": "Declare",
                                                  "type": "string"
                                                },
                                                "version": {
                                                  "description": "Version of the transaction scheme",
                                                  "enum": [
                                                    "0x2"
                                                  ],
                                                  "title": "Version",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sender_address",
                                                "compiled_class_hash",
                                                "max_fee",
                                                "version",
                                                "signature",
                                                "nonce",
                                                "class_hash"
                                              ],
                                              "title": "Declare txn v2",
                                              "type": "object"
                                            }
                                          ],
                                          "description": "Declare Contract Transaction V2",
                                          "title": "Declare Transaction V2"
                                        }
                                      },
                                      "title": "Declare transaction V2"
                                    }
                                  ],
                                  "title": "Declare transaction"
                                }
                              },
                              "title": "Declare transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_TXN": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "class_hash": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The hash of the deployed contract's class",
                                          "title": "Class hash"
                                        },
                                        "constructor_calldata": {
                                          "description": "The parameters passed to the constructor",
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Constructor calldata",
                                          "type": "array"
                                        },
                                        "contract_address_salt": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "description": "The salt for the address of the deployed contract",
                                          "title": "Contract address salt"
                                        },
                                        "type": {
                                          "enum": [
                                            "DEPLOY"
                                          ],
                                          "title": "Deploy",
                                          "type": "string"
                                        },
                                        "version": {
                                          "$ref": {
                                            "#/components/schemas/NUM_AS_HEX": {
                                              "description": "An integer number in hex format (0x...)",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "title": "Number as hex",
                                              "type": "string"
                                            }
                                          },
                                          "description": "Version of the transaction scheme",
                                          "title": "Version"
                                        }
                                      },
                                      "required": [
                                        "version",
                                        "type",
                                        "constructor_calldata",
                                        "contract_address_salt",
                                        "class_hash"
                                      ],
                                      "title": "Deploy txn",
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
                                  "title": "Deploy Contract Transaction"
                                }
                              },
                              "title": "Deploy transaction"
                            },
                            {
                              "$ref": {
                                "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
                                  "description": "deploys a new account contract",
                                  "oneOf": [
                                    {
                                      "$ref": {
                                        "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
                                          "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                                          "properties": {
                                            "class_hash": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The hash of the deployed contract's class",
                                              "title": "Class hash"
                                            },
                                            "constructor_calldata": {
                                              "description": "The parameters passed to the constructor",
                                              "items": {
                                                "$ref": {
                                                  "#/components/schemas/FELT": {
                                                    "description": "A field element. represented by at most 63 hex digits",
                                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                    "title": "Field element",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "title": "Constructor calldata",
                                              "type": "array"
                                            },
                                            "contract_address_salt": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The salt for the address of the deployed contract",
                                              "title": "Contract address salt"
                                            },
                                            "max_fee": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "The maximal fee that can be charged for including the transaction",
                                              "title": "Max fee"
                                            },
                                            "nonce": {
                                              "$ref": {
                                                "#/components/schemas/FELT": {
                                                  "description": "A field element. represented by at most 63 hex digits",
                                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                  "title": "Field element",
                                                  "type": "string"
                                                }
                                              },
                                              "title": "Nonce"
                                            },
                                            "signature": {
                                              "$ref": {
                                                "#/components/schemas/SIGNATURE": {
                                                  "description": "A transaction signature",
                                                  "items": {
                                                    "$ref": {
                                                      "#/components/schemas/FELT": {
                                                        "description": "A field element. represented by at most 63 hex digits",
                                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                        "title": "Field element",
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "title": "Signature",
                                                  "type": "array"
                                                }
                                              },
                                              "title": "Signature"
                                            },
                                            "type": {
                                              "enum": [
                                                "DEPLOY_ACCOUNT"
                                              ],
                                              "title": "Deploy account",
                                              "type": "string"
                                            },
                                            "version": {
                                              "$ref": {
                                                "#/components/schemas/NUM_AS_HEX": {
                                                  "description": "An integer number in hex format (0x...)",
                                                  "pattern": "^0x[a-fA-F0-9]+$",
                                                  "title": "Number as hex",
                                                  "type": "string"
                                                }
                                              },
                                              "description": "Version of the transaction scheme",
                                              "title": "Version"
                                            }
                                          },
                                          "required": [
                                            "max_fee",
                                            "version",
                                            "signature",
                                            "nonce",
                                            "type",
                                            "contract_address_salt",
                                            "constructor_calldata",
                                            "class_hash"
                                          ],
                                          "title": "Deploy account transaction"
                                        }
                                      },
                                      "title": "Deploy account V1"
                                    }
                                  ],
                                  "title": "Deploy account transaction"
                                }
                              },
                              "title": "Deploy account transaction"
                            }
                          ],
                          "title": "Transaction"
                        }
                      },
                      "title": "transaction"
                    },
                    {
                      "properties": {
                        "transaction_hash": {
                          "$ref": {
                            "#/components/schemas/TXN_HASH": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              },
                              "description": "The transaction hash, as assigned in StarkNet",
                              "title": "Transaction hash"
                            }
                          },
                          "title": "transaction hash"
                        }
                      },
                      "required": [
                        "transaction_hash"
                      ],
                      "type": "object"
                    }
                  ],
                  "title": "transactions in block",
                  "type": "object"
                },
                "title": "Transactions",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transactions",
            "type": "object"
          }
        },
        "title": "Block body with transactions"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_BLOCK_HEADER": {
            "additionalProperties": false,
            "properties": {
              "l1_gas_price": {
                "$ref": {
                  "#/components/schemas/RESOURCE_PRICE": {
                    "properties": {
                      "price_in_strk": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in strk",
                        "title": "price in strk"
                      },
                      "price_in_wei": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in wei",
                        "title": "price in wei"
                      }
                    },
                    "required": [
                      "price_in_wei"
                    ],
                    "type": "object"
                  }
                },
                "descritpion": "The price of l1 gas in the block",
                "title": "L1 gas price"
              },
              "parent_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "description": "The hash of this block's parent",
                "title": "Parent hash"
              },
              "sequencer_address": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The StarkNet identity of the sequencer submitting this block",
                "title": "Sequencer address"
              },
              "starknet_version": {
                "description": "Semver of the current Starknet protocol",
                "title": "Starknet version",
                "type": "string"
              },
              "timestamp": {
                "description": "The time in which the block was created, encoded in Unix time",
                "minimum": 0,
                "title": "Timestamp",
                "type": "integer"
              }
            },
            "required": [
              "parent_hash",
              "timestamp",
              "sequencer_address",
              "l1_gas_price",
              "starknet_version"
            ],
            "title": "Pending block header",
            "type": "object"
          }
        },
        "title": "Pending block header"
      }
    ],
    "description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
    "title": "Pending block with transactions"
  },
  "PENDING_BLOCK_WITH_TX_HASHES": {
    "additionalProperties": false,
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/BLOCK_BODY_WITH_TX_HASHES": {
            "properties": {
              "transactions": {
                "description": "The hashes of the transactions included in this block",
                "items": {
                  "$ref": {
                    "#/components/schemas/TXN_HASH": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The transaction hash, as assigned in StarkNet",
                      "title": "Transaction hash"
                    }
                  },
                  "description": "The hash of a single transaction"
                },
                "title": "Transaction hashes",
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ],
            "title": "Block body with transaction hashes",
            "type": "object"
          }
        },
        "title": "Block body with transactions hashes"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_BLOCK_HEADER": {
            "additionalProperties": false,
            "properties": {
              "l1_gas_price": {
                "$ref": {
                  "#/components/schemas/RESOURCE_PRICE": {
                    "properties": {
                      "price_in_strk": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in strk",
                        "title": "price in strk"
                      },
                      "price_in_wei": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the price of one unit of the given resource, denominated in wei",
                        "title": "price in wei"
                      }
                    },
                    "required": [
                      "price_in_wei"
                    ],
                    "type": "object"
                  }
                },
                "descritpion": "The price of l1 gas in the block",
                "title": "L1 gas price"
              },
              "parent_hash": {
                "$ref": {
                  "#/components/schemas/BLOCK_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "title": "Block hash"
                  }
                },
                "description": "The hash of this block's parent",
                "title": "Parent hash"
              },
              "sequencer_address": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The StarkNet identity of the sequencer submitting this block",
                "title": "Sequencer address"
              },
              "starknet_version": {
                "description": "Semver of the current Starknet protocol",
                "title": "Starknet version",
                "type": "string"
              },
              "timestamp": {
                "description": "The time in which the block was created, encoded in Unix time",
                "minimum": 0,
                "title": "Timestamp",
                "type": "integer"
              }
            },
            "required": [
              "parent_hash",
              "timestamp",
              "sequencer_address",
              "l1_gas_price",
              "starknet_version"
            ],
            "title": "Pending block header",
            "type": "object"
          }
        },
        "title": "Pending block header"
      }
    ],
    "description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
    "title": "Pending block with transaction hashes"
  },
  "PENDING_COMMON_RECEIPT_PROPERTIES": {
    "description": "Common properties for a pending transaction receipt",
    "properties": {
      "actual_fee": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The fee that was charged by the sequencer",
        "title": "Actual fee"
      },
      "events": {
        "description": "The events emitted as part of this transaction",
        "items": {
          "$ref": {
            "#/components/schemas/EVENT": {
              "allOf": [
                {
                  "properties": {
                    "from_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "title": "From address"
                    }
                  },
                  "required": [
                    "from_address"
                  ],
                  "title": "Event emitter",
                  "type": "object"
                },
                {
                  "$ref": {
                    "#/components/schemas/EVENT_CONTENT": {
                      "description": "The content of an event",
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Data",
                          "type": "array"
                        },
                        "keys": {
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Keys",
                          "type": "array"
                        }
                      },
                      "required": [
                        "keys",
                        "data"
                      ],
                      "title": "Event content",
                      "type": "object"
                    }
                  },
                  "title": "Event content"
                }
              ],
              "description": "A StarkNet event",
              "title": "Event"
            }
          }
        },
        "title": "Events",
        "type": "array"
      },
      "execution_resources": {
        "$ref": {
          "#/components/schemas/EXECUTION_RESOURCES": {
            "description": "The resources consumed by the transaction",
            "properties": {
              "bitwise_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the number of BITWISE builtin instances",
                "title": "BITWISE applications"
              },
              "ec_op_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the number of EC_OP builtin instances",
                "title": "EC_OP applications"
              },
              "ecdsa_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "the number of ECDSA builtin instances",
                "title": "ECDSA applications"
              },
              "keccak_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of KECCAK builtin instances",
                "title": "Keccak applications"
              },
              "memory_holes": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                "title": "Memory holes"
              },
              "pedersen_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of Pedersen builtin instances",
                "title": "Pedersen applications"
              },
              "poseidon_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of Poseidon builtin instances",
                "title": "Poseidon applications"
              },
              "range_check_builtin_applications": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of RANGE_CHECK builtin instances",
                "title": "Range check applications"
              },
              "steps": {
                "$ref": {
                  "#/components/schemas/NUM_AS_HEX": {
                    "description": "An integer number in hex format (0x...)",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "title": "Number as hex",
                    "type": "string"
                  }
                },
                "description": "The number of Cairo steps used",
                "title": "Steps"
              }
            },
            "required": [
              "steps",
              "range_check_builtin_applications",
              "pedersen_builtin_applications",
              "poseidon_builtin_applications",
              "ec_op_builtin_applications",
              "ecdsa_builtin_applications",
              "bitwise_builtin_applications",
              "keccak_builtin_applications"
            ],
            "title": "Execution resources",
            "type": "object"
          }
        },
        "description": "The resources consumed by the transaction",
        "title": "Execution resources"
      },
      "execution_status": {
        "$ref": {
          "#/components/schemas/TXN_EXECUTION_STATUS": {
            "description": "The execution status of the transaction",
            "enum": [
              "SUCCEEDED",
              "REVERTED"
            ],
            "title": "Execution status",
            "type": "string"
          }
        },
        "title": "Execution status"
      },
      "finality_status": {
        "description": "The finality status of the transaction",
        "enum": [
          "ACCEPTED_ON_L2"
        ],
        "title": "Finality status",
        "type": "string"
      },
      "messages_sent": {
        "items": {
          "$ref": {
            "#/components/schemas/MSG_TO_L1": {
              "properties": {
                "from_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The address of the L2 contract sending the message"
                },
                "payload": {
                  "description": "The payload of the message",
                  "items": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    }
                  },
                  "title": "Payload",
                  "type": "array"
                },
                "to_address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The target L1 address the message is sent to",
                  "title": "To address"
                }
              },
              "required": [
                "from_address",
                "to_address",
                "payload"
              ],
              "title": "Message to L1",
              "type": "object"
            }
          }
        },
        "title": "Messages sent",
        "type": "array"
      },
      "revert_reason": {
        "description": "the revert reason for the failed execution",
        "name": "revert reason",
        "title": "Revert reason",
        "type": "string"
      },
      "transaction_hash": {
        "$ref": {
          "#/components/schemas/TXN_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The transaction hash, as assigned in StarkNet",
            "title": "Transaction hash"
          }
        },
        "description": "The hash identifying the transaction",
        "title": "Transaction hash"
      },
      "type": {
        "$ref": {
          "#/components/schemas/TXN_TYPE": {
            "description": "The type of the transaction",
            "enum": [
              "DECLARE",
              "DEPLOY",
              "DEPLOY_ACCOUNT",
              "INVOKE",
              "L1_HANDLER"
            ],
            "title": "Transaction type",
            "type": "string"
          }
        },
        "title": "Transaction type"
      }
    },
    "required": [
      "transaction_hash",
      "actual_fee",
      "type",
      "messages_sent",
      "events",
      "finality_status",
      "execution_status",
      "execution_resources"
    ],
    "title": "Pending common receipt properties",
    "type": "object"
  },
  "PENDING_DECLARE_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "DECLARE"
            ],
            "title": "Declare",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Declare txn receipt",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a pending transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "description": "The finality status of the transaction",
                "enum": [
                  "ACCEPTED_ON_L2"
                ],
                "title": "Finality status",
                "type": "string"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/TXN_TYPE": {
                    "description": "The type of the transaction",
                    "enum": [
                      "DECLARE",
                      "DEPLOY",
                      "DEPLOY_ACCOUNT",
                      "INVOKE",
                      "L1_HANDLER"
                    ],
                    "title": "Transaction type",
                    "type": "string"
                  }
                },
                "title": "Transaction type"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "type",
              "messages_sent",
              "events",
              "finality_status",
              "execution_status",
              "execution_resources"
            ],
            "title": "Pending common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "title": "Declare Transaction Receipt"
  },
  "PENDING_DEPLOY_ACCOUNT_TXN_RECEIPT": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a pending transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "description": "The finality status of the transaction",
                "enum": [
                  "ACCEPTED_ON_L2"
                ],
                "title": "Finality status",
                "type": "string"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/TXN_TYPE": {
                    "description": "The type of the transaction",
                    "enum": [
                      "DECLARE",
                      "DEPLOY",
                      "DEPLOY_ACCOUNT",
                      "INVOKE",
                      "L1_HANDLER"
                    ],
                    "title": "Transaction type",
                    "type": "string"
                  }
                },
                "title": "Transaction type"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "type",
              "messages_sent",
              "events",
              "finality_status",
              "execution_status",
              "execution_resources"
            ],
            "title": "Pending common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      },
      {
        "properties": {
          "contract_address": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "description": "The address of the deployed contract",
            "title": "Contract address"
          },
          "type": {
            "enum": [
              "DEPLOY_ACCOUNT"
            ],
            "title": "Deploy account",
            "type": "string"
          }
        },
        "required": [
          "type",
          "contract_address"
        ],
        "title": "DeployAccount txn receipt",
        "type": "object"
      }
    ],
    "title": "Deploy Account Transaction Receipt"
  },
  "PENDING_INVOKE_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "type": {
            "enum": [
              "INVOKE"
            ],
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Type",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a pending transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "description": "The finality status of the transaction",
                "enum": [
                  "ACCEPTED_ON_L2"
                ],
                "title": "Finality status",
                "type": "string"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/TXN_TYPE": {
                    "description": "The type of the transaction",
                    "enum": [
                      "DECLARE",
                      "DEPLOY",
                      "DEPLOY_ACCOUNT",
                      "INVOKE",
                      "L1_HANDLER"
                    ],
                    "title": "Transaction type",
                    "type": "string"
                  }
                },
                "title": "Transaction type"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "type",
              "messages_sent",
              "events",
              "finality_status",
              "execution_status",
              "execution_resources"
            ],
            "title": "Pending common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "title": "Invoke Transaction Receipt"
  },
  "PENDING_L1_HANDLER_TXN_RECEIPT": {
    "allOf": [
      {
        "properties": {
          "message_hash": {
            "$ref": {
              "#/components/schemas/NUM_AS_HEX": {
                "description": "An integer number in hex format (0x...)",
                "pattern": "^0x[a-fA-F0-9]+$",
                "title": "Number as hex",
                "type": "string"
              }
            },
            "description": "The message hash as it appears on the L1 core contract",
            "title": "Message hash"
          },
          "type": {
            "enum": [
              "L1_HANDLER"
            ],
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message_hash"
        ],
        "title": "Transaction type",
        "type": "object"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
            "description": "Common properties for a pending transaction receipt",
            "properties": {
              "actual_fee": {
                "$ref": {
                  "#/components/schemas/FELT": {
                    "description": "A field element. represented by at most 63 hex digits",
                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                    "title": "Field element",
                    "type": "string"
                  }
                },
                "description": "The fee that was charged by the sequencer",
                "title": "Actual fee"
              },
              "events": {
                "description": "The events emitted as part of this transaction",
                "items": {
                  "$ref": {
                    "#/components/schemas/EVENT": {
                      "allOf": [
                        {
                          "properties": {
                            "from_address": {
                              "$ref": {
                                "#/components/schemas/ADDRESS": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Address"
                                }
                              },
                              "title": "From address"
                            }
                          },
                          "required": [
                            "from_address"
                          ],
                          "title": "Event emitter",
                          "type": "object"
                        },
                        {
                          "$ref": {
                            "#/components/schemas/EVENT_CONTENT": {
                              "description": "The content of an event",
                              "properties": {
                                "data": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Data",
                                  "type": "array"
                                },
                                "keys": {
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Keys",
                                  "type": "array"
                                }
                              },
                              "required": [
                                "keys",
                                "data"
                              ],
                              "title": "Event content",
                              "type": "object"
                            }
                          },
                          "title": "Event content"
                        }
                      ],
                      "description": "A StarkNet event",
                      "title": "Event"
                    }
                  }
                },
                "title": "Events",
                "type": "array"
              },
              "execution_resources": {
                "$ref": {
                  "#/components/schemas/EXECUTION_RESOURCES": {
                    "description": "The resources consumed by the transaction",
                    "properties": {
                      "bitwise_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of BITWISE builtin instances",
                        "title": "BITWISE applications"
                      },
                      "ec_op_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of EC_OP builtin instances",
                        "title": "EC_OP applications"
                      },
                      "ecdsa_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "the number of ECDSA builtin instances",
                        "title": "ECDSA applications"
                      },
                      "keccak_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of KECCAK builtin instances",
                        "title": "Keccak applications"
                      },
                      "memory_holes": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                        "title": "Memory holes"
                      },
                      "pedersen_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Pedersen builtin instances",
                        "title": "Pedersen applications"
                      },
                      "poseidon_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Poseidon builtin instances",
                        "title": "Poseidon applications"
                      },
                      "range_check_builtin_applications": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of RANGE_CHECK builtin instances",
                        "title": "Range check applications"
                      },
                      "steps": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "The number of Cairo steps used",
                        "title": "Steps"
                      }
                    },
                    "required": [
                      "steps",
                      "range_check_builtin_applications",
                      "pedersen_builtin_applications",
                      "poseidon_builtin_applications",
                      "ec_op_builtin_applications",
                      "ecdsa_builtin_applications",
                      "bitwise_builtin_applications",
                      "keccak_builtin_applications"
                    ],
                    "title": "Execution resources",
                    "type": "object"
                  }
                },
                "description": "The resources consumed by the transaction",
                "title": "Execution resources"
              },
              "execution_status": {
                "$ref": {
                  "#/components/schemas/TXN_EXECUTION_STATUS": {
                    "description": "The execution status of the transaction",
                    "enum": [
                      "SUCCEEDED",
                      "REVERTED"
                    ],
                    "title": "Execution status",
                    "type": "string"
                  }
                },
                "title": "Execution status"
              },
              "finality_status": {
                "description": "The finality status of the transaction",
                "enum": [
                  "ACCEPTED_ON_L2"
                ],
                "title": "Finality status",
                "type": "string"
              },
              "messages_sent": {
                "items": {
                  "$ref": {
                    "#/components/schemas/MSG_TO_L1": {
                      "properties": {
                        "from_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the L2 contract sending the message"
                        },
                        "payload": {
                          "description": "The payload of the message",
                          "items": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            }
                          },
                          "title": "Payload",
                          "type": "array"
                        },
                        "to_address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The target L1 address the message is sent to",
                          "title": "To address"
                        }
                      },
                      "required": [
                        "from_address",
                        "to_address",
                        "payload"
                      ],
                      "title": "Message to L1",
                      "type": "object"
                    }
                  }
                },
                "title": "Messages sent",
                "type": "array"
              },
              "revert_reason": {
                "description": "the revert reason for the failed execution",
                "name": "revert reason",
                "title": "Revert reason",
                "type": "string"
              },
              "transaction_hash": {
                "$ref": {
                  "#/components/schemas/TXN_HASH": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The transaction hash, as assigned in StarkNet",
                    "title": "Transaction hash"
                  }
                },
                "description": "The hash identifying the transaction",
                "title": "Transaction hash"
              },
              "type": {
                "$ref": {
                  "#/components/schemas/TXN_TYPE": {
                    "description": "The type of the transaction",
                    "enum": [
                      "DECLARE",
                      "DEPLOY",
                      "DEPLOY_ACCOUNT",
                      "INVOKE",
                      "L1_HANDLER"
                    ],
                    "title": "Transaction type",
                    "type": "string"
                  }
                },
                "title": "Transaction type"
              }
            },
            "required": [
              "transaction_hash",
              "actual_fee",
              "type",
              "messages_sent",
              "events",
              "finality_status",
              "execution_status",
              "execution_resources"
            ],
            "title": "Pending common receipt properties",
            "type": "object"
          }
        },
        "title": "Common receipt properties"
      }
    ],
    "description": "receipt for l1 handler transaction",
    "title": "L1 Handler Transaction Receipt"
  },
  "PENDING_STATE_UPDATE": {
    "additionalProperties": false,
    "description": "Pending state update",
    "properties": {
      "old_root": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The previous global state root",
        "title": "Old root"
      },
      "state_diff": {
        "$ref": {
          "#/components/schemas/STATE_DIFF": {
            "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
            "properties": {
              "declared_classes": {
                "items": {
                  "description": "The declared class hash and compiled class hash",
                  "properties": {
                    "class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The hash of the declared class",
                      "title": "Class hash"
                    },
                    "compiled_class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The Cairo assembly hash corresponding to the declared class",
                      "title": "Compiled class hash"
                    }
                  },
                  "title": "New classes",
                  "type": "object"
                },
                "title": "Declared classes",
                "type": "array"
              },
              "deployed_contracts": {
                "items": {
                  "$ref": {
                    "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
                      "properties": {
                        "address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the contract",
                          "title": "Address"
                        },
                        "class_hash": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The hash of the contract code",
                          "title": "Class hash"
                        }
                      },
                      "required": [
                        "address",
                        "class_hash"
                      ],
                      "title": "Deployed contract item",
                      "type": "object"
                    }
                  },
                  "description": "A new contract deployed as part of the state update"
                },
                "title": "Deployed contracts",
                "type": "array"
              },
              "deprecated_declared_classes": {
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The hash of the declared class"
                },
                "title": "Deprecated declared classes",
                "type": "array"
              },
              "nonces": {
                "items": {
                  "description": "The updated nonce per contract address",
                  "properties": {
                    "contract_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "description": "The address of the contract",
                      "title": "Contract address"
                    },
                    "nonce": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The nonce for the given address at the end of the block",
                      "title": "Nonce"
                    }
                  },
                  "title": "Nonce update",
                  "type": "object"
                },
                "title": "Nonces",
                "type": "array"
              },
              "replaced_classes": {
                "items": {
                  "description": "The list of contracts whose class was replaced",
                  "properties": {
                    "class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The new class hash",
                      "title": "Class hash"
                    },
                    "contract_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "description": "The address of the contract whose class was replaced",
                      "title": "Contract address"
                    }
                  },
                  "title": "Replaced class",
                  "type": "object"
                },
                "title": "Replaced classes",
                "type": "array"
              },
              "storage_diffs": {
                "items": {
                  "$ref": {
                    "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
                      "properties": {
                        "address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The contract address for which the storage changed",
                          "title": "Address"
                        },
                        "storage_entries": {
                          "description": "The changes in the storage of the contract",
                          "items": {
                            "properties": {
                              "key": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The key of the changed value",
                                "title": "Key"
                              },
                              "value": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The new value applied to the given address",
                                "title": "Value"
                              }
                            },
                            "title": "Storage diff item",
                            "type": "object"
                          },
                          "title": "Storage entries",
                          "type": "array"
                        }
                      },
                      "required": [
                        "address",
                        "storage_entries"
                      ],
                      "title": "Contract storage diff item",
                      "type": "object"
                    }
                  },
                  "description": "The changes in the storage per contract address"
                },
                "title": "Storage diffs",
                "type": "array"
              }
            },
            "required": [
              "storage_diffs",
              "deprecated_declared_classes",
              "declared_classes",
              "replaced_classes",
              "deployed_contracts",
              "nonces"
            ],
            "type": "object"
          }
        },
        "title": "State diff"
      }
    },
    "required": [
      "old_root",
      "state_diff"
    ],
    "title": "Pending state update",
    "type": "object"
  },
  "PENDING_TXN_RECEIPT": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/PENDING_INVOKE_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "INVOKE"
                    ],
                    "title": "Type",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Type",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a pending transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "description": "The finality status of the transaction",
                        "enum": [
                          "ACCEPTED_ON_L2"
                        ],
                        "title": "Finality status",
                        "type": "string"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      },
                      "type": {
                        "$ref": {
                          "#/components/schemas/TXN_TYPE": {
                            "description": "The type of the transaction",
                            "enum": [
                              "DECLARE",
                              "DEPLOY",
                              "DEPLOY_ACCOUNT",
                              "INVOKE",
                              "L1_HANDLER"
                            ],
                            "title": "Transaction type",
                            "type": "string"
                          }
                        },
                        "title": "Transaction type"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "type",
                      "messages_sent",
                      "events",
                      "finality_status",
                      "execution_status",
                      "execution_resources"
                    ],
                    "title": "Pending common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "title": "Invoke Transaction Receipt"
          }
        },
        "title": "Pending Invoke transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_L1_HANDLER_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "message_hash": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "The message hash as it appears on the L1 core contract",
                    "title": "Message hash"
                  },
                  "type": {
                    "enum": [
                      "L1_HANDLER"
                    ],
                    "title": "type",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message_hash"
                ],
                "title": "Transaction type",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a pending transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "description": "The finality status of the transaction",
                        "enum": [
                          "ACCEPTED_ON_L2"
                        ],
                        "title": "Finality status",
                        "type": "string"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      },
                      "type": {
                        "$ref": {
                          "#/components/schemas/TXN_TYPE": {
                            "description": "The type of the transaction",
                            "enum": [
                              "DECLARE",
                              "DEPLOY",
                              "DEPLOY_ACCOUNT",
                              "INVOKE",
                              "L1_HANDLER"
                            ],
                            "title": "Transaction type",
                            "type": "string"
                          }
                        },
                        "title": "Transaction type"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "type",
                      "messages_sent",
                      "events",
                      "finality_status",
                      "execution_status",
                      "execution_resources"
                    ],
                    "title": "Pending common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "description": "receipt for l1 handler transaction",
            "title": "L1 Handler Transaction Receipt"
          }
        },
        "title": "Pending L1 handler transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_DECLARE_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Declare txn receipt",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a pending transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "description": "The finality status of the transaction",
                        "enum": [
                          "ACCEPTED_ON_L2"
                        ],
                        "title": "Finality status",
                        "type": "string"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      },
                      "type": {
                        "$ref": {
                          "#/components/schemas/TXN_TYPE": {
                            "description": "The type of the transaction",
                            "enum": [
                              "DECLARE",
                              "DEPLOY",
                              "DEPLOY_ACCOUNT",
                              "INVOKE",
                              "L1_HANDLER"
                            ],
                            "title": "Transaction type",
                            "type": "string"
                          }
                        },
                        "title": "Transaction type"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "type",
                      "messages_sent",
                      "events",
                      "finality_status",
                      "execution_status",
                      "execution_resources"
                    ],
                    "title": "Pending common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "title": "Declare Transaction Receipt"
          }
        },
        "title": "Pending Declare transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/PENDING_DEPLOY_ACCOUNT_TXN_RECEIPT": {
            "allOf": [
              {
                "$ref": {
                  "#/components/schemas/PENDING_COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a pending transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "description": "The finality status of the transaction",
                        "enum": [
                          "ACCEPTED_ON_L2"
                        ],
                        "title": "Finality status",
                        "type": "string"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      },
                      "type": {
                        "$ref": {
                          "#/components/schemas/TXN_TYPE": {
                            "description": "The type of the transaction",
                            "enum": [
                              "DECLARE",
                              "DEPLOY",
                              "DEPLOY_ACCOUNT",
                              "INVOKE",
                              "L1_HANDLER"
                            ],
                            "title": "Transaction type",
                            "type": "string"
                          }
                        },
                        "title": "Transaction type"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "type",
                      "messages_sent",
                      "events",
                      "finality_status",
                      "execution_status",
                      "execution_resources"
                    ],
                    "title": "Pending common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              },
              {
                "properties": {
                  "contract_address": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The address of the deployed contract",
                    "title": "Contract address"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY_ACCOUNT"
                    ],
                    "title": "Deploy account",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "contract_address"
                ],
                "title": "DeployAccount txn receipt",
                "type": "object"
              }
            ],
            "title": "Deploy Account Transaction Receipt"
          }
        },
        "title": "Pending Deploy account transaction receipt"
      }
    ],
    "title": "Transaction Receipt"
  },
  "RESOURCE_LIMITS": {
    "properties": {
      "max_amount": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the max amount of the resource that can be used in the tx",
        "title": "max amount"
      },
      "max_price_per_unit": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the max price per unit of this resource for this tx",
        "title": "max price"
      }
    },
    "required": [
      "max_amount",
      "max_price_per_unit"
    ],
    "type": "object"
  },
  "RESOURCE_PRICE": {
    "properties": {
      "price_in_strk": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the price of one unit of the given resource, denominated in strk",
        "title": "price in strk"
      },
      "price_in_wei": {
        "$ref": {
          "#/components/schemas/NUM_AS_HEX": {
            "description": "An integer number in hex format (0x...)",
            "pattern": "^0x[a-fA-F0-9]+$",
            "title": "Number as hex",
            "type": "string"
          }
        },
        "description": "the price of one unit of the given resource, denominated in wei",
        "title": "price in wei"
      }
    },
    "required": [
      "price_in_wei"
    ],
    "type": "object"
  },
  "RESULT_PAGE_REQUEST": {
    "properties": {
      "chunk_size": {
        "minimum": 1,
        "title": "Chunk size",
        "type": "integer"
      },
      "continuation_token": {
        "description": "The token returned from the previous query. If no token is provided the first page is returned.",
        "title": "Continuation token",
        "type": "string"
      }
    },
    "required": [
      "chunk_size"
    ],
    "title": "Result page request",
    "type": "object"
  },
  "SIERRA_ENTRY_POINT": {
    "properties": {
      "function_idx": {
        "description": "The index of the function in the program",
        "title": "Function index",
        "type": "integer"
      },
      "selector": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "A unique identifier of the entry point (function) in the program",
        "title": "Selector"
      }
    },
    "required": [
      "selector",
      "function_idx"
    ],
    "title": "Sierra entry point",
    "type": "object"
  },
  "SIGNATURE": {
    "description": "A transaction signature",
    "items": {
      "$ref": {
        "#/components/schemas/FELT": {
          "description": "A field element. represented by at most 63 hex digits",
          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
          "title": "Field element",
          "type": "string"
        }
      }
    },
    "title": "Signature",
    "type": "array"
  },
  "STATE_DIFF": {
    "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
    "properties": {
      "declared_classes": {
        "items": {
          "description": "The declared class hash and compiled class hash",
          "properties": {
            "class_hash": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The hash of the declared class",
              "title": "Class hash"
            },
            "compiled_class_hash": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The Cairo assembly hash corresponding to the declared class",
              "title": "Compiled class hash"
            }
          },
          "title": "New classes",
          "type": "object"
        },
        "title": "Declared classes",
        "type": "array"
      },
      "deployed_contracts": {
        "items": {
          "$ref": {
            "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
              "properties": {
                "address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The address of the contract",
                  "title": "Address"
                },
                "class_hash": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The hash of the contract code",
                  "title": "Class hash"
                }
              },
              "required": [
                "address",
                "class_hash"
              ],
              "title": "Deployed contract item",
              "type": "object"
            }
          },
          "description": "A new contract deployed as part of the state update"
        },
        "title": "Deployed contracts",
        "type": "array"
      },
      "deprecated_declared_classes": {
        "items": {
          "$ref": {
            "#/components/schemas/FELT": {
              "description": "A field element. represented by at most 63 hex digits",
              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
              "title": "Field element",
              "type": "string"
            }
          },
          "description": "The hash of the declared class"
        },
        "title": "Deprecated declared classes",
        "type": "array"
      },
      "nonces": {
        "items": {
          "description": "The updated nonce per contract address",
          "properties": {
            "contract_address": {
              "$ref": {
                "#/components/schemas/ADDRESS": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "title": "Address"
                }
              },
              "description": "The address of the contract",
              "title": "Contract address"
            },
            "nonce": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The nonce for the given address at the end of the block",
              "title": "Nonce"
            }
          },
          "title": "Nonce update",
          "type": "object"
        },
        "title": "Nonces",
        "type": "array"
      },
      "replaced_classes": {
        "items": {
          "description": "The list of contracts whose class was replaced",
          "properties": {
            "class_hash": {
              "$ref": {
                "#/components/schemas/FELT": {
                  "description": "A field element. represented by at most 63 hex digits",
                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                  "title": "Field element",
                  "type": "string"
                }
              },
              "description": "The new class hash",
              "title": "Class hash"
            },
            "contract_address": {
              "$ref": {
                "#/components/schemas/ADDRESS": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "title": "Address"
                }
              },
              "description": "The address of the contract whose class was replaced",
              "title": "Contract address"
            }
          },
          "title": "Replaced class",
          "type": "object"
        },
        "title": "Replaced classes",
        "type": "array"
      },
      "storage_diffs": {
        "items": {
          "$ref": {
            "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
              "properties": {
                "address": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The contract address for which the storage changed",
                  "title": "Address"
                },
                "storage_entries": {
                  "description": "The changes in the storage of the contract",
                  "items": {
                    "properties": {
                      "key": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The key of the changed value",
                        "title": "Key"
                      },
                      "value": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The new value applied to the given address",
                        "title": "Value"
                      }
                    },
                    "title": "Storage diff item",
                    "type": "object"
                  },
                  "title": "Storage entries",
                  "type": "array"
                }
              },
              "required": [
                "address",
                "storage_entries"
              ],
              "title": "Contract storage diff item",
              "type": "object"
            }
          },
          "description": "The changes in the storage per contract address"
        },
        "title": "Storage diffs",
        "type": "array"
      }
    },
    "required": [
      "storage_diffs",
      "deprecated_declared_classes",
      "declared_classes",
      "replaced_classes",
      "deployed_contracts",
      "nonces"
    ],
    "type": "object"
  },
  "STATE_UPDATE": {
    "properties": {
      "block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "title": "Block hash"
      },
      "new_root": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The new global state root",
        "title": "New root"
      },
      "old_root": {
        "$ref": {
          "#/components/schemas/FELT": {
            "description": "A field element. represented by at most 63 hex digits",
            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
            "title": "Field element",
            "type": "string"
          }
        },
        "description": "The previous global state root",
        "title": "Old root"
      },
      "state_diff": {
        "$ref": {
          "#/components/schemas/STATE_DIFF": {
            "description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
            "properties": {
              "declared_classes": {
                "items": {
                  "description": "The declared class hash and compiled class hash",
                  "properties": {
                    "class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The hash of the declared class",
                      "title": "Class hash"
                    },
                    "compiled_class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The Cairo assembly hash corresponding to the declared class",
                      "title": "Compiled class hash"
                    }
                  },
                  "title": "New classes",
                  "type": "object"
                },
                "title": "Declared classes",
                "type": "array"
              },
              "deployed_contracts": {
                "items": {
                  "$ref": {
                    "#/components/schemas/DEPLOYED_CONTRACT_ITEM": {
                      "properties": {
                        "address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The address of the contract",
                          "title": "Address"
                        },
                        "class_hash": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The hash of the contract code",
                          "title": "Class hash"
                        }
                      },
                      "required": [
                        "address",
                        "class_hash"
                      ],
                      "title": "Deployed contract item",
                      "type": "object"
                    }
                  },
                  "description": "A new contract deployed as part of the state update"
                },
                "title": "Deployed contracts",
                "type": "array"
              },
              "deprecated_declared_classes": {
                "items": {
                  "$ref": {
                    "#/components/schemas/FELT": {
                      "description": "A field element. represented by at most 63 hex digits",
                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                      "title": "Field element",
                      "type": "string"
                    }
                  },
                  "description": "The hash of the declared class"
                },
                "title": "Deprecated declared classes",
                "type": "array"
              },
              "nonces": {
                "items": {
                  "description": "The updated nonce per contract address",
                  "properties": {
                    "contract_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "description": "The address of the contract",
                      "title": "Contract address"
                    },
                    "nonce": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The nonce for the given address at the end of the block",
                      "title": "Nonce"
                    }
                  },
                  "title": "Nonce update",
                  "type": "object"
                },
                "title": "Nonces",
                "type": "array"
              },
              "replaced_classes": {
                "items": {
                  "description": "The list of contracts whose class was replaced",
                  "properties": {
                    "class_hash": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      },
                      "description": "The new class hash",
                      "title": "Class hash"
                    },
                    "contract_address": {
                      "$ref": {
                        "#/components/schemas/ADDRESS": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "title": "Address"
                        }
                      },
                      "description": "The address of the contract whose class was replaced",
                      "title": "Contract address"
                    }
                  },
                  "title": "Replaced class",
                  "type": "object"
                },
                "title": "Replaced classes",
                "type": "array"
              },
              "storage_diffs": {
                "items": {
                  "$ref": {
                    "#/components/schemas/CONTRACT_STORAGE_DIFF_ITEM": {
                      "properties": {
                        "address": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          },
                          "description": "The contract address for which the storage changed",
                          "title": "Address"
                        },
                        "storage_entries": {
                          "description": "The changes in the storage of the contract",
                          "items": {
                            "properties": {
                              "key": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The key of the changed value",
                                "title": "Key"
                              },
                              "value": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "description": "The new value applied to the given address",
                                "title": "Value"
                              }
                            },
                            "title": "Storage diff item",
                            "type": "object"
                          },
                          "title": "Storage entries",
                          "type": "array"
                        }
                      },
                      "required": [
                        "address",
                        "storage_entries"
                      ],
                      "title": "Contract storage diff item",
                      "type": "object"
                    }
                  },
                  "description": "The changes in the storage per contract address"
                },
                "title": "Storage diffs",
                "type": "array"
              }
            },
            "required": [
              "storage_diffs",
              "deprecated_declared_classes",
              "declared_classes",
              "replaced_classes",
              "deployed_contracts",
              "nonces"
            ],
            "type": "object"
          }
        },
        "title": "State diff"
      }
    },
    "required": [
      "state_diff",
      "block_hash",
      "old_root",
      "new_root"
    ],
    "title": "State update",
    "type": "object"
  },
  "STORAGE_KEY": {
    "$comment": "A storage key, represented as a string of hex digits",
    "description": "A storage key. Represented as up to 62 hex digits, 3 bits, and 5 leading zeroes.",
    "pattern": "^0x0[0-7]{1}[a-fA-F0-9]{0,62}$",
    "title": "Storage key",
    "type": "string"
  },
  "STRUCT_ABI_ENTRY": {
    "properties": {
      "members": {
        "items": {
          "$ref": {
            "#/components/schemas/STRUCT_MEMBER": {
              "allOf": [
                {
                  "$ref": {
                    "#/components/schemas/TYPED_PARAMETER": {
                      "properties": {
                        "name": {
                          "description": "The parameter's name",
                          "title": "Parameter name",
                          "type": "string"
                        },
                        "type": {
                          "description": "The parameter's type",
                          "title": "Parameter type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Typed parameter",
                      "type": "object"
                    }
                  },
                  "title": "Typed parameter"
                },
                {
                  "properties": {
                    "offset": {
                      "description": "offset of this property within the struct",
                      "title": "Offset",
                      "type": "integer"
                    }
                  },
                  "title": "Offset",
                  "type": "object"
                }
              ],
              "title": "Struct member"
            }
          }
        },
        "title": "Members",
        "type": "array"
      },
      "name": {
        "description": "The struct name",
        "title": "Struct name",
        "type": "string"
      },
      "size": {
        "minimum": 1,
        "title": "Size",
        "type": "integer"
      },
      "type": {
        "$ref": {
          "#/components/schemas/STRUCT_ABI_TYPE": {
            "enum": [
              "struct"
            ],
            "title": "Struct ABI type",
            "type": "string"
          }
        },
        "title": "Struct ABI type"
      }
    },
    "required": [
      "type",
      "name",
      "size",
      "members"
    ],
    "title": "Struct ABI entry",
    "type": "object"
  },
  "STRUCT_ABI_TYPE": {
    "enum": [
      "struct"
    ],
    "title": "Struct ABI type",
    "type": "string"
  },
  "STRUCT_MEMBER": {
    "allOf": [
      {
        "$ref": {
          "#/components/schemas/TYPED_PARAMETER": {
            "properties": {
              "name": {
                "description": "The parameter's name",
                "title": "Parameter name",
                "type": "string"
              },
              "type": {
                "description": "The parameter's type",
                "title": "Parameter type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Typed parameter",
            "type": "object"
          }
        },
        "title": "Typed parameter"
      },
      {
        "properties": {
          "offset": {
            "description": "offset of this property within the struct",
            "title": "Offset",
            "type": "integer"
          }
        },
        "title": "Offset",
        "type": "object"
      }
    ],
    "title": "Struct member"
  },
  "SYNC_STATUS": {
    "description": "An object describing the node synchronization status",
    "properties": {
      "current_block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of the current block being synchronized",
        "title": "Current block hash"
      },
      "current_block_num": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The number (height) of the current block being synchronized",
        "title": "Current block number"
      },
      "highest_block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of the estimated highest block to be synchronized",
        "title": "Highest block hash"
      },
      "highest_block_num": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The number (height) of the estimated highest block to be synchronized",
        "title": "Highest block number"
      },
      "starting_block_hash": {
        "$ref": {
          "#/components/schemas/BLOCK_HASH": {
            "$ref": {
              "#/components/schemas/FELT": {
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                "title": "Field element",
                "type": "string"
              }
            },
            "title": "Block hash"
          }
        },
        "description": "The hash of the block from which the sync started",
        "title": "Starting block hash"
      },
      "starting_block_num": {
        "$ref": {
          "#/components/schemas/BLOCK_NUMBER": {
            "description": "The block's number (its height)",
            "minimum": 0,
            "title": "Block number",
            "type": "integer"
          }
        },
        "description": "The number (height) of the block from which the sync started",
        "title": "Starting block number"
      }
    },
    "required": [
      "starting_block_hash",
      "starting_block_num",
      "current_block_hash",
      "current_block_num",
      "highest_block_hash",
      "highest_block_num"
    ],
    "title": "Sync status",
    "type": "object"
  },
  "TXN": {
    "description": "The transaction schema, as it appears inside a block",
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN": {
            "description": "Initiate a transaction from an account",
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_V0": {
                    "description": "invokes a specific function in the desired contract (not necessarily an account)",
                    "properties": {
                      "calldata": {
                        "description": "The parameters passed to the function",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Calldata",
                        "type": "array"
                      },
                      "contract_address": {
                        "$ref": {
                          "#/components/schemas/ADDRESS": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Address"
                          }
                        },
                        "title": "Contract address"
                      },
                      "entry_point_selector": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Entry point selector"
                      },
                      "max_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The maximal fee that can be charged for including the transaction",
                        "title": "Max fee"
                      },
                      "signature": {
                        "$ref": {
                          "#/components/schemas/SIGNATURE": {
                            "description": "A transaction signature",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Signature",
                            "type": "array"
                          }
                        },
                        "title": "Signature"
                      },
                      "type": {
                        "enum": [
                          "INVOKE"
                        ],
                        "title": "Type",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the transaction scheme",
                        "enum": [
                          "0x0"
                        ],
                        "title": "Version",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "contract_address",
                      "entry_point_selector",
                      "calldata",
                      "max_fee",
                      "version",
                      "signature"
                    ],
                    "title": "Invoke transaction V0"
                  }
                },
                "title": "Invoke transaction V0"
              },
              {
                "$ref": {
                  "#/components/schemas/INVOKE_TXN_V1": {
                    "allOf": [
                      {
                        "properties": {
                          "calldata": {
                            "description": "The data expected by the account's `execute` function (in most usecases, this includes the called contract address and a function selector)",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "calldata",
                            "type": "array"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "title": "sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "INVOKE"
                            ],
                            "title": "Type",
                            "type": "string"
                          },
                          "version": {
                            "$ref": {
                              "#/components/schemas/NUM_AS_HEX": {
                                "description": "An integer number in hex format (0x...)",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "Number as hex",
                                "type": "string"
                              }
                            },
                            "description": "Version of the transaction scheme",
                            "title": "Version"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "calldata",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "initiates a transaction from a given account",
                    "title": "Invoke transaction V1"
                  }
                },
                "title": "Invoke transaction V1"
              }
            ],
            "title": "Invoke transaction"
          }
        },
        "title": "Invoke transaction"
      },
      {
        "$ref": {
          "#/components/schemas/L1_HANDLER_TXN": {
            "allOf": [
              {
                "description": "a call to an l1_handler on an L2 contract induced by a message from L1",
                "properties": {
                  "nonce": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent",
                    "title": "Nonce"
                  },
                  "type": {
                    "enum": [
                      "L1_HANDLER"
                    ],
                    "title": "type",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "version",
                  "type",
                  "nonce"
                ],
                "title": "L1 handler transaction",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/FUNCTION_CALL": {
                    "description": "Function call information",
                    "properties": {
                      "calldata": {
                        "description": "The parameters passed to the function",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Calldata",
                        "type": "array"
                      },
                      "contract_address": {
                        "$ref": {
                          "#/components/schemas/ADDRESS": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Address"
                          }
                        },
                        "title": "Contract address"
                      },
                      "entry_point_selector": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Entry point selector"
                      }
                    },
                    "required": [
                      "contract_address",
                      "entry_point_selector",
                      "calldata"
                    ],
                    "title": "Function call",
                    "type": "object"
                  }
                },
                "title": "Function call"
              }
            ],
            "title": "L1 Handler transaction"
          }
        },
        "title": "L1 handler transaction"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN": {
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_V0": {
                    "allOf": [
                      {
                        "properties": {
                          "class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the declared class",
                            "title": "Class hash"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x0"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "max_fee",
                          "version",
                          "signature",
                          "class_hash"
                        ],
                        "title": "Declare txn v0",
                        "type": "object"
                      }
                    ],
                    "description": "Declare Contract Transaction V0",
                    "title": "Declare Contract Transaction V0"
                  }
                },
                "title": "Declare transaction V0"
              },
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_V1": {
                    "allOf": [
                      {
                        "properties": {
                          "class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the declared class",
                            "title": "Class hash"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x1"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "class_hash"
                        ],
                        "title": "Declare txn v1",
                        "type": "object"
                      }
                    ],
                    "description": "Declare Contract Transaction V1",
                    "title": "Declare Contract Transaction V1"
                  }
                },
                "title": "Declare transaction V1"
              },
              {
                "$ref": {
                  "#/components/schemas/DECLARE_TXN_V2": {
                    "allOf": [
                      {
                        "properties": {
                          "class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the declared class",
                            "title": "Class hash"
                          },
                          "compiled_class_hash": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The hash of the Cairo assembly resulting from the Sierra compilation",
                            "title": "Compiled class hash"
                          },
                          "max_fee": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The maximal fee that can be charged for including the transaction",
                            "title": "Max fee"
                          },
                          "nonce": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Nonce"
                          },
                          "sender_address": {
                            "$ref": {
                              "#/components/schemas/ADDRESS": {
                                "$ref": {
                                  "#/components/schemas/FELT": {
                                    "description": "A field element. represented by at most 63 hex digits",
                                    "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                    "title": "Field element",
                                    "type": "string"
                                  }
                                },
                                "title": "Address"
                              }
                            },
                            "description": "The address of the account contract sending the declaration transaction",
                            "title": "Sender address"
                          },
                          "signature": {
                            "$ref": {
                              "#/components/schemas/SIGNATURE": {
                                "description": "A transaction signature",
                                "items": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  }
                                },
                                "title": "Signature",
                                "type": "array"
                              }
                            },
                            "title": "Signature"
                          },
                          "type": {
                            "enum": [
                              "DECLARE"
                            ],
                            "title": "Declare",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the transaction scheme",
                            "enum": [
                              "0x2"
                            ],
                            "title": "Version",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "sender_address",
                          "compiled_class_hash",
                          "max_fee",
                          "version",
                          "signature",
                          "nonce",
                          "class_hash"
                        ],
                        "title": "Declare txn v2",
                        "type": "object"
                      }
                    ],
                    "description": "Declare Contract Transaction V2",
                    "title": "Declare Transaction V2"
                  }
                },
                "title": "Declare transaction V2"
              }
            ],
            "title": "Declare transaction"
          }
        },
        "title": "Declare transaction"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_TXN": {
            "allOf": [
              {
                "properties": {
                  "class_hash": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The hash of the deployed contract's class",
                    "title": "Class hash"
                  },
                  "constructor_calldata": {
                    "description": "The parameters passed to the constructor",
                    "items": {
                      "$ref": {
                        "#/components/schemas/FELT": {
                          "description": "A field element. represented by at most 63 hex digits",
                          "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                          "title": "Field element",
                          "type": "string"
                        }
                      }
                    },
                    "title": "Constructor calldata",
                    "type": "array"
                  },
                  "contract_address_salt": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The salt for the address of the deployed contract",
                    "title": "Contract address salt"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY"
                    ],
                    "title": "Deploy",
                    "type": "string"
                  },
                  "version": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "Version of the transaction scheme",
                    "title": "Version"
                  }
                },
                "required": [
                  "version",
                  "type",
                  "constructor_calldata",
                  "contract_address_salt",
                  "class_hash"
                ],
                "title": "Deploy txn",
                "type": "object"
              }
            ],
            "description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions",
            "title": "Deploy Contract Transaction"
          }
        },
        "title": "Deploy transaction"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_ACCOUNT_TXN": {
            "description": "deploys a new account contract",
            "oneOf": [
              {
                "$ref": {
                  "#/components/schemas/DEPLOY_ACCOUNT_TXN_V1": {
                    "description": "Deploys an account contract, charges fee from the pre-funded account addresses",
                    "properties": {
                      "class_hash": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The hash of the deployed contract's class",
                        "title": "Class hash"
                      },
                      "constructor_calldata": {
                        "description": "The parameters passed to the constructor",
                        "items": {
                          "$ref": {
                            "#/components/schemas/FELT": {
                              "description": "A field element. represented by at most 63 hex digits",
                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                              "title": "Field element",
                              "type": "string"
                            }
                          }
                        },
                        "title": "Constructor calldata",
                        "type": "array"
                      },
                      "contract_address_salt": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The salt for the address of the deployed contract",
                        "title": "Contract address salt"
                      },
                      "max_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The maximal fee that can be charged for including the transaction",
                        "title": "Max fee"
                      },
                      "nonce": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "title": "Nonce"
                      },
                      "signature": {
                        "$ref": {
                          "#/components/schemas/SIGNATURE": {
                            "description": "A transaction signature",
                            "items": {
                              "$ref": {
                                "#/components/schemas/FELT": {
                                  "description": "A field element. represented by at most 63 hex digits",
                                  "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                  "title": "Field element",
                                  "type": "string"
                                }
                              }
                            },
                            "title": "Signature",
                            "type": "array"
                          }
                        },
                        "title": "Signature"
                      },
                      "type": {
                        "enum": [
                          "DEPLOY_ACCOUNT"
                        ],
                        "title": "Deploy account",
                        "type": "string"
                      },
                      "version": {
                        "$ref": {
                          "#/components/schemas/NUM_AS_HEX": {
                            "description": "An integer number in hex format (0x...)",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "Number as hex",
                            "type": "string"
                          }
                        },
                        "description": "Version of the transaction scheme",
                        "title": "Version"
                      }
                    },
                    "required": [
                      "max_fee",
                      "version",
                      "signature",
                      "nonce",
                      "type",
                      "contract_address_salt",
                      "constructor_calldata",
                      "class_hash"
                    ],
                    "title": "Deploy account transaction"
                  }
                },
                "title": "Deploy account V1"
              }
            ],
            "title": "Deploy account transaction"
          }
        },
        "title": "Deploy account transaction"
      }
    ],
    "title": "Transaction"
  },
  "TXN_EXECUTION_STATUS": {
    "description": "The execution status of the transaction",
    "enum": [
      "SUCCEEDED",
      "REVERTED"
    ],
    "title": "Execution status",
    "type": "string"
  },
  "TXN_FINALITY_STATUS": {
    "description": "The finality status of the transaction",
    "enum": [
      "ACCEPTED_ON_L2",
      "ACCEPTED_ON_L1"
    ],
    "title": "Finality status",
    "type": "string"
  },
  "TXN_HASH": {
    "$ref": {
      "#/components/schemas/FELT": {
        "description": "A field element. represented by at most 63 hex digits",
        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
        "title": "Field element",
        "type": "string"
      }
    },
    "description": "The transaction hash, as assigned in StarkNet",
    "title": "Transaction hash"
  },
  "TXN_RECEIPT": {
    "oneOf": [
      {
        "$ref": {
          "#/components/schemas/INVOKE_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "INVOKE"
                    ],
                    "title": "Type",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Type",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events",
                      "execution_resources"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "title": "Invoke Transaction Receipt"
          }
        },
        "title": "Invoke transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/L1_HANDLER_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "message_hash": {
                    "$ref": {
                      "#/components/schemas/NUM_AS_HEX": {
                        "description": "An integer number in hex format (0x...)",
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "title": "Number as hex",
                        "type": "string"
                      }
                    },
                    "description": "The message hash as it appears on the L1 core contract",
                    "title": "Message hash"
                  },
                  "type": {
                    "enum": [
                      "L1_HANDLER"
                    ],
                    "title": "type",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message_hash"
                ],
                "title": "Transaction type",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events",
                      "execution_resources"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "description": "receipt for l1 handler transaction",
            "title": "L1 Handler Transaction Receipt"
          }
        },
        "title": "L1 handler transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/DECLARE_TXN_RECEIPT": {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "DECLARE"
                    ],
                    "title": "Declare",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Declare txn receipt",
                "type": "object"
              },
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events",
                      "execution_resources"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              }
            ],
            "title": "Declare Transaction Receipt"
          }
        },
        "title": "Declare transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_TXN_RECEIPT": {
            "allOf": [
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events",
                      "execution_resources"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              },
              {
                "properties": {
                  "contract_address": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The address of the deployed contract",
                    "title": "Contract address"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY"
                    ],
                    "title": "Deploy",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "contract_address"
                ],
                "title": "Deploy txn receipt",
                "type": "object"
              }
            ],
            "title": "Deploy Transaction Receipt"
          }
        },
        "title": "Deploy transaction receipt"
      },
      {
        "$ref": {
          "#/components/schemas/DEPLOY_ACCOUNT_TXN_RECEIPT": {
            "allOf": [
              {
                "$ref": {
                  "#/components/schemas/COMMON_RECEIPT_PROPERTIES": {
                    "description": "Common properties for a transaction receipt",
                    "properties": {
                      "actual_fee": {
                        "$ref": {
                          "#/components/schemas/FELT": {
                            "description": "A field element. represented by at most 63 hex digits",
                            "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                            "title": "Field element",
                            "type": "string"
                          }
                        },
                        "description": "The fee that was charged by the sequencer",
                        "title": "Actual fee"
                      },
                      "block_hash": {
                        "$ref": {
                          "#/components/schemas/BLOCK_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "title": "Block hash"
                          }
                        },
                        "title": "Block hash"
                      },
                      "block_number": {
                        "$ref": {
                          "#/components/schemas/BLOCK_NUMBER": {
                            "description": "The block's number (its height)",
                            "minimum": 0,
                            "title": "Block number",
                            "type": "integer"
                          }
                        },
                        "title": "Block number"
                      },
                      "events": {
                        "description": "The events emitted as part of this transaction",
                        "items": {
                          "$ref": {
                            "#/components/schemas/EVENT": {
                              "allOf": [
                                {
                                  "properties": {
                                    "from_address": {
                                      "$ref": {
                                        "#/components/schemas/ADDRESS": {
                                          "$ref": {
                                            "#/components/schemas/FELT": {
                                              "description": "A field element. represented by at most 63 hex digits",
                                              "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                              "title": "Field element",
                                              "type": "string"
                                            }
                                          },
                                          "title": "Address"
                                        }
                                      },
                                      "title": "From address"
                                    }
                                  },
                                  "required": [
                                    "from_address"
                                  ],
                                  "title": "Event emitter",
                                  "type": "object"
                                },
                                {
                                  "$ref": {
                                    "#/components/schemas/EVENT_CONTENT": {
                                      "description": "The content of an event",
                                      "properties": {
                                        "data": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Data",
                                          "type": "array"
                                        },
                                        "keys": {
                                          "items": {
                                            "$ref": {
                                              "#/components/schemas/FELT": {
                                                "description": "A field element. represented by at most 63 hex digits",
                                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                                "title": "Field element",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "title": "Keys",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "keys",
                                        "data"
                                      ],
                                      "title": "Event content",
                                      "type": "object"
                                    }
                                  },
                                  "title": "Event content"
                                }
                              ],
                              "description": "A StarkNet event",
                              "title": "Event"
                            }
                          }
                        },
                        "title": "Events",
                        "type": "array"
                      },
                      "execution_resources": {
                        "$ref": {
                          "#/components/schemas/EXECUTION_RESOURCES": {
                            "description": "The resources consumed by the transaction",
                            "properties": {
                              "bitwise_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of BITWISE builtin instances",
                                "title": "BITWISE applications"
                              },
                              "ec_op_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of EC_OP builtin instances",
                                "title": "EC_OP applications"
                              },
                              "ecdsa_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "the number of ECDSA builtin instances",
                                "title": "ECDSA applications"
                              },
                              "keccak_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of KECCAK builtin instances",
                                "title": "Keccak applications"
                              },
                              "memory_holes": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
                                "title": "Memory holes"
                              },
                              "pedersen_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Pedersen builtin instances",
                                "title": "Pedersen applications"
                              },
                              "poseidon_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Poseidon builtin instances",
                                "title": "Poseidon applications"
                              },
                              "range_check_builtin_applications": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of RANGE_CHECK builtin instances",
                                "title": "Range check applications"
                              },
                              "steps": {
                                "$ref": {
                                  "#/components/schemas/NUM_AS_HEX": {
                                    "description": "An integer number in hex format (0x...)",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "Number as hex",
                                    "type": "string"
                                  }
                                },
                                "description": "The number of Cairo steps used",
                                "title": "Steps"
                              }
                            },
                            "required": [
                              "steps",
                              "range_check_builtin_applications",
                              "pedersen_builtin_applications",
                              "poseidon_builtin_applications",
                              "ec_op_builtin_applications",
                              "ecdsa_builtin_applications",
                              "bitwise_builtin_applications",
                              "keccak_builtin_applications"
                            ],
                            "title": "Execution resources",
                            "type": "object"
                          }
                        },
                        "description": "The resources consumed by the transaction",
                        "title": "Execution resources"
                      },
                      "execution_status": {
                        "$ref": {
                          "#/components/schemas/TXN_EXECUTION_STATUS": {
                            "description": "The execution status of the transaction",
                            "enum": [
                              "SUCCEEDED",
                              "REVERTED"
                            ],
                            "title": "Execution status",
                            "type": "string"
                          }
                        },
                        "title": "Execution status"
                      },
                      "finality_status": {
                        "$ref": {
                          "#/components/schemas/TXN_FINALITY_STATUS": {
                            "description": "The finality status of the transaction",
                            "enum": [
                              "ACCEPTED_ON_L2",
                              "ACCEPTED_ON_L1"
                            ],
                            "title": "Finality status",
                            "type": "string"
                          }
                        },
                        "title": "Finality status"
                      },
                      "messages_sent": {
                        "items": {
                          "$ref": {
                            "#/components/schemas/MSG_TO_L1": {
                              "properties": {
                                "from_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The address of the L2 contract sending the message"
                                },
                                "payload": {
                                  "description": "The payload of the message",
                                  "items": {
                                    "$ref": {
                                      "#/components/schemas/FELT": {
                                        "description": "A field element. represented by at most 63 hex digits",
                                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                        "title": "Field element",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "title": "Payload",
                                  "type": "array"
                                },
                                "to_address": {
                                  "$ref": {
                                    "#/components/schemas/FELT": {
                                      "description": "A field element. represented by at most 63 hex digits",
                                      "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                      "title": "Field element",
                                      "type": "string"
                                    }
                                  },
                                  "description": "The target L1 address the message is sent to",
                                  "title": "To address"
                                }
                              },
                              "required": [
                                "from_address",
                                "to_address",
                                "payload"
                              ],
                              "title": "Message to L1",
                              "type": "object"
                            }
                          }
                        },
                        "title": "Messages sent",
                        "type": "array"
                      },
                      "revert_reason": {
                        "description": "the revert reason for the failed execution",
                        "name": "revert reason",
                        "title": "Revert reason",
                        "type": "string"
                      },
                      "transaction_hash": {
                        "$ref": {
                          "#/components/schemas/TXN_HASH": {
                            "$ref": {
                              "#/components/schemas/FELT": {
                                "description": "A field element. represented by at most 63 hex digits",
                                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                                "title": "Field element",
                                "type": "string"
                              }
                            },
                            "description": "The transaction hash, as assigned in StarkNet",
                            "title": "Transaction hash"
                          }
                        },
                        "description": "The hash identifying the transaction",
                        "title": "Transaction hash"
                      }
                    },
                    "required": [
                      "transaction_hash",
                      "actual_fee",
                      "finality_status",
                      "execution_status",
                      "block_hash",
                      "block_number",
                      "messages_sent",
                      "events",
                      "execution_resources"
                    ],
                    "title": "Common receipt properties",
                    "type": "object"
                  }
                },
                "title": "Common receipt properties"
              },
              {
                "properties": {
                  "contract_address": {
                    "$ref": {
                      "#/components/schemas/FELT": {
                        "description": "A field element. represented by at most 63 hex digits",
                        "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$",
                        "title": "Field element",
                        "type": "string"
                      }
                    },
                    "description": "The address of the deployed contract",
                    "title": "Contract address"
                  },
                  "type": {
                    "enum": [
                      "DEPLOY_ACCOUNT"
                    ],
                    "title": "Deploy account",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "contract_address"
                ],
                "title": "DeployAccount txn receipt",
                "type": "object"
              }
            ],
            "title": "Deploy Account Transaction Receipt"
          }
        },
        "title": "Deploy account transaction receipt"
      }
    ],
    "title": "Transaction Receipt"
  },
  "TXN_STATUS": {
    "description": "The finality status of the transaction, including the case the txn is still in the mempool or failed validation during the block construction phase",
    "enum": [
      "RECEIVED",
      "REJECTED",
      "ACCEPTED_ON_L2",
      "ACCEPTED_ON_L1"
    ],
    "title": "Transaction status",
    "type": "string"
  },
  "TXN_TYPE": {
    "description": "The type of the transaction",
    "enum": [
      "DECLARE",
      "DEPLOY",
      "DEPLOY_ACCOUNT",
      "INVOKE",
      "L1_HANDLER"
    ],
    "title": "Transaction type",
    "type": "string"
  },
  "TYPED_PARAMETER": {
    "properties": {
      "name": {
        "description": "The parameter's name",
        "title": "Parameter name",
        "type": "string"
      },
      "type": {
        "description": "The parameter's type",
        "title": "Parameter type",
        "type": "string"
      }
    },
    "required": [
      "name",
      "type"
    ],
    "title": "Typed parameter",
    "type": "object"
  }
}